/*! For license information please see index.js.LICENSE.txt */
(()=>{var t={3426:(t,e,i)=>{"use strict";i.r(e),i.d(e,{decode:()=>s,encode:()=>o});for(var n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",r="undefined"==typeof Uint8Array?[]:new Uint8Array(256),a=0;a<n.length;a++)r[n.charCodeAt(a)]=a;var o=function(t){var e,i=new Uint8Array(t),r=i.length,a="";for(e=0;e<r;e+=3)a+=n[i[e]>>2],a+=n[(3&i[e])<<4|i[e+1]>>4],a+=n[(15&i[e+1])<<2|i[e+2]>>6],a+=n[63&i[e+2]];return r%3==2?a=a.substring(0,a.length-1)+"=":r%3==1&&(a=a.substring(0,a.length-2)+"=="),a},s=function(t){var e,i,n,a,o,s=.75*t.length,l=t.length,u=0;"="===t[t.length-1]&&(s--,"="===t[t.length-2]&&s--);var h=new ArrayBuffer(s),c=new Uint8Array(h);for(e=0;e<l;e+=4)i=r[t.charCodeAt(e)],n=r[t.charCodeAt(e+1)],a=r[t.charCodeAt(e+2)],o=r[t.charCodeAt(e+3)],c[u++]=i<<2|n>>4,c[u++]=(15&n)<<4|a>>2,c[u++]=(3&a)<<6|63&o;return h}},6194:(t,e,i)=>{"use strict";i.r(e),i.d(e,{Easing:()=>a,Group:()=>s,Interpolation:()=>l,Sequence:()=>u,Tween:()=>c,VERSION:()=>d,add:()=>_,default:()=>y,getAll:()=>f,nextId:()=>p,now:()=>o,remove:()=>v,removeAll:()=>g,update:()=>b});var n,r=i(4155),a={Linear:{None:function(t){return t}},Quadratic:{In:function(t){return t*t},Out:function(t){return t*(2-t)},InOut:function(t){return(t*=2)<1?.5*t*t:-.5*(--t*(t-2)-1)}},Cubic:{In:function(t){return t*t*t},Out:function(t){return--t*t*t+1},InOut:function(t){return(t*=2)<1?.5*t*t*t:.5*((t-=2)*t*t+2)}},Quartic:{In:function(t){return t*t*t*t},Out:function(t){return 1- --t*t*t*t},InOut:function(t){return(t*=2)<1?.5*t*t*t*t:-.5*((t-=2)*t*t*t-2)}},Quintic:{In:function(t){return t*t*t*t*t},Out:function(t){return--t*t*t*t*t+1},InOut:function(t){return(t*=2)<1?.5*t*t*t*t*t:.5*((t-=2)*t*t*t*t+2)}},Sinusoidal:{In:function(t){return 1-Math.cos(t*Math.PI/2)},Out:function(t){return Math.sin(t*Math.PI/2)},InOut:function(t){return.5*(1-Math.cos(Math.PI*t))}},Exponential:{In:function(t){return 0===t?0:Math.pow(1024,t-1)},Out:function(t){return 1===t?1:1-Math.pow(2,-10*t)},InOut:function(t){return 0===t?0:1===t?1:(t*=2)<1?.5*Math.pow(1024,t-1):.5*(2-Math.pow(2,-10*(t-1)))}},Circular:{In:function(t){return 1-Math.sqrt(1-t*t)},Out:function(t){return Math.sqrt(1- --t*t)},InOut:function(t){return(t*=2)<1?-.5*(Math.sqrt(1-t*t)-1):.5*(Math.sqrt(1-(t-=2)*t)+1)}},Elastic:{In:function(t){return 0===t?0:1===t?1:-Math.pow(2,10*(t-1))*Math.sin(5*(t-1.1)*Math.PI)},Out:function(t){return 0===t?0:1===t?1:Math.pow(2,-10*t)*Math.sin(5*(t-.1)*Math.PI)+1},InOut:function(t){return 0===t?0:1===t?1:(t*=2)<1?-.5*Math.pow(2,10*(t-1))*Math.sin(5*(t-1.1)*Math.PI):.5*Math.pow(2,-10*(t-1))*Math.sin(5*(t-1.1)*Math.PI)+1}},Back:{In:function(t){var e=1.70158;return t*t*((e+1)*t-e)},Out:function(t){var e=1.70158;return--t*t*((e+1)*t+e)+1},InOut:function(t){var e=2.5949095;return(t*=2)<1?t*t*((e+1)*t-e)*.5:.5*((t-=2)*t*((e+1)*t+e)+2)}},Bounce:{In:function(t){return 1-a.Bounce.Out(1-t)},Out:function(t){return t<1/2.75?7.5625*t*t:t<2/2.75?7.5625*(t-=1.5/2.75)*t+.75:t<2.5/2.75?7.5625*(t-=2.25/2.75)*t+.9375:7.5625*(t-=2.625/2.75)*t+.984375},InOut:function(t){return t<.5?.5*a.Bounce.In(2*t):.5*a.Bounce.Out(2*t-1)+.5}}},o="undefined"==typeof self&&void 0!==r&&r.hrtime?function(){var t=r.hrtime();return 1e3*t[0]+t[1]/1e6}:"undefined"!=typeof self&&void 0!==self.performance&&void 0!==self.performance.now?self.performance.now.bind(self.performance):void 0!==Date.now?Date.now:function(){return(new Date).getTime()},s=function(){function t(){this._tweens={},this._tweensAddedDuringUpdate={}}return t.prototype.getAll=function(){var t=this;return Object.keys(this._tweens).map((function(e){return t._tweens[e]}))},t.prototype.removeAll=function(){this._tweens={}},t.prototype.add=function(t){this._tweens[t.getId()]=t,this._tweensAddedDuringUpdate[t.getId()]=t},t.prototype.remove=function(t){delete this._tweens[t.getId()],delete this._tweensAddedDuringUpdate[t.getId()]},t.prototype.update=function(t,e){void 0===t&&(t=o()),void 0===e&&(e=!1);var i=Object.keys(this._tweens);if(0===i.length)return!1;for(;i.length>0;){this._tweensAddedDuringUpdate={};for(var n=0;n<i.length;n++){var r=this._tweens[i[n]],a=!e;r&&!1===r.update(t,a)&&!e&&delete this._tweens[i[n]]}i=Object.keys(this._tweensAddedDuringUpdate)}return!0},t}(),l={Linear:function(t,e){var i=t.length-1,n=i*e,r=Math.floor(n),a=l.Utils.Linear;return e<0?a(t[0],t[1],n):e>1?a(t[i],t[i-1],i-n):a(t[r],t[r+1>i?i:r+1],n-r)},Bezier:function(t,e){for(var i=0,n=t.length-1,r=Math.pow,a=l.Utils.Bernstein,o=0;o<=n;o++)i+=r(1-e,n-o)*r(e,o)*t[o]*a(n,o);return i},CatmullRom:function(t,e){var i=t.length-1,n=i*e,r=Math.floor(n),a=l.Utils.CatmullRom;return t[0]===t[i]?(e<0&&(r=Math.floor(n=i*(1+e))),a(t[(r-1+i)%i],t[r],t[(r+1)%i],t[(r+2)%i],n-r)):e<0?t[0]-(a(t[0],t[0],t[1],t[1],-n)-t[0]):e>1?t[i]-(a(t[i],t[i],t[i-1],t[i-1],n-i)-t[i]):a(t[r?r-1:0],t[r],t[i<r+1?i:r+1],t[i<r+2?i:r+2],n-r)},Utils:{Linear:function(t,e,i){return(e-t)*i+t},Bernstein:function(t,e){var i=l.Utils.Factorial;return i(t)/i(e)/i(t-e)},Factorial:(n=[1],function(t){var e=1;if(n[t])return n[t];for(var i=t;i>1;i--)e*=i;return n[t]=e,e}),CatmullRom:function(t,e,i,n,r){var a=.5*(i-t),o=.5*(n-e),s=r*r;return(2*e-2*i+a+o)*(r*s)+(-3*e+3*i-2*a-o)*s+a*r+e}}},u=function(){function t(){}return t.nextId=function(){return t._nextId++},t._nextId=0,t}(),h=new s,c=function(){function t(t,e){void 0===e&&(e=h),this._object=t,this._group=e,this._isPaused=!1,this._pauseStart=0,this._valuesStart={},this._valuesEnd={},this._valuesStartRepeat={},this._duration=1e3,this._initialRepeat=0,this._repeat=0,this._yoyo=!1,this._isPlaying=!1,this._reversed=!1,this._delayTime=0,this._startTime=0,this._easingFunction=a.Linear.None,this._interpolationFunction=l.Linear,this._chainedTweens=[],this._onStartCallbackFired=!1,this._id=u.nextId(),this._isChainStopped=!1,this._goToEnd=!1}return t.prototype.getId=function(){return this._id},t.prototype.isPlaying=function(){return this._isPlaying},t.prototype.isPaused=function(){return this._isPaused},t.prototype.to=function(t,e){return this._valuesEnd=Object.create(t),void 0!==e&&(this._duration=e),this},t.prototype.duration=function(t){return this._duration=t,this},t.prototype.start=function(t){if(this._isPlaying)return this;if(this._group&&this._group.add(this),this._repeat=this._initialRepeat,this._reversed)for(var e in this._reversed=!1,this._valuesStartRepeat)this._swapEndStartRepeatValues(e),this._valuesStart[e]=this._valuesStartRepeat[e];return this._isPlaying=!0,this._isPaused=!1,this._onStartCallbackFired=!1,this._isChainStopped=!1,this._startTime=void 0!==t?"string"==typeof t?o()+parseFloat(t):t:o(),this._startTime+=this._delayTime,this._setupProperties(this._object,this._valuesStart,this._valuesEnd,this._valuesStartRepeat),this},t.prototype._setupProperties=function(t,e,i,n){for(var r in i){var a=t[r],o=Array.isArray(a),s=o?"array":typeof a,l=!o&&Array.isArray(i[r]);if("undefined"!==s&&"function"!==s){if(l){var u=i[r];if(0===u.length)continue;u=u.map(this._handleRelativeValue.bind(this,a)),i[r]=[a].concat(u)}if("object"!==s&&!o||!a||l)void 0===e[r]&&(e[r]=a),o||(e[r]*=1),n[r]=l?i[r].slice().reverse():e[r]||0;else{for(var h in e[r]=o?[]:{},a)e[r][h]=a[h];n[r]=o?[]:{},this._setupProperties(a,e[r],i[r],n[r])}}}},t.prototype.stop=function(){return this._isChainStopped||(this._isChainStopped=!0,this.stopChainedTweens()),this._isPlaying?(this._group&&this._group.remove(this),this._isPlaying=!1,this._isPaused=!1,this._onStopCallback&&this._onStopCallback(this._object),this):this},t.prototype.end=function(){return this._goToEnd=!0,this.update(1/0),this},t.prototype.pause=function(t){return void 0===t&&(t=o()),this._isPaused||!this._isPlaying||(this._isPaused=!0,this._pauseStart=t,this._group&&this._group.remove(this)),this},t.prototype.resume=function(t){return void 0===t&&(t=o()),this._isPaused&&this._isPlaying?(this._isPaused=!1,this._startTime+=t-this._pauseStart,this._pauseStart=0,this._group&&this._group.add(this),this):this},t.prototype.stopChainedTweens=function(){for(var t=0,e=this._chainedTweens.length;t<e;t++)this._chainedTweens[t].stop();return this},t.prototype.group=function(t){return this._group=t,this},t.prototype.delay=function(t){return this._delayTime=t,this},t.prototype.repeat=function(t){return this._initialRepeat=t,this._repeat=t,this},t.prototype.repeatDelay=function(t){return this._repeatDelayTime=t,this},t.prototype.yoyo=function(t){return this._yoyo=t,this},t.prototype.easing=function(t){return this._easingFunction=t,this},t.prototype.interpolation=function(t){return this._interpolationFunction=t,this},t.prototype.chain=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return this._chainedTweens=t,this},t.prototype.onStart=function(t){return this._onStartCallback=t,this},t.prototype.onUpdate=function(t){return this._onUpdateCallback=t,this},t.prototype.onRepeat=function(t){return this._onRepeatCallback=t,this},t.prototype.onComplete=function(t){return this._onCompleteCallback=t,this},t.prototype.onStop=function(t){return this._onStopCallback=t,this},t.prototype.update=function(t,e){if(void 0===t&&(t=o()),void 0===e&&(e=!0),this._isPaused)return!0;var i,n,r=this._startTime+this._duration;if(!this._goToEnd&&!this._isPlaying){if(t>r)return!1;e&&this.start(t)}if(this._goToEnd=!1,t<this._startTime)return!0;!1===this._onStartCallbackFired&&(this._onStartCallback&&this._onStartCallback(this._object),this._onStartCallbackFired=!0),n=(t-this._startTime)/this._duration,n=0===this._duration||n>1?1:n;var a=this._easingFunction(n);if(this._updateProperties(this._object,this._valuesStart,this._valuesEnd,a),this._onUpdateCallback&&this._onUpdateCallback(this._object,n),1===n){if(this._repeat>0){for(i in isFinite(this._repeat)&&this._repeat--,this._valuesStartRepeat)this._yoyo||"string"!=typeof this._valuesEnd[i]||(this._valuesStartRepeat[i]=this._valuesStartRepeat[i]+parseFloat(this._valuesEnd[i])),this._yoyo&&this._swapEndStartRepeatValues(i),this._valuesStart[i]=this._valuesStartRepeat[i];return this._yoyo&&(this._reversed=!this._reversed),void 0!==this._repeatDelayTime?this._startTime=t+this._repeatDelayTime:this._startTime=t+this._delayTime,this._onRepeatCallback&&this._onRepeatCallback(this._object),!0}this._onCompleteCallback&&this._onCompleteCallback(this._object);for(var s=0,l=this._chainedTweens.length;s<l;s++)this._chainedTweens[s].start(this._startTime+this._duration);return this._isPlaying=!1,!1}return!0},t.prototype._updateProperties=function(t,e,i,n){for(var r in i)if(void 0!==e[r]){var a=e[r]||0,o=i[r],s=Array.isArray(t[r]),l=Array.isArray(o);!s&&l?t[r]=this._interpolationFunction(o,n):"object"==typeof o&&o?this._updateProperties(t[r],a,o,n):"number"==typeof(o=this._handleRelativeValue(a,o))&&(t[r]=a+(o-a)*n)}},t.prototype._handleRelativeValue=function(t,e){return"string"!=typeof e?e:"+"===e.charAt(0)||"-"===e.charAt(0)?t+parseFloat(e):parseFloat(e)},t.prototype._swapEndStartRepeatValues=function(t){var e=this._valuesStartRepeat[t],i=this._valuesEnd[t];this._valuesStartRepeat[t]="string"==typeof i?this._valuesStartRepeat[t]+parseFloat(i):this._valuesEnd[t],this._valuesEnd[t]=e},t}(),d="18.6.4",p=u.nextId,m=h,f=m.getAll.bind(m),g=m.removeAll.bind(m),_=m.add.bind(m),v=m.remove.bind(m),b=m.update.bind(m);const y={Easing:a,Group:s,Interpolation:l,now:o,Sequence:u,nextId:p,Tween:c,VERSION:d,getAll:f,removeAll:g,add:_,remove:v,update:b}},9742:(t,e)=>{"use strict";e.byteLength=function(t){var e=l(t),i=e[0],n=e[1];return 3*(i+n)/4-n},e.toByteArray=function(t){var e,i,a=l(t),o=a[0],s=a[1],u=new r(function(t,e,i){return 3*(e+i)/4-i}(0,o,s)),h=0,c=s>0?o-4:o;for(i=0;i<c;i+=4)e=n[t.charCodeAt(i)]<<18|n[t.charCodeAt(i+1)]<<12|n[t.charCodeAt(i+2)]<<6|n[t.charCodeAt(i+3)],u[h++]=e>>16&255,u[h++]=e>>8&255,u[h++]=255&e;return 2===s&&(e=n[t.charCodeAt(i)]<<2|n[t.charCodeAt(i+1)]>>4,u[h++]=255&e),1===s&&(e=n[t.charCodeAt(i)]<<10|n[t.charCodeAt(i+1)]<<4|n[t.charCodeAt(i+2)]>>2,u[h++]=e>>8&255,u[h++]=255&e),u},e.fromByteArray=function(t){for(var e,n=t.length,r=n%3,a=[],o=16383,s=0,l=n-r;s<l;s+=o)a.push(u(t,s,s+o>l?l:s+o));return 1===r?(e=t[n-1],a.push(i[e>>2]+i[e<<4&63]+"==")):2===r&&(e=(t[n-2]<<8)+t[n-1],a.push(i[e>>10]+i[e>>4&63]+i[e<<2&63]+"=")),a.join("")};for(var i=[],n=[],r="undefined"!=typeof Uint8Array?Uint8Array:Array,a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",o=0,s=a.length;o<s;++o)i[o]=a[o],n[a.charCodeAt(o)]=o;function l(t){var e=t.length;if(e%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var i=t.indexOf("=");return-1===i&&(i=e),[i,i===e?0:4-i%4]}function u(t,e,n){for(var r,a,o=[],s=e;s<n;s+=3)r=(t[s]<<16&16711680)+(t[s+1]<<8&65280)+(255&t[s+2]),o.push(i[(a=r)>>18&63]+i[a>>12&63]+i[a>>6&63]+i[63&a]);return o.join("")}n["-".charCodeAt(0)]=62,n["_".charCodeAt(0)]=63},8764:(t,e,i)=>{"use strict";const n=i(9742),r=i(645),a="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;e.Buffer=l,e.SlowBuffer=function(t){return+t!=t&&(t=0),l.alloc(+t)},e.INSPECT_MAX_BYTES=50;const o=2147483647;function s(t){if(t>o)throw new RangeError('The value "'+t+'" is invalid for option "size"');const e=new Uint8Array(t);return Object.setPrototypeOf(e,l.prototype),e}function l(t,e,i){if("number"==typeof t){if("string"==typeof e)throw new TypeError('The "string" argument must be of type string. Received type number');return c(t)}return u(t,e,i)}function u(t,e,i){if("string"==typeof t)return function(t,e){if("string"==typeof e&&""!==e||(e="utf8"),!l.isEncoding(e))throw new TypeError("Unknown encoding: "+e);const i=0|f(t,e);let n=s(i);const r=n.write(t,e);return r!==i&&(n=n.slice(0,r)),n}(t,e);if(ArrayBuffer.isView(t))return function(t){if(Z(t,Uint8Array)){const e=new Uint8Array(t);return p(e.buffer,e.byteOffset,e.byteLength)}return d(t)}(t);if(null==t)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t);if(Z(t,ArrayBuffer)||t&&Z(t.buffer,ArrayBuffer))return p(t,e,i);if("undefined"!=typeof SharedArrayBuffer&&(Z(t,SharedArrayBuffer)||t&&Z(t.buffer,SharedArrayBuffer)))return p(t,e,i);if("number"==typeof t)throw new TypeError('The "value" argument must not be of type number. Received type number');const n=t.valueOf&&t.valueOf();if(null!=n&&n!==t)return l.from(n,e,i);const r=function(t){if(l.isBuffer(t)){const e=0|m(t.length),i=s(e);return 0===i.length||t.copy(i,0,0,e),i}return void 0!==t.length?"number"!=typeof t.length||J(t.length)?s(0):d(t):"Buffer"===t.type&&Array.isArray(t.data)?d(t.data):void 0}(t);if(r)return r;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof t[Symbol.toPrimitive])return l.from(t[Symbol.toPrimitive]("string"),e,i);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t)}function h(t){if("number"!=typeof t)throw new TypeError('"size" argument must be of type number');if(t<0)throw new RangeError('The value "'+t+'" is invalid for option "size"')}function c(t){return h(t),s(t<0?0:0|m(t))}function d(t){const e=t.length<0?0:0|m(t.length),i=s(e);for(let n=0;n<e;n+=1)i[n]=255&t[n];return i}function p(t,e,i){if(e<0||t.byteLength<e)throw new RangeError('"offset" is outside of buffer bounds');if(t.byteLength<e+(i||0))throw new RangeError('"length" is outside of buffer bounds');let n;return n=void 0===e&&void 0===i?new Uint8Array(t):void 0===i?new Uint8Array(t,e):new Uint8Array(t,e,i),Object.setPrototypeOf(n,l.prototype),n}function m(t){if(t>=o)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+o.toString(16)+" bytes");return 0|t}function f(t,e){if(l.isBuffer(t))return t.length;if(ArrayBuffer.isView(t)||Z(t,ArrayBuffer))return t.byteLength;if("string"!=typeof t)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof t);const i=t.length,n=arguments.length>2&&!0===arguments[2];if(!n&&0===i)return 0;let r=!1;for(;;)switch(e){case"ascii":case"latin1":case"binary":return i;case"utf8":case"utf-8":return j(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*i;case"hex":return i>>>1;case"base64":return Y(t).length;default:if(r)return n?-1:j(t).length;e=(""+e).toLowerCase(),r=!0}}function g(t,e,i){let n=!1;if((void 0===e||e<0)&&(e=0),e>this.length)return"";if((void 0===i||i>this.length)&&(i=this.length),i<=0)return"";if((i>>>=0)<=(e>>>=0))return"";for(t||(t="utf8");;)switch(t){case"hex":return L(this,e,i);case"utf8":case"utf-8":return T(this,e,i);case"ascii":return A(this,e,i);case"latin1":case"binary":return z(this,e,i);case"base64":return S(this,e,i);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return R(this,e,i);default:if(n)throw new TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),n=!0}}function _(t,e,i){const n=t[e];t[e]=t[i],t[i]=n}function v(t,e,i,n,r){if(0===t.length)return-1;if("string"==typeof i?(n=i,i=0):i>2147483647?i=2147483647:i<-2147483648&&(i=-2147483648),J(i=+i)&&(i=r?0:t.length-1),i<0&&(i=t.length+i),i>=t.length){if(r)return-1;i=t.length-1}else if(i<0){if(!r)return-1;i=0}if("string"==typeof e&&(e=l.from(e,n)),l.isBuffer(e))return 0===e.length?-1:b(t,e,i,n,r);if("number"==typeof e)return e&=255,"function"==typeof Uint8Array.prototype.indexOf?r?Uint8Array.prototype.indexOf.call(t,e,i):Uint8Array.prototype.lastIndexOf.call(t,e,i):b(t,[e],i,n,r);throw new TypeError("val must be string, number or Buffer")}function b(t,e,i,n,r){let a,o=1,s=t.length,l=e.length;if(void 0!==n&&("ucs2"===(n=String(n).toLowerCase())||"ucs-2"===n||"utf16le"===n||"utf-16le"===n)){if(t.length<2||e.length<2)return-1;o=2,s/=2,l/=2,i/=2}function u(t,e){return 1===o?t[e]:t.readUInt16BE(e*o)}if(r){let n=-1;for(a=i;a<s;a++)if(u(t,a)===u(e,-1===n?0:a-n)){if(-1===n&&(n=a),a-n+1===l)return n*o}else-1!==n&&(a-=a-n),n=-1}else for(i+l>s&&(i=s-l),a=i;a>=0;a--){let i=!0;for(let n=0;n<l;n++)if(u(t,a+n)!==u(e,n)){i=!1;break}if(i)return a}return-1}function y(t,e,i,n){i=Number(i)||0;const r=t.length-i;n?(n=Number(n))>r&&(n=r):n=r;const a=e.length;let o;for(n>a/2&&(n=a/2),o=0;o<n;++o){const n=parseInt(e.substr(2*o,2),16);if(J(n))return o;t[i+o]=n}return o}function x(t,e,i,n){return X(j(e,t.length-i),t,i,n)}function w(t,e,i,n){return X(function(t){const e=[];for(let i=0;i<t.length;++i)e.push(255&t.charCodeAt(i));return e}(e),t,i,n)}function M(t,e,i,n){return X(Y(e),t,i,n)}function E(t,e,i,n){return X(function(t,e){let i,n,r;const a=[];for(let o=0;o<t.length&&!((e-=2)<0);++o)i=t.charCodeAt(o),n=i>>8,r=i%256,a.push(r),a.push(n);return a}(e,t.length-i),t,i,n)}function S(t,e,i){return 0===e&&i===t.length?n.fromByteArray(t):n.fromByteArray(t.slice(e,i))}function T(t,e,i){i=Math.min(t.length,i);const n=[];let r=e;for(;r<i;){const e=t[r];let a=null,o=e>239?4:e>223?3:e>191?2:1;if(r+o<=i){let i,n,s,l;switch(o){case 1:e<128&&(a=e);break;case 2:i=t[r+1],128==(192&i)&&(l=(31&e)<<6|63&i,l>127&&(a=l));break;case 3:i=t[r+1],n=t[r+2],128==(192&i)&&128==(192&n)&&(l=(15&e)<<12|(63&i)<<6|63&n,l>2047&&(l<55296||l>57343)&&(a=l));break;case 4:i=t[r+1],n=t[r+2],s=t[r+3],128==(192&i)&&128==(192&n)&&128==(192&s)&&(l=(15&e)<<18|(63&i)<<12|(63&n)<<6|63&s,l>65535&&l<1114112&&(a=l))}}null===a?(a=65533,o=1):a>65535&&(a-=65536,n.push(a>>>10&1023|55296),a=56320|1023&a),n.push(a),r+=o}return function(t){const e=t.length;if(e<=k)return String.fromCharCode.apply(String,t);let i="",n=0;for(;n<e;)i+=String.fromCharCode.apply(String,t.slice(n,n+=k));return i}(n)}e.kMaxLength=o,l.TYPED_ARRAY_SUPPORT=function(){try{const t=new Uint8Array(1),e={foo:function(){return 42}};return Object.setPrototypeOf(e,Uint8Array.prototype),Object.setPrototypeOf(t,e),42===t.foo()}catch(t){return!1}}(),l.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(l.prototype,"parent",{enumerable:!0,get:function(){if(l.isBuffer(this))return this.buffer}}),Object.defineProperty(l.prototype,"offset",{enumerable:!0,get:function(){if(l.isBuffer(this))return this.byteOffset}}),l.poolSize=8192,l.from=function(t,e,i){return u(t,e,i)},Object.setPrototypeOf(l.prototype,Uint8Array.prototype),Object.setPrototypeOf(l,Uint8Array),l.alloc=function(t,e,i){return function(t,e,i){return h(t),t<=0?s(t):void 0!==e?"string"==typeof i?s(t).fill(e,i):s(t).fill(e):s(t)}(t,e,i)},l.allocUnsafe=function(t){return c(t)},l.allocUnsafeSlow=function(t){return c(t)},l.isBuffer=function(t){return null!=t&&!0===t._isBuffer&&t!==l.prototype},l.compare=function(t,e){if(Z(t,Uint8Array)&&(t=l.from(t,t.offset,t.byteLength)),Z(e,Uint8Array)&&(e=l.from(e,e.offset,e.byteLength)),!l.isBuffer(t)||!l.isBuffer(e))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(t===e)return 0;let i=t.length,n=e.length;for(let r=0,a=Math.min(i,n);r<a;++r)if(t[r]!==e[r]){i=t[r],n=e[r];break}return i<n?-1:n<i?1:0},l.isEncoding=function(t){switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},l.concat=function(t,e){if(!Array.isArray(t))throw new TypeError('"list" argument must be an Array of Buffers');if(0===t.length)return l.alloc(0);let i;if(void 0===e)for(e=0,i=0;i<t.length;++i)e+=t[i].length;const n=l.allocUnsafe(e);let r=0;for(i=0;i<t.length;++i){let e=t[i];if(Z(e,Uint8Array))r+e.length>n.length?(l.isBuffer(e)||(e=l.from(e)),e.copy(n,r)):Uint8Array.prototype.set.call(n,e,r);else{if(!l.isBuffer(e))throw new TypeError('"list" argument must be an Array of Buffers');e.copy(n,r)}r+=e.length}return n},l.byteLength=f,l.prototype._isBuffer=!0,l.prototype.swap16=function(){const t=this.length;if(t%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let e=0;e<t;e+=2)_(this,e,e+1);return this},l.prototype.swap32=function(){const t=this.length;if(t%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let e=0;e<t;e+=4)_(this,e,e+3),_(this,e+1,e+2);return this},l.prototype.swap64=function(){const t=this.length;if(t%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let e=0;e<t;e+=8)_(this,e,e+7),_(this,e+1,e+6),_(this,e+2,e+5),_(this,e+3,e+4);return this},l.prototype.toString=function(){const t=this.length;return 0===t?"":0===arguments.length?T(this,0,t):g.apply(this,arguments)},l.prototype.toLocaleString=l.prototype.toString,l.prototype.equals=function(t){if(!l.isBuffer(t))throw new TypeError("Argument must be a Buffer");return this===t||0===l.compare(this,t)},l.prototype.inspect=function(){let t="";const i=e.INSPECT_MAX_BYTES;return t=this.toString("hex",0,i).replace(/(.{2})/g,"$1 ").trim(),this.length>i&&(t+=" ... "),"<Buffer "+t+">"},a&&(l.prototype[a]=l.prototype.inspect),l.prototype.compare=function(t,e,i,n,r){if(Z(t,Uint8Array)&&(t=l.from(t,t.offset,t.byteLength)),!l.isBuffer(t))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof t);if(void 0===e&&(e=0),void 0===i&&(i=t?t.length:0),void 0===n&&(n=0),void 0===r&&(r=this.length),e<0||i>t.length||n<0||r>this.length)throw new RangeError("out of range index");if(n>=r&&e>=i)return 0;if(n>=r)return-1;if(e>=i)return 1;if(this===t)return 0;let a=(r>>>=0)-(n>>>=0),o=(i>>>=0)-(e>>>=0);const s=Math.min(a,o),u=this.slice(n,r),h=t.slice(e,i);for(let t=0;t<s;++t)if(u[t]!==h[t]){a=u[t],o=h[t];break}return a<o?-1:o<a?1:0},l.prototype.includes=function(t,e,i){return-1!==this.indexOf(t,e,i)},l.prototype.indexOf=function(t,e,i){return v(this,t,e,i,!0)},l.prototype.lastIndexOf=function(t,e,i){return v(this,t,e,i,!1)},l.prototype.write=function(t,e,i,n){if(void 0===e)n="utf8",i=this.length,e=0;else if(void 0===i&&"string"==typeof e)n=e,i=this.length,e=0;else{if(!isFinite(e))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");e>>>=0,isFinite(i)?(i>>>=0,void 0===n&&(n="utf8")):(n=i,i=void 0)}const r=this.length-e;if((void 0===i||i>r)&&(i=r),t.length>0&&(i<0||e<0)||e>this.length)throw new RangeError("Attempt to write outside buffer bounds");n||(n="utf8");let a=!1;for(;;)switch(n){case"hex":return y(this,t,e,i);case"utf8":case"utf-8":return x(this,t,e,i);case"ascii":case"latin1":case"binary":return w(this,t,e,i);case"base64":return M(this,t,e,i);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return E(this,t,e,i);default:if(a)throw new TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),a=!0}},l.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};const k=4096;function A(t,e,i){let n="";i=Math.min(t.length,i);for(let r=e;r<i;++r)n+=String.fromCharCode(127&t[r]);return n}function z(t,e,i){let n="";i=Math.min(t.length,i);for(let r=e;r<i;++r)n+=String.fromCharCode(t[r]);return n}function L(t,e,i){const n=t.length;(!e||e<0)&&(e=0),(!i||i<0||i>n)&&(i=n);let r="";for(let n=e;n<i;++n)r+=K[t[n]];return r}function R(t,e,i){const n=t.slice(e,i);let r="";for(let t=0;t<n.length-1;t+=2)r+=String.fromCharCode(n[t]+256*n[t+1]);return r}function C(t,e,i){if(t%1!=0||t<0)throw new RangeError("offset is not uint");if(t+e>i)throw new RangeError("Trying to access beyond buffer length")}function P(t,e,i,n,r,a){if(!l.isBuffer(t))throw new TypeError('"buffer" argument must be a Buffer instance');if(e>r||e<a)throw new RangeError('"value" argument is out of bounds');if(i+n>t.length)throw new RangeError("Index out of range")}function q(t,e,i,n,r){U(e,n,r,t,i,7);let a=Number(e&BigInt(4294967295));t[i++]=a,a>>=8,t[i++]=a,a>>=8,t[i++]=a,a>>=8,t[i++]=a;let o=Number(e>>BigInt(32)&BigInt(4294967295));return t[i++]=o,o>>=8,t[i++]=o,o>>=8,t[i++]=o,o>>=8,t[i++]=o,i}function D(t,e,i,n,r){U(e,n,r,t,i,7);let a=Number(e&BigInt(4294967295));t[i+7]=a,a>>=8,t[i+6]=a,a>>=8,t[i+5]=a,a>>=8,t[i+4]=a;let o=Number(e>>BigInt(32)&BigInt(4294967295));return t[i+3]=o,o>>=8,t[i+2]=o,o>>=8,t[i+1]=o,o>>=8,t[i]=o,i+8}function I(t,e,i,n,r,a){if(i+n>t.length)throw new RangeError("Index out of range");if(i<0)throw new RangeError("Index out of range")}function B(t,e,i,n,a){return e=+e,i>>>=0,a||I(t,0,i,4),r.write(t,e,i,n,23,4),i+4}function O(t,e,i,n,a){return e=+e,i>>>=0,a||I(t,0,i,8),r.write(t,e,i,n,52,8),i+8}l.prototype.slice=function(t,e){const i=this.length;(t=~~t)<0?(t+=i)<0&&(t=0):t>i&&(t=i),(e=void 0===e?i:~~e)<0?(e+=i)<0&&(e=0):e>i&&(e=i),e<t&&(e=t);const n=this.subarray(t,e);return Object.setPrototypeOf(n,l.prototype),n},l.prototype.readUintLE=l.prototype.readUIntLE=function(t,e,i){t>>>=0,e>>>=0,i||C(t,e,this.length);let n=this[t],r=1,a=0;for(;++a<e&&(r*=256);)n+=this[t+a]*r;return n},l.prototype.readUintBE=l.prototype.readUIntBE=function(t,e,i){t>>>=0,e>>>=0,i||C(t,e,this.length);let n=this[t+--e],r=1;for(;e>0&&(r*=256);)n+=this[t+--e]*r;return n},l.prototype.readUint8=l.prototype.readUInt8=function(t,e){return t>>>=0,e||C(t,1,this.length),this[t]},l.prototype.readUint16LE=l.prototype.readUInt16LE=function(t,e){return t>>>=0,e||C(t,2,this.length),this[t]|this[t+1]<<8},l.prototype.readUint16BE=l.prototype.readUInt16BE=function(t,e){return t>>>=0,e||C(t,2,this.length),this[t]<<8|this[t+1]},l.prototype.readUint32LE=l.prototype.readUInt32LE=function(t,e){return t>>>=0,e||C(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},l.prototype.readUint32BE=l.prototype.readUInt32BE=function(t,e){return t>>>=0,e||C(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},l.prototype.readBigUInt64LE=$((function(t){G(t>>>=0,"offset");const e=this[t],i=this[t+7];void 0!==e&&void 0!==i||V(t,this.length-8);const n=e+256*this[++t]+65536*this[++t]+this[++t]*2**24,r=this[++t]+256*this[++t]+65536*this[++t]+i*2**24;return BigInt(n)+(BigInt(r)<<BigInt(32))})),l.prototype.readBigUInt64BE=$((function(t){G(t>>>=0,"offset");const e=this[t],i=this[t+7];void 0!==e&&void 0!==i||V(t,this.length-8);const n=e*2**24+65536*this[++t]+256*this[++t]+this[++t],r=this[++t]*2**24+65536*this[++t]+256*this[++t]+i;return(BigInt(n)<<BigInt(32))+BigInt(r)})),l.prototype.readIntLE=function(t,e,i){t>>>=0,e>>>=0,i||C(t,e,this.length);let n=this[t],r=1,a=0;for(;++a<e&&(r*=256);)n+=this[t+a]*r;return r*=128,n>=r&&(n-=Math.pow(2,8*e)),n},l.prototype.readIntBE=function(t,e,i){t>>>=0,e>>>=0,i||C(t,e,this.length);let n=e,r=1,a=this[t+--n];for(;n>0&&(r*=256);)a+=this[t+--n]*r;return r*=128,a>=r&&(a-=Math.pow(2,8*e)),a},l.prototype.readInt8=function(t,e){return t>>>=0,e||C(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},l.prototype.readInt16LE=function(t,e){t>>>=0,e||C(t,2,this.length);const i=this[t]|this[t+1]<<8;return 32768&i?4294901760|i:i},l.prototype.readInt16BE=function(t,e){t>>>=0,e||C(t,2,this.length);const i=this[t+1]|this[t]<<8;return 32768&i?4294901760|i:i},l.prototype.readInt32LE=function(t,e){return t>>>=0,e||C(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},l.prototype.readInt32BE=function(t,e){return t>>>=0,e||C(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},l.prototype.readBigInt64LE=$((function(t){G(t>>>=0,"offset");const e=this[t],i=this[t+7];void 0!==e&&void 0!==i||V(t,this.length-8);const n=this[t+4]+256*this[t+5]+65536*this[t+6]+(i<<24);return(BigInt(n)<<BigInt(32))+BigInt(e+256*this[++t]+65536*this[++t]+this[++t]*2**24)})),l.prototype.readBigInt64BE=$((function(t){G(t>>>=0,"offset");const e=this[t],i=this[t+7];void 0!==e&&void 0!==i||V(t,this.length-8);const n=(e<<24)+65536*this[++t]+256*this[++t]+this[++t];return(BigInt(n)<<BigInt(32))+BigInt(this[++t]*2**24+65536*this[++t]+256*this[++t]+i)})),l.prototype.readFloatLE=function(t,e){return t>>>=0,e||C(t,4,this.length),r.read(this,t,!0,23,4)},l.prototype.readFloatBE=function(t,e){return t>>>=0,e||C(t,4,this.length),r.read(this,t,!1,23,4)},l.prototype.readDoubleLE=function(t,e){return t>>>=0,e||C(t,8,this.length),r.read(this,t,!0,52,8)},l.prototype.readDoubleBE=function(t,e){return t>>>=0,e||C(t,8,this.length),r.read(this,t,!1,52,8)},l.prototype.writeUintLE=l.prototype.writeUIntLE=function(t,e,i,n){t=+t,e>>>=0,i>>>=0,n||P(this,t,e,i,Math.pow(2,8*i)-1,0);let r=1,a=0;for(this[e]=255&t;++a<i&&(r*=256);)this[e+a]=t/r&255;return e+i},l.prototype.writeUintBE=l.prototype.writeUIntBE=function(t,e,i,n){t=+t,e>>>=0,i>>>=0,n||P(this,t,e,i,Math.pow(2,8*i)-1,0);let r=i-1,a=1;for(this[e+r]=255&t;--r>=0&&(a*=256);)this[e+r]=t/a&255;return e+i},l.prototype.writeUint8=l.prototype.writeUInt8=function(t,e,i){return t=+t,e>>>=0,i||P(this,t,e,1,255,0),this[e]=255&t,e+1},l.prototype.writeUint16LE=l.prototype.writeUInt16LE=function(t,e,i){return t=+t,e>>>=0,i||P(this,t,e,2,65535,0),this[e]=255&t,this[e+1]=t>>>8,e+2},l.prototype.writeUint16BE=l.prototype.writeUInt16BE=function(t,e,i){return t=+t,e>>>=0,i||P(this,t,e,2,65535,0),this[e]=t>>>8,this[e+1]=255&t,e+2},l.prototype.writeUint32LE=l.prototype.writeUInt32LE=function(t,e,i){return t=+t,e>>>=0,i||P(this,t,e,4,4294967295,0),this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t,e+4},l.prototype.writeUint32BE=l.prototype.writeUInt32BE=function(t,e,i){return t=+t,e>>>=0,i||P(this,t,e,4,4294967295,0),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t,e+4},l.prototype.writeBigUInt64LE=$((function(t,e=0){return q(this,t,e,BigInt(0),BigInt("0xffffffffffffffff"))})),l.prototype.writeBigUInt64BE=$((function(t,e=0){return D(this,t,e,BigInt(0),BigInt("0xffffffffffffffff"))})),l.prototype.writeIntLE=function(t,e,i,n){if(t=+t,e>>>=0,!n){const n=Math.pow(2,8*i-1);P(this,t,e,i,n-1,-n)}let r=0,a=1,o=0;for(this[e]=255&t;++r<i&&(a*=256);)t<0&&0===o&&0!==this[e+r-1]&&(o=1),this[e+r]=(t/a>>0)-o&255;return e+i},l.prototype.writeIntBE=function(t,e,i,n){if(t=+t,e>>>=0,!n){const n=Math.pow(2,8*i-1);P(this,t,e,i,n-1,-n)}let r=i-1,a=1,o=0;for(this[e+r]=255&t;--r>=0&&(a*=256);)t<0&&0===o&&0!==this[e+r+1]&&(o=1),this[e+r]=(t/a>>0)-o&255;return e+i},l.prototype.writeInt8=function(t,e,i){return t=+t,e>>>=0,i||P(this,t,e,1,127,-128),t<0&&(t=255+t+1),this[e]=255&t,e+1},l.prototype.writeInt16LE=function(t,e,i){return t=+t,e>>>=0,i||P(this,t,e,2,32767,-32768),this[e]=255&t,this[e+1]=t>>>8,e+2},l.prototype.writeInt16BE=function(t,e,i){return t=+t,e>>>=0,i||P(this,t,e,2,32767,-32768),this[e]=t>>>8,this[e+1]=255&t,e+2},l.prototype.writeInt32LE=function(t,e,i){return t=+t,e>>>=0,i||P(this,t,e,4,2147483647,-2147483648),this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24,e+4},l.prototype.writeInt32BE=function(t,e,i){return t=+t,e>>>=0,i||P(this,t,e,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t,e+4},l.prototype.writeBigInt64LE=$((function(t,e=0){return q(this,t,e,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),l.prototype.writeBigInt64BE=$((function(t,e=0){return D(this,t,e,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),l.prototype.writeFloatLE=function(t,e,i){return B(this,t,e,!0,i)},l.prototype.writeFloatBE=function(t,e,i){return B(this,t,e,!1,i)},l.prototype.writeDoubleLE=function(t,e,i){return O(this,t,e,!0,i)},l.prototype.writeDoubleBE=function(t,e,i){return O(this,t,e,!1,i)},l.prototype.copy=function(t,e,i,n){if(!l.isBuffer(t))throw new TypeError("argument should be a Buffer");if(i||(i=0),n||0===n||(n=this.length),e>=t.length&&(e=t.length),e||(e=0),n>0&&n<i&&(n=i),n===i)return 0;if(0===t.length||0===this.length)return 0;if(e<0)throw new RangeError("targetStart out of bounds");if(i<0||i>=this.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("sourceEnd out of bounds");n>this.length&&(n=this.length),t.length-e<n-i&&(n=t.length-e+i);const r=n-i;return this===t&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(e,i,n):Uint8Array.prototype.set.call(t,this.subarray(i,n),e),r},l.prototype.fill=function(t,e,i,n){if("string"==typeof t){if("string"==typeof e?(n=e,e=0,i=this.length):"string"==typeof i&&(n=i,i=this.length),void 0!==n&&"string"!=typeof n)throw new TypeError("encoding must be a string");if("string"==typeof n&&!l.isEncoding(n))throw new TypeError("Unknown encoding: "+n);if(1===t.length){const e=t.charCodeAt(0);("utf8"===n&&e<128||"latin1"===n)&&(t=e)}}else"number"==typeof t?t&=255:"boolean"==typeof t&&(t=Number(t));if(e<0||this.length<e||this.length<i)throw new RangeError("Out of range index");if(i<=e)return this;let r;if(e>>>=0,i=void 0===i?this.length:i>>>0,t||(t=0),"number"==typeof t)for(r=e;r<i;++r)this[r]=t;else{const a=l.isBuffer(t)?t:l.from(t,n),o=a.length;if(0===o)throw new TypeError('The value "'+t+'" is invalid for argument "value"');for(r=0;r<i-e;++r)this[r+e]=a[r%o]}return this};const F={};function N(t,e,i){F[t]=class extends i{constructor(){super(),Object.defineProperty(this,"message",{value:e.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${t}]`,this.stack,delete this.name}get code(){return t}set code(t){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:t,writable:!0})}toString(){return`${this.name} [${t}]: ${this.message}`}}}function H(t){let e="",i=t.length;const n="-"===t[0]?1:0;for(;i>=n+4;i-=3)e=`_${t.slice(i-3,i)}${e}`;return`${t.slice(0,i)}${e}`}function U(t,e,i,n,r,a){if(t>i||t<e){const n="bigint"==typeof e?"n":"";let r;throw r=a>3?0===e||e===BigInt(0)?`>= 0${n} and < 2${n} ** ${8*(a+1)}${n}`:`>= -(2${n} ** ${8*(a+1)-1}${n}) and < 2 ** ${8*(a+1)-1}${n}`:`>= ${e}${n} and <= ${i}${n}`,new F.ERR_OUT_OF_RANGE("value",r,t)}!function(t,e,i){G(e,"offset"),void 0!==t[e]&&void 0!==t[e+i]||V(e,t.length-(i+1))}(n,r,a)}function G(t,e){if("number"!=typeof t)throw new F.ERR_INVALID_ARG_TYPE(e,"number",t)}function V(t,e,i){if(Math.floor(t)!==t)throw G(t,i),new F.ERR_OUT_OF_RANGE(i||"offset","an integer",t);if(e<0)throw new F.ERR_BUFFER_OUT_OF_BOUNDS;throw new F.ERR_OUT_OF_RANGE(i||"offset",`>= ${i?1:0} and <= ${e}`,t)}N("ERR_BUFFER_OUT_OF_BOUNDS",(function(t){return t?`${t} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"}),RangeError),N("ERR_INVALID_ARG_TYPE",(function(t,e){return`The "${t}" argument must be of type number. Received type ${typeof e}`}),TypeError),N("ERR_OUT_OF_RANGE",(function(t,e,i){let n=`The value of "${t}" is out of range.`,r=i;return Number.isInteger(i)&&Math.abs(i)>2**32?r=H(String(i)):"bigint"==typeof i&&(r=String(i),(i>BigInt(2)**BigInt(32)||i<-(BigInt(2)**BigInt(32)))&&(r=H(r)),r+="n"),n+=` It must be ${e}. Received ${r}`,n}),RangeError);const W=/[^+/0-9A-Za-z-_]/g;function j(t,e){let i;e=e||1/0;const n=t.length;let r=null;const a=[];for(let o=0;o<n;++o){if(i=t.charCodeAt(o),i>55295&&i<57344){if(!r){if(i>56319){(e-=3)>-1&&a.push(239,191,189);continue}if(o+1===n){(e-=3)>-1&&a.push(239,191,189);continue}r=i;continue}if(i<56320){(e-=3)>-1&&a.push(239,191,189),r=i;continue}i=65536+(r-55296<<10|i-56320)}else r&&(e-=3)>-1&&a.push(239,191,189);if(r=null,i<128){if((e-=1)<0)break;a.push(i)}else if(i<2048){if((e-=2)<0)break;a.push(i>>6|192,63&i|128)}else if(i<65536){if((e-=3)<0)break;a.push(i>>12|224,i>>6&63|128,63&i|128)}else{if(!(i<1114112))throw new Error("Invalid code point");if((e-=4)<0)break;a.push(i>>18|240,i>>12&63|128,i>>6&63|128,63&i|128)}}return a}function Y(t){return n.toByteArray(function(t){if((t=(t=t.split("=")[0]).trim().replace(W,"")).length<2)return"";for(;t.length%4!=0;)t+="=";return t}(t))}function X(t,e,i,n){let r;for(r=0;r<n&&!(r+i>=e.length||r>=t.length);++r)e[r+i]=t[r];return r}function Z(t,e){return t instanceof e||null!=t&&null!=t.constructor&&null!=t.constructor.name&&t.constructor.name===e.name}function J(t){return t!=t}const K=function(){const t="0123456789abcdef",e=new Array(256);for(let i=0;i<16;++i){const n=16*i;for(let r=0;r<16;++r)e[n+r]=t[i]+t[r]}return e}();function $(t){return"undefined"==typeof BigInt?Q:t}function Q(){throw new Error("BigInt not supported")}},4802:(t,e,i)=>{var n=i(4155);e.formatArgs=function(e){if(e[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+e[0]+(this.useColors?"%c ":" ")+"+"+t.exports.humanize(this.diff),!this.useColors)return;const i="color: "+this.color;e.splice(1,0,i,"color: inherit");let n=0,r=0;e[0].replace(/%[a-zA-Z%]/g,(t=>{"%%"!==t&&(n++,"%c"===t&&(r=n))})),e.splice(r,0,i)},e.save=function(t){try{t?e.storage.setItem("debug",t):e.storage.removeItem("debug")}catch(t){}},e.load=function(){let t;try{t=e.storage.getItem("debug")}catch(t){}return!t&&void 0!==n&&"env"in n&&(t=n.env.DEBUG),t},e.useColors=function(){return!("undefined"==typeof window||!window.process||"renderer"!==window.process.type&&!window.process.__nwjs)||("undefined"==typeof navigator||!navigator.userAgent||!navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))&&("undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/))},e.storage=function(){try{return localStorage}catch(t){}}(),e.destroy=(()=>{let t=!1;return()=>{t||(t=!0,console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))}})(),e.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],e.log=console.debug||console.log||(()=>{}),t.exports=i(804)(e);const{formatters:r}=t.exports;r.j=function(t){try{return JSON.stringify(t)}catch(t){return"[UnexpectedJSONParseError]: "+t.message}}},804:(t,e,i)=>{t.exports=function(t){function e(t){let i,r,a,o=null;function s(...t){if(!s.enabled)return;const n=s,r=Number(new Date),a=r-(i||r);n.diff=a,n.prev=i,n.curr=r,i=r,t[0]=e.coerce(t[0]),"string"!=typeof t[0]&&t.unshift("%O");let o=0;t[0]=t[0].replace(/%([a-zA-Z%])/g,((i,r)=>{if("%%"===i)return"%";o++;const a=e.formatters[r];if("function"==typeof a){const e=t[o];i=a.call(n,e),t.splice(o,1),o--}return i})),e.formatArgs.call(n,t),(n.log||e.log).apply(n,t)}return s.namespace=t,s.useColors=e.useColors(),s.color=e.selectColor(t),s.extend=n,s.destroy=e.destroy,Object.defineProperty(s,"enabled",{enumerable:!0,configurable:!1,get:()=>null!==o?o:(r!==e.namespaces&&(r=e.namespaces,a=e.enabled(t)),a),set:t=>{o=t}}),"function"==typeof e.init&&e.init(s),s}function n(t,i){const n=e(this.namespace+(void 0===i?":":i)+t);return n.log=this.log,n}function r(t){return t.toString().substring(2,t.toString().length-2).replace(/\.\*\?$/,"*")}return e.debug=e,e.default=e,e.coerce=function(t){return t instanceof Error?t.stack||t.message:t},e.disable=function(){const t=[...e.names.map(r),...e.skips.map(r).map((t=>"-"+t))].join(",");return e.enable(""),t},e.enable=function(t){let i;e.save(t),e.namespaces=t,e.names=[],e.skips=[];const n=("string"==typeof t?t:"").split(/[\s,]+/),r=n.length;for(i=0;i<r;i++)n[i]&&("-"===(t=n[i].replace(/\*/g,".*?"))[0]?e.skips.push(new RegExp("^"+t.slice(1)+"$")):e.names.push(new RegExp("^"+t+"$")))},e.enabled=function(t){if("*"===t[t.length-1])return!0;let i,n;for(i=0,n=e.skips.length;i<n;i++)if(e.skips[i].test(t))return!1;for(i=0,n=e.names.length;i<n;i++)if(e.names[i].test(t))return!0;return!1},e.humanize=i(810),e.destroy=function(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")},Object.keys(t).forEach((i=>{e[i]=t[i]})),e.names=[],e.skips=[],e.formatters={},e.selectColor=function(t){let i=0;for(let e=0;e<t.length;e++)i=(i<<5)-i+t.charCodeAt(e),i|=0;return e.colors[Math.abs(i)%e.colors.length]},e.enable(e.load()),e}},810:t=>{var e=1e3,i=60*e,n=60*i,r=24*n;function a(t,e,i,n){var r=e>=1.5*i;return Math.round(t/i)+" "+n+(r?"s":"")}t.exports=function(t,o){o=o||{};var s,l,u=typeof t;if("string"===u&&t.length>0)return function(t){if(!((t=String(t)).length>100)){var a=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(t);if(a){var o=parseFloat(a[1]);switch((a[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return 315576e5*o;case"weeks":case"week":case"w":return 6048e5*o;case"days":case"day":case"d":return o*r;case"hours":case"hour":case"hrs":case"hr":case"h":return o*n;case"minutes":case"minute":case"mins":case"min":case"m":return o*i;case"seconds":case"second":case"secs":case"sec":case"s":return o*e;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return o;default:return}}}}(t);if("number"===u&&isFinite(t))return o.long?(s=t,(l=Math.abs(s))>=r?a(s,l,r,"day"):l>=n?a(s,l,n,"hour"):l>=i?a(s,l,i,"minute"):l>=e?a(s,l,e,"second"):s+" ms"):function(t){var a=Math.abs(t);return a>=r?Math.round(t/r)+"d":a>=n?Math.round(t/n)+"h":a>=i?Math.round(t/i)+"m":a>=e?Math.round(t/e)+"s":t+"ms"}(t);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(t))}},7187:t=>{"use strict";var e,i="object"==typeof Reflect?Reflect:null,n=i&&"function"==typeof i.apply?i.apply:function(t,e,i){return Function.prototype.apply.call(t,e,i)};e=i&&"function"==typeof i.ownKeys?i.ownKeys:Object.getOwnPropertySymbols?function(t){return Object.getOwnPropertyNames(t).concat(Object.getOwnPropertySymbols(t))}:function(t){return Object.getOwnPropertyNames(t)};var r=Number.isNaN||function(t){return t!=t};function a(){a.init.call(this)}t.exports=a,t.exports.once=function(t,e){return new Promise((function(i,n){function r(i){t.removeListener(e,a),n(i)}function a(){"function"==typeof t.removeListener&&t.removeListener("error",r),i([].slice.call(arguments))}f(t,e,a,{once:!0}),"error"!==e&&function(t,e,i){"function"==typeof t.on&&f(t,"error",e,{once:!0})}(t,r)}))},a.EventEmitter=a,a.prototype._events=void 0,a.prototype._eventsCount=0,a.prototype._maxListeners=void 0;var o=10;function s(t){if("function"!=typeof t)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof t)}function l(t){return void 0===t._maxListeners?a.defaultMaxListeners:t._maxListeners}function u(t,e,i,n){var r,a,o,u;if(s(i),void 0===(a=t._events)?(a=t._events=Object.create(null),t._eventsCount=0):(void 0!==a.newListener&&(t.emit("newListener",e,i.listener?i.listener:i),a=t._events),o=a[e]),void 0===o)o=a[e]=i,++t._eventsCount;else if("function"==typeof o?o=a[e]=n?[i,o]:[o,i]:n?o.unshift(i):o.push(i),(r=l(t))>0&&o.length>r&&!o.warned){o.warned=!0;var h=new Error("Possible EventEmitter memory leak detected. "+o.length+" "+String(e)+" listeners added. Use emitter.setMaxListeners() to increase limit");h.name="MaxListenersExceededWarning",h.emitter=t,h.type=e,h.count=o.length,u=h,console&&console.warn&&console.warn(u)}return t}function h(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function c(t,e,i){var n={fired:!1,wrapFn:void 0,target:t,type:e,listener:i},r=h.bind(n);return r.listener=i,n.wrapFn=r,r}function d(t,e,i){var n=t._events;if(void 0===n)return[];var r=n[e];return void 0===r?[]:"function"==typeof r?i?[r.listener||r]:[r]:i?function(t){for(var e=new Array(t.length),i=0;i<e.length;++i)e[i]=t[i].listener||t[i];return e}(r):m(r,r.length)}function p(t){var e=this._events;if(void 0!==e){var i=e[t];if("function"==typeof i)return 1;if(void 0!==i)return i.length}return 0}function m(t,e){for(var i=new Array(e),n=0;n<e;++n)i[n]=t[n];return i}function f(t,e,i,n){if("function"==typeof t.on)n.once?t.once(e,i):t.on(e,i);else{if("function"!=typeof t.addEventListener)throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type '+typeof t);t.addEventListener(e,(function r(a){n.once&&t.removeEventListener(e,r),i(a)}))}}Object.defineProperty(a,"defaultMaxListeners",{enumerable:!0,get:function(){return o},set:function(t){if("number"!=typeof t||t<0||r(t))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+t+".");o=t}}),a.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},a.prototype.setMaxListeners=function(t){if("number"!=typeof t||t<0||r(t))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+t+".");return this._maxListeners=t,this},a.prototype.getMaxListeners=function(){return l(this)},a.prototype.emit=function(t){for(var e=[],i=1;i<arguments.length;i++)e.push(arguments[i]);var r="error"===t,a=this._events;if(void 0!==a)r=r&&void 0===a.error;else if(!r)return!1;if(r){var o;if(e.length>0&&(o=e[0]),o instanceof Error)throw o;var s=new Error("Unhandled error."+(o?" ("+o.message+")":""));throw s.context=o,s}var l=a[t];if(void 0===l)return!1;if("function"==typeof l)n(l,this,e);else{var u=l.length,h=m(l,u);for(i=0;i<u;++i)n(h[i],this,e)}return!0},a.prototype.addListener=function(t,e){return u(this,t,e,!1)},a.prototype.on=a.prototype.addListener,a.prototype.prependListener=function(t,e){return u(this,t,e,!0)},a.prototype.once=function(t,e){return s(e),this.on(t,c(this,t,e)),this},a.prototype.prependOnceListener=function(t,e){return s(e),this.prependListener(t,c(this,t,e)),this},a.prototype.removeListener=function(t,e){var i,n,r,a,o;if(s(e),void 0===(n=this._events))return this;if(void 0===(i=n[t]))return this;if(i===e||i.listener===e)0==--this._eventsCount?this._events=Object.create(null):(delete n[t],n.removeListener&&this.emit("removeListener",t,i.listener||e));else if("function"!=typeof i){for(r=-1,a=i.length-1;a>=0;a--)if(i[a]===e||i[a].listener===e){o=i[a].listener,r=a;break}if(r<0)return this;0===r?i.shift():function(t,e){for(;e+1<t.length;e++)t[e]=t[e+1];t.pop()}(i,r),1===i.length&&(n[t]=i[0]),void 0!==n.removeListener&&this.emit("removeListener",t,o||e)}return this},a.prototype.off=a.prototype.removeListener,a.prototype.removeAllListeners=function(t){var e,i,n;if(void 0===(i=this._events))return this;if(void 0===i.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==i[t]&&(0==--this._eventsCount?this._events=Object.create(null):delete i[t]),this;if(0===arguments.length){var r,a=Object.keys(i);for(n=0;n<a.length;++n)"removeListener"!==(r=a[n])&&this.removeAllListeners(r);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if("function"==typeof(e=i[t]))this.removeListener(t,e);else if(void 0!==e)for(n=e.length-1;n>=0;n--)this.removeListener(t,e[n]);return this},a.prototype.listeners=function(t){return d(this,t,!0)},a.prototype.rawListeners=function(t){return d(this,t,!1)},a.listenerCount=function(t,e){return"function"==typeof t.listenerCount?t.listenerCount(e):p.call(t,e)},a.prototype.listenerCount=p,a.prototype.eventNames=function(){return this._eventsCount>0?e(this._events):[]}},645:(t,e)=>{e.read=function(t,e,i,n,r){var a,o,s=8*r-n-1,l=(1<<s)-1,u=l>>1,h=-7,c=i?r-1:0,d=i?-1:1,p=t[e+c];for(c+=d,a=p&(1<<-h)-1,p>>=-h,h+=s;h>0;a=256*a+t[e+c],c+=d,h-=8);for(o=a&(1<<-h)-1,a>>=-h,h+=n;h>0;o=256*o+t[e+c],c+=d,h-=8);if(0===a)a=1-u;else{if(a===l)return o?NaN:1/0*(p?-1:1);o+=Math.pow(2,n),a-=u}return(p?-1:1)*o*Math.pow(2,a-n)},e.write=function(t,e,i,n,r,a){var o,s,l,u=8*a-r-1,h=(1<<u)-1,c=h>>1,d=23===r?Math.pow(2,-24)-Math.pow(2,-77):0,p=n?0:a-1,m=n?1:-1,f=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(s=isNaN(e)?1:0,o=h):(o=Math.floor(Math.log(e)/Math.LN2),e*(l=Math.pow(2,-o))<1&&(o--,l*=2),(e+=o+c>=1?d/l:d*Math.pow(2,1-c))*l>=2&&(o++,l/=2),o+c>=h?(s=0,o=h):o+c>=1?(s=(e*l-1)*Math.pow(2,r),o+=c):(s=e*Math.pow(2,c-1)*Math.pow(2,r),o=0));r>=8;t[i+p]=255&s,p+=m,s/=256,r-=8);for(o=o<<r|s,u+=r;u>0;t[i+p]=255&o,p+=m,o/=256,u-=8);t[i+p-m]|=128*f}},4155:t=>{var e,i,n=t.exports={};function r(){throw new Error("setTimeout has not been defined")}function a(){throw new Error("clearTimeout has not been defined")}function o(t){if(e===setTimeout)return setTimeout(t,0);if((e===r||!e)&&setTimeout)return e=setTimeout,setTimeout(t,0);try{return e(t,0)}catch(i){try{return e.call(null,t,0)}catch(i){return e.call(this,t,0)}}}!function(){try{e="function"==typeof setTimeout?setTimeout:r}catch(t){e=r}try{i="function"==typeof clearTimeout?clearTimeout:a}catch(t){i=a}}();var s,l=[],u=!1,h=-1;function c(){u&&s&&(u=!1,s.length?l=s.concat(l):h=-1,l.length&&d())}function d(){if(!u){var t=o(c);u=!0;for(var e=l.length;e;){for(s=l,l=[];++h<e;)s&&s[h].run();h=-1,e=l.length}s=null,u=!1,function(t){if(i===clearTimeout)return clearTimeout(t);if((i===a||!i)&&clearTimeout)return i=clearTimeout,clearTimeout(t);try{i(t)}catch(e){try{return i.call(null,t)}catch(e){return i.call(this,t)}}}(t)}}function p(t,e){this.fun=t,this.array=e}function m(){}n.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var i=1;i<arguments.length;i++)e[i-1]=arguments[i];l.push(new p(t,e)),1!==l.length||u||o(d)},p.prototype.run=function(){this.fun.apply(null,this.array)},n.title="browser",n.browser=!0,n.env={},n.argv=[],n.version="",n.versions={},n.on=m,n.addListener=m,n.once=m,n.off=m,n.removeListener=m,n.removeAllListeners=m,n.emit=m,n.prependListener=m,n.prependOnceListener=m,n.listeners=function(t){return[]},n.binding=function(t){throw new Error("process.binding is not supported")},n.cwd=function(){return"/"},n.chdir=function(t){throw new Error("process.chdir is not supported")},n.umask=function(){return 0}},3669:(t,e,i)=>{var n=i(4155);e.formatArgs=function(e){if(e[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+e[0]+(this.useColors?"%c ":" ")+"+"+t.exports.humanize(this.diff),!this.useColors)return;const i="color: "+this.color;e.splice(1,0,i,"color: inherit");let n=0,r=0;e[0].replace(/%[a-zA-Z%]/g,(t=>{"%%"!==t&&(n++,"%c"===t&&(r=n))})),e.splice(r,0,i)},e.save=function(t){try{t?e.storage.setItem("debug",t):e.storage.removeItem("debug")}catch(t){}},e.load=function(){let t;try{t=e.storage.getItem("debug")}catch(t){}return!t&&void 0!==n&&"env"in n&&(t=n.env.DEBUG),t},e.useColors=function(){return!("undefined"==typeof window||!window.process||"renderer"!==window.process.type&&!window.process.__nwjs)||("undefined"==typeof navigator||!navigator.userAgent||!navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))&&("undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/))},e.storage=function(){try{return localStorage}catch(t){}}(),e.destroy=(()=>{let t=!1;return()=>{t||(t=!0,console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))}})(),e.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],e.log=console.debug||console.log||(()=>{}),t.exports=i(9231)(e);const{formatters:r}=t.exports;r.j=function(t){try{return JSON.stringify(t)}catch(t){return"[UnexpectedJSONParseError]: "+t.message}}},9231:(t,e,i)=>{t.exports=function(t){function e(t){let i,r,a,o=null;function s(...t){if(!s.enabled)return;const n=s,r=Number(new Date),a=r-(i||r);n.diff=a,n.prev=i,n.curr=r,i=r,t[0]=e.coerce(t[0]),"string"!=typeof t[0]&&t.unshift("%O");let o=0;t[0]=t[0].replace(/%([a-zA-Z%])/g,((i,r)=>{if("%%"===i)return"%";o++;const a=e.formatters[r];if("function"==typeof a){const e=t[o];i=a.call(n,e),t.splice(o,1),o--}return i})),e.formatArgs.call(n,t),(n.log||e.log).apply(n,t)}return s.namespace=t,s.useColors=e.useColors(),s.color=e.selectColor(t),s.extend=n,s.destroy=e.destroy,Object.defineProperty(s,"enabled",{enumerable:!0,configurable:!1,get:()=>null!==o?o:(r!==e.namespaces&&(r=e.namespaces,a=e.enabled(t)),a),set:t=>{o=t}}),"function"==typeof e.init&&e.init(s),s}function n(t,i){const n=e(this.namespace+(void 0===i?":":i)+t);return n.log=this.log,n}function r(t){return t.toString().substring(2,t.toString().length-2).replace(/\.\*\?$/,"*")}return e.debug=e,e.default=e,e.coerce=function(t){return t instanceof Error?t.stack||t.message:t},e.disable=function(){const t=[...e.names.map(r),...e.skips.map(r).map((t=>"-"+t))].join(",");return e.enable(""),t},e.enable=function(t){let i;e.save(t),e.namespaces=t,e.names=[],e.skips=[];const n=("string"==typeof t?t:"").split(/[\s,]+/),r=n.length;for(i=0;i<r;i++)n[i]&&("-"===(t=n[i].replace(/\*/g,".*?"))[0]?e.skips.push(new RegExp("^"+t.slice(1)+"$")):e.names.push(new RegExp("^"+t+"$")))},e.enabled=function(t){if("*"===t[t.length-1])return!0;let i,n;for(i=0,n=e.skips.length;i<n;i++)if(e.skips[i].test(t))return!1;for(i=0,n=e.names.length;i<n;i++)if(e.names[i].test(t))return!0;return!1},e.humanize=i(4241),e.destroy=function(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")},Object.keys(t).forEach((i=>{e[i]=t[i]})),e.names=[],e.skips=[],e.formatters={},e.selectColor=function(t){let i=0;for(let e=0;e<t.length;e++)i=(i<<5)-i+t.charCodeAt(e),i|=0;return e.colors[Math.abs(i)%e.colors.length]},e.enable(e.load()),e}},4241:t=>{var e=1e3,i=60*e,n=60*i,r=24*n;function a(t,e,i,n){var r=e>=1.5*i;return Math.round(t/i)+" "+n+(r?"s":"")}t.exports=function(t,o){o=o||{};var s,l,u=typeof t;if("string"===u&&t.length>0)return function(t){if(!((t=String(t)).length>100)){var a=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(t);if(a){var o=parseFloat(a[1]);switch((a[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return 315576e5*o;case"weeks":case"week":case"w":return 6048e5*o;case"days":case"day":case"d":return o*r;case"hours":case"hour":case"hrs":case"hr":case"h":return o*n;case"minutes":case"minute":case"mins":case"min":case"m":return o*i;case"seconds":case"second":case"secs":case"sec":case"s":return o*e;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return o;default:return}}}}(t);if("number"===u&&isFinite(t))return o.long?(s=t,(l=Math.abs(s))>=r?a(s,l,r,"day"):l>=n?a(s,l,n,"hour"):l>=i?a(s,l,i,"minute"):l>=e?a(s,l,e,"second"):s+" ms"):function(t){var a=Math.abs(t);return a>=r?Math.round(t/r)+"d":a>=n?Math.round(t/n)+"h":a>=i?Math.round(t/i)+"m":a>=e?Math.round(t/e)+"s":t+"ms"}(t);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(t))}},7591:function(t,e,i){(function(){"use strict";var n=this.THREE||i(2212);if(!n)throw new Error("MeshLine requires three.js");class r extends n.BufferGeometry{constructor(){super(),this.isMeshLine=!0,this.type="MeshLine",this.positions=[],this.previous=[],this.next=[],this.side=[],this.width=[],this.indices_array=[],this.uvs=[],this.counters=[],this._points=[],this._geom=null,this.widthCallback=null,this.matrixWorld=new n.Matrix4,Object.defineProperties(this,{geometry:{enumerable:!0,get:function(){return this}},geom:{enumerable:!0,get:function(){return this._geom},set:function(t){this.setGeometry(t,this.widthCallback)}},points:{enumerable:!0,get:function(){return this._points},set:function(t){this.setPoints(t,this.widthCallback)}}})}}function a(t,e){var i=new n.Matrix4,r=new n.Ray,a=new n.Sphere,o=new n.Vector3,s=this.geometry;if(s.boundingSphere||s.computeBoundingSphere(),a.copy(s.boundingSphere),a.applyMatrix4(this.matrixWorld),!1!==t.ray.intersectSphere(a,o)){i.copy(this.matrixWorld).invert(),r.copy(t.ray).applyMatrix4(i);var l=new n.Vector3,u=new n.Vector3,h=new n.Vector3,c=this instanceof n.LineSegments?2:1,d=s.index,p=s.attributes;if(null!==d)for(var m=d.array,f=p.position.array,g=p.width.array,_=0,v=m.length-1;_<v;_+=c){var b=m[_],y=m[_+1];l.fromArray(f,3*b),u.fromArray(f,3*y);var x=void 0!==g[Math.floor(_/3)]?g[Math.floor(_/3)]:1,w=t.params.Line.threshold+this.material.lineWidth*x/2,M=w*w;if(!(r.distanceSqToSegment(l,u,o,h)>M)){o.applyMatrix4(this.matrixWorld);var E=t.ray.origin.distanceTo(o);E<t.near||E>t.far||(e.push({distance:E,point:h.clone().applyMatrix4(this.matrixWorld),index:_,face:null,faceIndex:null,object:this}),_=v)}}}}function o(t,e,i,n,r){var a;if(t=t.subarray||t.slice?t:t.buffer,i=i.subarray||i.slice?i:i.buffer,t=e?t.subarray?t.subarray(e,r&&e+r):t.slice(e,r&&e+r):t,i.set)i.set(t,n);else for(a=0;a<t.length;a++)i[a+n]=t[a];return i}r.prototype.setMatrixWorld=function(t){this.matrixWorld=t},r.prototype.setGeometry=function(t,e){this._geometry=t,this.setPoints(t.getAttribute("position").array,e)},r.prototype.setPoints=function(t,e){if(t instanceof Float32Array||t instanceof Array){if(this._points=t,this.widthCallback=e,this.positions=[],this.counters=[],t.length&&t[0]instanceof n.Vector3)for(var i=0;i<t.length;i++){var r=t[i],a=i/t.length;this.positions.push(r.x,r.y,r.z),this.positions.push(r.x,r.y,r.z),this.counters.push(a),this.counters.push(a)}else for(i=0;i<t.length;i+=3)a=i/t.length,this.positions.push(t[i],t[i+1],t[i+2]),this.positions.push(t[i],t[i+1],t[i+2]),this.counters.push(a),this.counters.push(a);this.process()}else console.error("ERROR: The BufferArray of points is not instancied correctly.")},r.prototype.raycast=a,r.prototype.compareV3=function(t,e){var i=6*t,n=6*e;return this.positions[i]===this.positions[n]&&this.positions[i+1]===this.positions[n+1]&&this.positions[i+2]===this.positions[n+2]},r.prototype.copyV3=function(t){var e=6*t;return[this.positions[e],this.positions[e+1],this.positions[e+2]]},r.prototype.process=function(){var t,e,i=this.positions.length/6;this.previous=[],this.next=[],this.side=[],this.width=[],this.indices_array=[],this.uvs=[],e=this.compareV3(0,i-1)?this.copyV3(i-2):this.copyV3(0),this.previous.push(e[0],e[1],e[2]),this.previous.push(e[0],e[1],e[2]);for(var r=0;r<i;r++){if(this.side.push(1),this.side.push(-1),t=this.widthCallback?this.widthCallback(r/(i-1)):1,this.width.push(t),this.width.push(t),this.uvs.push(r/(i-1),0),this.uvs.push(r/(i-1),1),r<i-1){e=this.copyV3(r),this.previous.push(e[0],e[1],e[2]),this.previous.push(e[0],e[1],e[2]);var a=2*r;this.indices_array.push(a,a+1,a+2),this.indices_array.push(a+2,a+1,a+3)}r>0&&(e=this.copyV3(r),this.next.push(e[0],e[1],e[2]),this.next.push(e[0],e[1],e[2]))}e=this.compareV3(i-1,0)?this.copyV3(1):this.copyV3(i-1),this.next.push(e[0],e[1],e[2]),this.next.push(e[0],e[1],e[2]),this._attributes&&this._attributes.position.count===this.positions.length?(this._attributes.position.copyArray(new Float32Array(this.positions)),this._attributes.position.needsUpdate=!0,this._attributes.previous.copyArray(new Float32Array(this.previous)),this._attributes.previous.needsUpdate=!0,this._attributes.next.copyArray(new Float32Array(this.next)),this._attributes.next.needsUpdate=!0,this._attributes.side.copyArray(new Float32Array(this.side)),this._attributes.side.needsUpdate=!0,this._attributes.width.copyArray(new Float32Array(this.width)),this._attributes.width.needsUpdate=!0,this._attributes.uv.copyArray(new Float32Array(this.uvs)),this._attributes.uv.needsUpdate=!0,this._attributes.index.copyArray(new Uint16Array(this.indices_array)),this._attributes.index.needsUpdate=!0):this._attributes={position:new n.BufferAttribute(new Float32Array(this.positions),3),previous:new n.BufferAttribute(new Float32Array(this.previous),3),next:new n.BufferAttribute(new Float32Array(this.next),3),side:new n.BufferAttribute(new Float32Array(this.side),1),width:new n.BufferAttribute(new Float32Array(this.width),1),uv:new n.BufferAttribute(new Float32Array(this.uvs),2),index:new n.BufferAttribute(new Uint16Array(this.indices_array),1),counters:new n.BufferAttribute(new Float32Array(this.counters),1)},this.setAttribute("position",this._attributes.position),this.setAttribute("previous",this._attributes.previous),this.setAttribute("next",this._attributes.next),this.setAttribute("side",this._attributes.side),this.setAttribute("width",this._attributes.width),this.setAttribute("uv",this._attributes.uv),this.setAttribute("counters",this._attributes.counters),this.setIndex(this._attributes.index),this.computeBoundingSphere(),this.computeBoundingBox()},r.prototype.advance=function(t){var e=this._attributes.position.array,i=this._attributes.previous.array,n=this._attributes.next.array,r=e.length;o(e,0,i,0,r),o(e,6,e,0,r-6),e[r-6]=t.x,e[r-5]=t.y,e[r-4]=t.z,e[r-3]=t.x,e[r-2]=t.y,e[r-1]=t.z,o(e,6,n,0,r-6),n[r-6]=t.x,n[r-5]=t.y,n[r-4]=t.z,n[r-3]=t.x,n[r-2]=t.y,n[r-1]=t.z,this._attributes.position.needsUpdate=!0,this._attributes.previous.needsUpdate=!0,this._attributes.next.needsUpdate=!0},n.ShaderChunk.meshline_vert=["",n.ShaderChunk.logdepthbuf_pars_vertex,n.ShaderChunk.fog_pars_vertex,"","attribute vec3 previous;","attribute vec3 next;","attribute float side;","attribute float width;","attribute float counters;","","uniform vec2 resolution;","uniform float lineWidth;","uniform vec3 color;","uniform float opacity;","uniform float sizeAttenuation;","","varying vec2 vUV;","varying vec4 vColor;","varying float vCounters;","","vec2 fix( vec4 i, float aspect ) {","","    vec2 res = i.xy / i.w;","    res.x *= aspect;","\t vCounters = counters;","    return res;","","}","","void main() {","","    float aspect = resolution.x / resolution.y;","","    vColor = vec4( color, opacity );","    vUV = uv;","","    mat4 m = projectionMatrix * modelViewMatrix;","    vec4 finalPosition = m * vec4( position, 1.0 );","    vec4 prevPos = m * vec4( previous, 1.0 );","    vec4 nextPos = m * vec4( next, 1.0 );","","    vec2 currentP = fix( finalPosition, aspect );","    vec2 prevP = fix( prevPos, aspect );","    vec2 nextP = fix( nextPos, aspect );","","    float w = lineWidth * width;","","    vec2 dir;","    if( nextP == currentP ) dir = normalize( currentP - prevP );","    else if( prevP == currentP ) dir = normalize( nextP - currentP );","    else {","        vec2 dir1 = normalize( currentP - prevP );","        vec2 dir2 = normalize( nextP - currentP );","        dir = normalize( dir1 + dir2 );","","        vec2 perp = vec2( -dir1.y, dir1.x );","        vec2 miter = vec2( -dir.y, dir.x );","        //w = clamp( w / dot( miter, perp ), 0., 4. * lineWidth * width );","","    }","","    //vec2 normal = ( cross( vec3( dir, 0. ), vec3( 0., 0., 1. ) ) ).xy;","    vec4 normal = vec4( -dir.y, dir.x, 0., 1. );","    normal.xy *= .5 * w;","    normal *= projectionMatrix;","    if( sizeAttenuation == 0. ) {","        normal.xy *= finalPosition.w;","        normal.xy /= ( vec4( resolution, 0., 1. ) * projectionMatrix ).xy;","    }","","    finalPosition.xy += normal.xy * side;","","    gl_Position = finalPosition;","",n.ShaderChunk.logdepthbuf_vertex,n.ShaderChunk.fog_vertex&&"    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",n.ShaderChunk.fog_vertex,"}"].join("\n"),n.ShaderChunk.meshline_frag=["",n.ShaderChunk.fog_pars_fragment,n.ShaderChunk.logdepthbuf_pars_fragment,"","uniform sampler2D map;","uniform sampler2D alphaMap;","uniform float useMap;","uniform float useAlphaMap;","uniform float useDash;","uniform float dashArray;","uniform float dashOffset;","uniform float dashRatio;","uniform float visibility;","uniform float alphaTest;","uniform vec2 repeat;","","varying vec2 vUV;","varying vec4 vColor;","varying float vCounters;","","void main() {","",n.ShaderChunk.logdepthbuf_fragment,"","    vec4 c = vColor;","    if( useMap == 1. ) c *= texture2D( map, vUV * repeat );","    if( useAlphaMap == 1. ) c.a *= texture2D( alphaMap, vUV * repeat ).a;","    if( c.a < alphaTest ) discard;","    if( useDash == 1. ){","        c.a *= ceil(mod(vCounters + dashOffset, dashArray) - (dashArray * dashRatio));","    }","    gl_FragColor = c;","    gl_FragColor.a *= step(vCounters, visibility);","",n.ShaderChunk.fog_fragment,"}"].join("\n");class s extends n.ShaderMaterial{constructor(t){super({uniforms:Object.assign({},n.UniformsLib.fog,{lineWidth:{value:1},map:{value:null},useMap:{value:0},alphaMap:{value:null},useAlphaMap:{value:0},color:{value:new n.Color(16777215)},opacity:{value:1},resolution:{value:new n.Vector2(1,1)},sizeAttenuation:{value:1},dashArray:{value:0},dashOffset:{value:0},dashRatio:{value:.5},useDash:{value:0},visibility:{value:1},alphaTest:{value:0},repeat:{value:new n.Vector2(1,1)}}),vertexShader:n.ShaderChunk.meshline_vert,fragmentShader:n.ShaderChunk.meshline_frag}),this.isMeshLineMaterial=!0,this.type="MeshLineMaterial",Object.defineProperties(this,{lineWidth:{enumerable:!0,get:function(){return this.uniforms.lineWidth.value},set:function(t){this.uniforms.lineWidth.value=t}},map:{enumerable:!0,get:function(){return this.uniforms.map.value},set:function(t){this.uniforms.map.value=t}},useMap:{enumerable:!0,get:function(){return this.uniforms.useMap.value},set:function(t){this.uniforms.useMap.value=t}},alphaMap:{enumerable:!0,get:function(){return this.uniforms.alphaMap.value},set:function(t){this.uniforms.alphaMap.value=t}},useAlphaMap:{enumerable:!0,get:function(){return this.uniforms.useAlphaMap.value},set:function(t){this.uniforms.useAlphaMap.value=t}},color:{enumerable:!0,get:function(){return this.uniforms.color.value},set:function(t){this.uniforms.color.value=t}},opacity:{enumerable:!0,get:function(){return this.uniforms.opacity.value},set:function(t){this.uniforms.opacity.value=t}},resolution:{enumerable:!0,get:function(){return this.uniforms.resolution.value},set:function(t){this.uniforms.resolution.value.copy(t)}},sizeAttenuation:{enumerable:!0,get:function(){return this.uniforms.sizeAttenuation.value},set:function(t){this.uniforms.sizeAttenuation.value=t}},dashArray:{enumerable:!0,get:function(){return this.uniforms.dashArray.value},set:function(t){this.uniforms.dashArray.value=t,this.useDash=0!==t?1:0}},dashOffset:{enumerable:!0,get:function(){return this.uniforms.dashOffset.value},set:function(t){this.uniforms.dashOffset.value=t}},dashRatio:{enumerable:!0,get:function(){return this.uniforms.dashRatio.value},set:function(t){this.uniforms.dashRatio.value=t}},useDash:{enumerable:!0,get:function(){return this.uniforms.useDash.value},set:function(t){this.uniforms.useDash.value=t}},visibility:{enumerable:!0,get:function(){return this.uniforms.visibility.value},set:function(t){this.uniforms.visibility.value=t}},alphaTest:{enumerable:!0,get:function(){return this.uniforms.alphaTest.value},set:function(t){this.uniforms.alphaTest.value=t}},repeat:{enumerable:!0,get:function(){return this.uniforms.repeat.value},set:function(t){this.uniforms.repeat.value.copy(t)}}}),this.setValues(t)}}s.prototype.copy=function(t){return n.ShaderMaterial.prototype.copy.call(this,t),this.lineWidth=t.lineWidth,this.map=t.map,this.useMap=t.useMap,this.alphaMap=t.alphaMap,this.useAlphaMap=t.useAlphaMap,this.color.copy(t.color),this.opacity=t.opacity,this.resolution.copy(t.resolution),this.sizeAttenuation=t.sizeAttenuation,this.dashArray.copy(t.dashArray),this.dashOffset.copy(t.dashOffset),this.dashRatio.copy(t.dashRatio),this.useDash=t.useDash,this.visibility=t.visibility,this.alphaTest=t.alphaTest,this.repeat.copy(t.repeat),this},t.exports&&(e=t.exports={MeshLine:r,MeshLineMaterial:s,MeshLineRaycast:a}),e.MeshLine=r,e.MeshLineMaterial=s,e.MeshLineRaycast=a}).call(this)},2212:(t,e,i)=>{"use strict";i.r(e),i.d(e,{ACESFilmicToneMapping:()=>it,AddEquation:()=>S,AddOperation:()=>K,AdditiveAnimationBlendMode:()=>je,AdditiveBlending:()=>x,AlphaFormat:()=>It,AlwaysDepth:()=>U,AlwaysStencilFunc:()=>Mi,AmbientLight:()=>Rc,AmbientLightProbe:()=>Qc,AnimationClip:()=>Ch,AnimationLoader:()=>Nh,AnimationMixer:()=>Ld,AnimationObjectGroup:()=>Ad,AnimationUtils:()=>bh,ArcCurve:()=>Xh,ArrayCamera:()=>Ys,ArrowHelper:()=>yp,Audio:()=>hd,AudioAnalyser:()=>gd,AudioContext:()=>Jc,AudioListener:()=>ud,AudioLoader:()=>Kc,AxesHelper:()=>xp,AxisHelper:()=>vm,BackSide:()=>f,BasicDepthPacking:()=>ri,BasicShadowMap:()=>h,BinaryTextureLoader:()=>Mm,Bone:()=>Cl,BooleanKeyframeTrack:()=>Sh,BoundingBoxHelper:()=>bm,Box2:()=>Nd,Box3:()=>un,Box3Helper:()=>fp,BoxBufferGeometry:()=>Ma,BoxGeometry:()=>Ma,BoxHelper:()=>mp,BufferAttribute:()=>Ir,BufferGeometry:()=>na,BufferGeometryLoader:()=>Fc,ByteType:()=>St,Cache:()=>qh,Camera:()=>Aa,CameraHelper:()=>cp,CanvasRenderer:()=>Sm,CanvasTexture:()=>su,CatmullRomCurve3:()=>tc,CineonToneMapping:()=>et,CircleBufferGeometry:()=>uu,CircleGeometry:()=>uu,ClampToEdgeWrapping:()=>dt,Clock:()=>nd,Color:()=>Cr,ColorKeyframeTrack:()=>Th,CompressedTexture:()=>ou,CompressedTextureLoader:()=>Hh,ConeBufferGeometry:()=>cu,ConeGeometry:()=>cu,CubeCamera:()=>Ra,CubeReflectionMapping:()=>at,CubeRefractionMapping:()=>ot,CubeTexture:()=>Ca,CubeTextureLoader:()=>Gh,CubeUVReflectionMapping:()=>ut,CubeUVRefractionMapping:()=>ht,CubicBezierCurve:()=>rc,CubicBezierCurve3:()=>ac,CubicInterpolant:()=>xh,CullFaceBack:()=>s,CullFaceFront:()=>l,CullFaceFrontBack:()=>u,CullFaceNone:()=>o,Curve:()=>jh,CurvePath:()=>dc,CustomBlending:()=>E,CustomToneMapping:()=>nt,CylinderBufferGeometry:()=>hu,CylinderGeometry:()=>hu,Cylindrical:()=>Od,DataTexture:()=>qa,DataTexture2DArray:()=>ro,DataTexture3D:()=>ao,DataTextureLoader:()=>Vh,DataUtils:()=>Ep,DecrementStencilOp:()=>di,DecrementWrapStencilOp:()=>mi,DefaultLoadingManager:()=>Ih,DepthFormat:()=>Ut,DepthStencilFormat:()=>Gt,DepthTexture:()=>lu,DirectionalLight:()=>Lc,DirectionalLightHelper:()=>lp,DiscreteInterpolant:()=>Mh,DodecahedronBufferGeometry:()=>pu,DodecahedronGeometry:()=>pu,DoubleSide:()=>g,DstAlphaFactor:()=>I,DstColorFactor:()=>O,DynamicBufferAttribute:()=>lm,DynamicCopyUsage:()=>Ri,DynamicDrawUsage:()=>Si,DynamicReadUsage:()=>Ai,EdgesGeometry:()=>vu,EdgesHelper:()=>ym,EllipseCurve:()=>Yh,EqualDepth:()=>W,EqualStencilFunc:()=>vi,EquirectangularReflectionMapping:()=>st,EquirectangularRefractionMapping:()=>lt,Euler:()=>Yn,EventDispatcher:()=>Di,ExtrudeBufferGeometry:()=>ju,ExtrudeGeometry:()=>ju,FaceColors:()=>Kp,FileLoader:()=>Fh,FlatShading:()=>_,Float16BufferAttribute:()=>Vr,Float32Attribute:()=>gm,Float32BufferAttribute:()=>Wr,Float64Attribute:()=>_m,Float64BufferAttribute:()=>jr,FloatType:()=>Lt,Fog:()=>il,FogExp2:()=>el,Font:()=>jc,FontLoader:()=>Xc,FrontSide:()=>m,Frustum:()=>Ba,GLBufferAttribute:()=>Pd,GLSL1:()=>Pi,GLSL3:()=>qi,GammaEncoding:()=>$e,GreaterDepth:()=>Y,GreaterEqualDepth:()=>j,GreaterEqualStencilFunc:()=>wi,GreaterStencilFunc:()=>yi,GridHelper:()=>np,Group:()=>Xs,HalfFloatType:()=>Rt,HemisphereLight:()=>gc,HemisphereLightHelper:()=>ip,HemisphereLightProbe:()=>$c,IcosahedronBufferGeometry:()=>Xu,IcosahedronGeometry:()=>Xu,ImageBitmapLoader:()=>Vc,ImageLoader:()=>Uh,ImageUtils:()=>Ki,ImmediateRenderObject:()=>Vd,IncrementStencilOp:()=>ci,IncrementWrapStencilOp:()=>pi,InstancedBufferAttribute:()=>Oc,InstancedBufferGeometry:()=>Bc,InstancedInterleavedBuffer:()=>Cd,InstancedMesh:()=>Nl,Int16Attribute:()=>dm,Int16BufferAttribute:()=>Nr,Int32Attribute:()=>mm,Int32BufferAttribute:()=>Ur,Int8Attribute:()=>um,Int8BufferAttribute:()=>Br,IntType:()=>At,InterleavedBuffer:()=>rl,InterleavedBufferAttribute:()=>ol,Interpolant:()=>yh,InterpolateDiscrete:()=>Fe,InterpolateLinear:()=>Ne,InterpolateSmooth:()=>He,InvertStencilOp:()=>fi,JSONLoader:()=>Tm,KeepStencilOp:()=>ui,KeyframeTrack:()=>Eh,LOD:()=>Sl,LatheBufferGeometry:()=>Zu,LatheGeometry:()=>Zu,Layers:()=>Xn,LensFlare:()=>Am,LessDepth:()=>G,LessEqualDepth:()=>V,LessEqualStencilFunc:()=>bi,LessStencilFunc:()=>_i,Light:()=>fc,LightProbe:()=>qc,Line:()=>Yl,Line3:()=>Gd,LineBasicMaterial:()=>Hl,LineCurve:()=>oc,LineCurve3:()=>sc,LineDashedMaterial:()=>_h,LineLoop:()=>Kl,LinePieces:()=>Zp,LineSegments:()=>Jl,LineStrip:()=>Xp,LinearEncoding:()=>Je,LinearFilter:()=>bt,LinearInterpolant:()=>wh,LinearMipMapLinearFilter:()=>Mt,LinearMipMapNearestFilter:()=>xt,LinearMipmapLinearFilter:()=>wt,LinearMipmapNearestFilter:()=>yt,LinearToneMapping:()=>Q,Loader:()=>Bh,LoaderUtils:()=>Ic,LoadingManager:()=>Dh,LogLuvEncoding:()=>ti,LoopOnce:()=>Ie,LoopPingPong:()=>Oe,LoopRepeat:()=>Be,LuminanceAlphaFormat:()=>Nt,LuminanceFormat:()=>Ft,MOUSE:()=>r,Material:()=>Sr,MaterialLoader:()=>Dc,Math:()=>Yi,MathUtils:()=>Yi,Matrix3:()=>Zi,Matrix4:()=>Bn,MaxEquation:()=>z,Mesh:()=>xa,MeshBasicMaterial:()=>Pr,MeshDepthMaterial:()=>Hs,MeshDistanceMaterial:()=>Us,MeshFaceMaterial:()=>Qp,MeshLambertMaterial:()=>fh,MeshMatcapMaterial:()=>gh,MeshNormalMaterial:()=>mh,MeshPhongMaterial:()=>dh,MeshPhysicalMaterial:()=>ch,MeshStandardMaterial:()=>hh,MeshToonMaterial:()=>ph,MinEquation:()=>A,MirroredRepeatWrapping:()=>pt,MixOperation:()=>J,MultiMaterial:()=>tm,MultiplyBlending:()=>M,MultiplyOperation:()=>Z,NearestFilter:()=>mt,NearestMipMapLinearFilter:()=>vt,NearestMipMapNearestFilter:()=>gt,NearestMipmapLinearFilter:()=>_t,NearestMipmapNearestFilter:()=>ft,NeverDepth:()=>H,NeverStencilFunc:()=>gi,NoBlending:()=>b,NoColors:()=>Jp,NoToneMapping:()=>$,NormalAnimationBlendMode:()=>We,NormalBlending:()=>y,NotEqualDepth:()=>X,NotEqualStencilFunc:()=>xi,NumberKeyframeTrack:()=>kh,Object3D:()=>lr,ObjectLoader:()=>Nc,ObjectSpaceNormalMap:()=>si,OctahedronBufferGeometry:()=>Ju,OctahedronGeometry:()=>Ju,OneFactor:()=>R,OneMinusDstAlphaFactor:()=>B,OneMinusDstColorFactor:()=>F,OneMinusSrcAlphaFactor:()=>D,OneMinusSrcColorFactor:()=>P,OrthographicCamera:()=>Ac,PCFShadowMap:()=>c,PCFSoftShadowMap:()=>d,PMREMGenerator:()=>Hp,ParametricBufferGeometry:()=>Ku,ParametricGeometry:()=>Ku,Particle:()=>im,ParticleBasicMaterial:()=>am,ParticleSystem:()=>nm,ParticleSystemMaterial:()=>om,Path:()=>pc,PerspectiveCamera:()=>za,Plane:()=>dr,PlaneBufferGeometry:()=>Na,PlaneGeometry:()=>Na,PlaneHelper:()=>gp,PointCloud:()=>em,PointCloudMaterial:()=>rm,PointLight:()=>kc,PointLightHelper:()=>$d,Points:()=>nu,PointsMaterial:()=>$l,PolarGridHelper:()=>rp,PolyhedronBufferGeometry:()=>du,PolyhedronGeometry:()=>du,PositionalAudio:()=>fd,PropertyBinding:()=>kd,PropertyMixer:()=>_d,QuadraticBezierCurve:()=>lc,QuadraticBezierCurve3:()=>uc,Quaternion:()=>an,QuaternionKeyframeTrack:()=>zh,QuaternionLinearInterpolant:()=>Ah,REVISION:()=>n,RGBADepthPacking:()=>ai,RGBAFormat:()=>Ot,RGBAIntegerFormat:()=>Zt,RGBA_ASTC_10x10_Format:()=>ve,RGBA_ASTC_10x5_Format:()=>fe,RGBA_ASTC_10x6_Format:()=>ge,RGBA_ASTC_10x8_Format:()=>_e,RGBA_ASTC_12x10_Format:()=>be,RGBA_ASTC_12x12_Format:()=>ye,RGBA_ASTC_4x4_Format:()=>se,RGBA_ASTC_5x4_Format:()=>le,RGBA_ASTC_5x5_Format:()=>ue,RGBA_ASTC_6x5_Format:()=>he,RGBA_ASTC_6x6_Format:()=>ce,RGBA_ASTC_8x5_Format:()=>de,RGBA_ASTC_8x6_Format:()=>pe,RGBA_ASTC_8x8_Format:()=>me,RGBA_BPTC_Format:()=>xe,RGBA_ETC2_EAC_Format:()=>oe,RGBA_PVRTC_2BPPV1_Format:()=>ne,RGBA_PVRTC_4BPPV1_Format:()=>ie,RGBA_S3TC_DXT1_Format:()=>Kt,RGBA_S3TC_DXT3_Format:()=>$t,RGBA_S3TC_DXT5_Format:()=>Qt,RGBDEncoding:()=>ni,RGBEEncoding:()=>Qe,RGBEFormat:()=>Ht,RGBFormat:()=>Bt,RGBIntegerFormat:()=>Xt,RGBM16Encoding:()=>ii,RGBM7Encoding:()=>ei,RGB_ETC1_Format:()=>re,RGB_ETC2_Format:()=>ae,RGB_PVRTC_2BPPV1_Format:()=>ee,RGB_PVRTC_4BPPV1_Format:()=>te,RGB_S3TC_DXT1_Format:()=>Jt,RGFormat:()=>jt,RGIntegerFormat:()=>Yt,RawShaderMaterial:()=>uh,Ray:()=>In,Raycaster:()=>qd,RectAreaLight:()=>Cc,RedFormat:()=>Vt,RedIntegerFormat:()=>Wt,ReinhardToneMapping:()=>tt,RepeatWrapping:()=>ct,ReplaceStencilOp:()=>hi,ReverseSubtractEquation:()=>k,RingBufferGeometry:()=>$u,RingGeometry:()=>$u,SRGB8_ALPHA8_ASTC_10x10_Format:()=>Pe,SRGB8_ALPHA8_ASTC_10x5_Format:()=>Le,SRGB8_ALPHA8_ASTC_10x6_Format:()=>Re,SRGB8_ALPHA8_ASTC_10x8_Format:()=>Ce,SRGB8_ALPHA8_ASTC_12x10_Format:()=>qe,SRGB8_ALPHA8_ASTC_12x12_Format:()=>De,SRGB8_ALPHA8_ASTC_4x4_Format:()=>we,SRGB8_ALPHA8_ASTC_5x4_Format:()=>Me,SRGB8_ALPHA8_ASTC_5x5_Format:()=>Ee,SRGB8_ALPHA8_ASTC_6x5_Format:()=>Se,SRGB8_ALPHA8_ASTC_6x6_Format:()=>Te,SRGB8_ALPHA8_ASTC_8x5_Format:()=>ke,SRGB8_ALPHA8_ASTC_8x6_Format:()=>Ae,SRGB8_ALPHA8_ASTC_8x8_Format:()=>ze,Scene:()=>nl,SceneUtils:()=>km,ShaderChunk:()=>Ha,ShaderLib:()=>Ga,ShaderMaterial:()=>ka,ShadowMaterial:()=>lh,Shape:()=>mc,ShapeBufferGeometry:()=>Qu,ShapeGeometry:()=>Qu,ShapePath:()=>Wc,ShapeUtils:()=>Gu,ShortType:()=>Tt,Skeleton:()=>Dl,SkeletonHelper:()=>Jd,SkinnedMesh:()=>Rl,SmoothShading:()=>v,Sphere:()=>An,SphereBufferGeometry:()=>th,SphereGeometry:()=>th,Spherical:()=>Bd,SphericalHarmonics3:()=>Pc,SplineCurve:()=>hc,SpotLight:()=>wc,SpotLightHelper:()=>jd,Sprite:()=>xl,SpriteMaterial:()=>sl,SrcAlphaFactor:()=>q,SrcAlphaSaturateFactor:()=>N,SrcColorFactor:()=>C,StaticCopyUsage:()=>Li,StaticDrawUsage:()=>Ei,StaticReadUsage:()=>ki,StereoCamera:()=>id,StreamCopyUsage:()=>Ci,StreamDrawUsage:()=>Ti,StreamReadUsage:()=>zi,StringKeyframeTrack:()=>Lh,SubtractEquation:()=>T,SubtractiveBlending:()=>w,TOUCH:()=>a,TangentSpaceNormalMap:()=>oi,TetrahedronBufferGeometry:()=>eh,TetrahedronGeometry:()=>eh,TextBufferGeometry:()=>ih,TextGeometry:()=>ih,Texture:()=>Qi,TextureLoader:()=>Wh,TorusBufferGeometry:()=>nh,TorusGeometry:()=>nh,TorusKnotBufferGeometry:()=>rh,TorusKnotGeometry:()=>rh,Triangle:()=>Mr,TriangleFanDrawMode:()=>Ze,TriangleStripDrawMode:()=>Xe,TrianglesDrawMode:()=>Ye,TubeBufferGeometry:()=>ah,TubeGeometry:()=>ah,UVMapping:()=>rt,Uint16Attribute:()=>pm,Uint16BufferAttribute:()=>Hr,Uint32Attribute:()=>fm,Uint32BufferAttribute:()=>Gr,Uint8Attribute:()=>hm,Uint8BufferAttribute:()=>Or,Uint8ClampedAttribute:()=>cm,Uint8ClampedBufferAttribute:()=>Fr,Uniform:()=>Rd,UniformsLib:()=>Ua,UniformsUtils:()=>Ta,UnsignedByteType:()=>Et,UnsignedInt248Type:()=>Dt,UnsignedIntType:()=>zt,UnsignedShort4444Type:()=>Ct,UnsignedShort5551Type:()=>Pt,UnsignedShort565Type:()=>qt,UnsignedShortType:()=>kt,VSMShadowMap:()=>p,Vector2:()=>Xi,Vector3:()=>on,Vector4:()=>en,VectorKeyframeTrack:()=>Rh,Vertex:()=>sm,VertexColors:()=>$p,VideoTexture:()=>au,WebGL1Renderer:()=>tl,WebGLCubeRenderTarget:()=>Pa,WebGLMultisampleRenderTarget:()=>rn,WebGLRenderTarget:()=>nn,WebGLRenderTargetCube:()=>Em,WebGLRenderer:()=>Qs,WebGLUtils:()=>js,WireframeGeometry:()=>oh,WireframeHelper:()=>xm,WrapAroundEnding:()=>Ve,XHRLoader:()=>wm,ZeroCurvatureEnding:()=>Ue,ZeroFactor:()=>L,ZeroSlopeEnding:()=>Ge,ZeroStencilOp:()=>li,sRGBEncoding:()=>Ke});const n="128",r={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},a={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},o=0,s=1,l=2,u=3,h=0,c=1,d=2,p=3,m=0,f=1,g=2,_=1,v=2,b=0,y=1,x=2,w=3,M=4,E=5,S=100,T=101,k=102,A=103,z=104,L=200,R=201,C=202,P=203,q=204,D=205,I=206,B=207,O=208,F=209,N=210,H=0,U=1,G=2,V=3,W=4,j=5,Y=6,X=7,Z=0,J=1,K=2,$=0,Q=1,tt=2,et=3,it=4,nt=5,rt=300,at=301,ot=302,st=303,lt=304,ut=306,ht=307,ct=1e3,dt=1001,pt=1002,mt=1003,ft=1004,gt=1004,_t=1005,vt=1005,bt=1006,yt=1007,xt=1007,wt=1008,Mt=1008,Et=1009,St=1010,Tt=1011,kt=1012,At=1013,zt=1014,Lt=1015,Rt=1016,Ct=1017,Pt=1018,qt=1019,Dt=1020,It=1021,Bt=1022,Ot=1023,Ft=1024,Nt=1025,Ht=Ot,Ut=1026,Gt=1027,Vt=1028,Wt=1029,jt=1030,Yt=1031,Xt=1032,Zt=1033,Jt=33776,Kt=33777,$t=33778,Qt=33779,te=35840,ee=35841,ie=35842,ne=35843,re=36196,ae=37492,oe=37496,se=37808,le=37809,ue=37810,he=37811,ce=37812,de=37813,pe=37814,me=37815,fe=37816,ge=37817,_e=37818,ve=37819,be=37820,ye=37821,xe=36492,we=37840,Me=37841,Ee=37842,Se=37843,Te=37844,ke=37845,Ae=37846,ze=37847,Le=37848,Re=37849,Ce=37850,Pe=37851,qe=37852,De=37853,Ie=2200,Be=2201,Oe=2202,Fe=2300,Ne=2301,He=2302,Ue=2400,Ge=2401,Ve=2402,We=2500,je=2501,Ye=0,Xe=1,Ze=2,Je=3e3,Ke=3001,$e=3007,Qe=3002,ti=3003,ei=3004,ii=3005,ni=3006,ri=3200,ai=3201,oi=0,si=1,li=0,ui=7680,hi=7681,ci=7682,di=7683,pi=34055,mi=34056,fi=5386,gi=512,_i=513,vi=514,bi=515,yi=516,xi=517,wi=518,Mi=519,Ei=35044,Si=35048,Ti=35040,ki=35045,Ai=35049,zi=35041,Li=35046,Ri=35050,Ci=35042,Pi="100",qi="300 es";class Di{addEventListener(t,e){void 0===this._listeners&&(this._listeners={});const i=this._listeners;void 0===i[t]&&(i[t]=[]),-1===i[t].indexOf(e)&&i[t].push(e)}hasEventListener(t,e){if(void 0===this._listeners)return!1;const i=this._listeners;return void 0!==i[t]&&-1!==i[t].indexOf(e)}removeEventListener(t,e){if(void 0===this._listeners)return;const i=this._listeners[t];if(void 0!==i){const t=i.indexOf(e);-1!==t&&i.splice(t,1)}}dispatchEvent(t){if(void 0===this._listeners)return;const e=this._listeners[t.type];if(void 0!==e){t.target=this;const i=e.slice(0);for(let e=0,n=i.length;e<n;e++)i[e].call(this,t);t.target=null}}}const Ii=[];for(let t=0;t<256;t++)Ii[t]=(t<16?"0":"")+t.toString(16);let Bi=1234567;const Oi=Math.PI/180,Fi=180/Math.PI;function Ni(){const t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,i=4294967295*Math.random()|0,n=4294967295*Math.random()|0;return(Ii[255&t]+Ii[t>>8&255]+Ii[t>>16&255]+Ii[t>>24&255]+"-"+Ii[255&e]+Ii[e>>8&255]+"-"+Ii[e>>16&15|64]+Ii[e>>24&255]+"-"+Ii[63&i|128]+Ii[i>>8&255]+"-"+Ii[i>>16&255]+Ii[i>>24&255]+Ii[255&n]+Ii[n>>8&255]+Ii[n>>16&255]+Ii[n>>24&255]).toUpperCase()}function Hi(t,e,i){return Math.max(e,Math.min(i,t))}function Ui(t,e){return(t%e+e)%e}function Gi(t,e,i){return(1-i)*t+i*e}function Vi(t){return 0==(t&t-1)&&0!==t}function Wi(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))}function ji(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))}var Yi=Object.freeze({__proto__:null,DEG2RAD:Oi,RAD2DEG:Fi,generateUUID:Ni,clamp:Hi,euclideanModulo:Ui,mapLinear:function(t,e,i,n,r){return n+(t-e)*(r-n)/(i-e)},inverseLerp:function(t,e,i){return t!==e?(i-t)/(e-t):0},lerp:Gi,damp:function(t,e,i,n){return Gi(t,e,1-Math.exp(-i*n))},pingpong:function(t,e=1){return e-Math.abs(Ui(t,2*e)-e)},smoothstep:function(t,e,i){return t<=e?0:t>=i?1:(t=(t-e)/(i-e))*t*(3-2*t)},smootherstep:function(t,e,i){return t<=e?0:t>=i?1:(t=(t-e)/(i-e))*t*t*(t*(6*t-15)+10)},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},seededRandom:function(t){return void 0!==t&&(Bi=t%2147483647),Bi=16807*Bi%2147483647,(Bi-1)/2147483646},degToRad:function(t){return t*Oi},radToDeg:function(t){return t*Fi},isPowerOfTwo:Vi,ceilPowerOfTwo:Wi,floorPowerOfTwo:ji,setQuaternionFromProperEuler:function(t,e,i,n,r){const a=Math.cos,o=Math.sin,s=a(i/2),l=o(i/2),u=a((e+n)/2),h=o((e+n)/2),c=a((e-n)/2),d=o((e-n)/2),p=a((n-e)/2),m=o((n-e)/2);switch(r){case"XYX":t.set(s*h,l*c,l*d,s*u);break;case"YZY":t.set(l*d,s*h,l*c,s*u);break;case"ZXZ":t.set(l*c,l*d,s*h,s*u);break;case"XZX":t.set(s*h,l*m,l*p,s*u);break;case"YXY":t.set(l*p,s*h,l*m,s*u);break;case"ZYZ":t.set(l*m,l*p,s*h,s*u);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}}});class Xi{constructor(t=0,e=0){this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,i=this.y,n=t.elements;return this.x=n[0]*e+n[3]*i+n[6],this.y=n[1]*e+n[4]*i+n[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,i=this.y-t.y;return e*e+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e,i){return void 0!==i&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const i=Math.cos(e),n=Math.sin(e),r=this.x-t.x,a=this.y-t.y;return this.x=r*i-a*n+t.x,this.y=r*n+a*i+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}Xi.prototype.isVector2=!0;class Zi{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(t,e,i,n,r,a,o,s,l){const u=this.elements;return u[0]=t,u[1]=n,u[2]=o,u[3]=e,u[4]=r,u[5]=s,u[6]=i,u[7]=a,u[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],this}extractBasis(t,e,i){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,n=e.elements,r=this.elements,a=i[0],o=i[3],s=i[6],l=i[1],u=i[4],h=i[7],c=i[2],d=i[5],p=i[8],m=n[0],f=n[3],g=n[6],_=n[1],v=n[4],b=n[7],y=n[2],x=n[5],w=n[8];return r[0]=a*m+o*_+s*y,r[3]=a*f+o*v+s*x,r[6]=a*g+o*b+s*w,r[1]=l*m+u*_+h*y,r[4]=l*f+u*v+h*x,r[7]=l*g+u*b+h*w,r[2]=c*m+d*_+p*y,r[5]=c*f+d*v+p*x,r[8]=c*g+d*b+p*w,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],i=t[1],n=t[2],r=t[3],a=t[4],o=t[5],s=t[6],l=t[7],u=t[8];return e*a*u-e*o*l-i*r*u+i*o*s+n*r*l-n*a*s}invert(){const t=this.elements,e=t[0],i=t[1],n=t[2],r=t[3],a=t[4],o=t[5],s=t[6],l=t[7],u=t[8],h=u*a-o*l,c=o*s-u*r,d=l*r-a*s,p=e*h+i*c+n*d;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);const m=1/p;return t[0]=h*m,t[1]=(n*l-u*i)*m,t[2]=(o*i-n*a)*m,t[3]=c*m,t[4]=(u*e-n*s)*m,t[5]=(n*r-o*e)*m,t[6]=d*m,t[7]=(i*s-l*e)*m,t[8]=(a*e-i*r)*m,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,i,n,r,a,o){const s=Math.cos(r),l=Math.sin(r);return this.set(i*s,i*l,-i*(s*a+l*o)+a+t,-n*l,n*s,-n*(-l*a+s*o)+o+e,0,0,1),this}scale(t,e){const i=this.elements;return i[0]*=t,i[3]*=t,i[6]*=t,i[1]*=e,i[4]*=e,i[7]*=e,this}rotate(t){const e=Math.cos(t),i=Math.sin(t),n=this.elements,r=n[0],a=n[3],o=n[6],s=n[1],l=n[4],u=n[7];return n[0]=e*r+i*s,n[3]=e*a+i*l,n[6]=e*o+i*u,n[1]=-i*r+e*s,n[4]=-i*a+e*l,n[7]=-i*o+e*u,this}translate(t,e){const i=this.elements;return i[0]+=t*i[2],i[3]+=t*i[5],i[6]+=t*i[8],i[1]+=e*i[2],i[4]+=e*i[5],i[7]+=e*i[8],this}equals(t){const e=this.elements,i=t.elements;for(let t=0;t<9;t++)if(e[t]!==i[t])return!1;return!0}fromArray(t,e=0){for(let i=0;i<9;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t}clone(){return(new this.constructor).fromArray(this.elements)}}let Ji;Zi.prototype.isMatrix3=!0;class Ki{static getDataURL(t){if(/^data:/i.test(t.src))return t.src;if("undefined"==typeof HTMLCanvasElement)return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{void 0===Ji&&(Ji=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),Ji.width=t.width,Ji.height=t.height;const i=Ji.getContext("2d");t instanceof ImageData?i.putImageData(t,0,0):i.drawImage(t,0,0,t.width,t.height),e=Ji}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}}let $i=0;class Qi extends Di{constructor(t=Qi.DEFAULT_IMAGE,e=Qi.DEFAULT_MAPPING,i=dt,n=dt,r=bt,a=wt,o=Ot,s=Et,l=1,u=Je){super(),Object.defineProperty(this,"id",{value:$i++}),this.uuid=Ni(),this.name="",this.image=t,this.mipmaps=[],this.mapping=e,this.wrapS=i,this.wrapT=n,this.magFilter=r,this.minFilter=a,this.anisotropy=l,this.format=o,this.internalFormat=null,this.type=s,this.offset=new Xi(0,0),this.repeat=new Xi(1,1),this.center=new Xi(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Zi,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=u,this.version=0,this.onUpdate=null}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(t){return this.name=t.name,this.image=t.image,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this}toJSON(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];const i={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){const n=this.image;if(void 0===n.uuid&&(n.uuid=Ni()),!e&&void 0===t.images[n.uuid]){let e;if(Array.isArray(n)){e=[];for(let t=0,i=n.length;t<i;t++)n[t].isDataTexture?e.push(tn(n[t].image)):e.push(tn(n[t]))}else e=tn(n);t.images[n.uuid]={uuid:n.uuid,url:e}}i.image=n.uuid}return e||(t.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==rt)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case ct:t.x=t.x-Math.floor(t.x);break;case dt:t.x=t.x<0?0:1;break;case pt:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case ct:t.y=t.y-Math.floor(t.y);break;case dt:t.y=t.y<0?0:1;break;case pt:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){!0===t&&this.version++}}function tn(t){return"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap?Ki.getDataURL(t):t.data?{data:Array.prototype.slice.call(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}Qi.DEFAULT_IMAGE=void 0,Qi.DEFAULT_MAPPING=rt,Qi.prototype.isTexture=!0;class en{constructor(t=0,e=0,i=0,n=1){this.x=t,this.y=e,this.z=i,this.w=n}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,i,n){return this.x=t,this.y=e,this.z=i,this.w=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,i=this.y,n=this.z,r=this.w,a=t.elements;return this.x=a[0]*e+a[4]*i+a[8]*n+a[12]*r,this.y=a[1]*e+a[5]*i+a[9]*n+a[13]*r,this.z=a[2]*e+a[6]*i+a[10]*n+a[14]*r,this.w=a[3]*e+a[7]*i+a[11]*n+a[15]*r,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,i,n,r;const a=.01,o=.1,s=t.elements,l=s[0],u=s[4],h=s[8],c=s[1],d=s[5],p=s[9],m=s[2],f=s[6],g=s[10];if(Math.abs(u-c)<a&&Math.abs(h-m)<a&&Math.abs(p-f)<a){if(Math.abs(u+c)<o&&Math.abs(h+m)<o&&Math.abs(p+f)<o&&Math.abs(l+d+g-3)<o)return this.set(1,0,0,0),this;e=Math.PI;const t=(l+1)/2,s=(d+1)/2,_=(g+1)/2,v=(u+c)/4,b=(h+m)/4,y=(p+f)/4;return t>s&&t>_?t<a?(i=0,n=.707106781,r=.707106781):(i=Math.sqrt(t),n=v/i,r=b/i):s>_?s<a?(i=.707106781,n=0,r=.707106781):(n=Math.sqrt(s),i=v/n,r=y/n):_<a?(i=.707106781,n=.707106781,r=0):(r=Math.sqrt(_),i=b/r,n=y/r),this.set(i,n,r,e),this}let _=Math.sqrt((f-p)*(f-p)+(h-m)*(h-m)+(c-u)*(c-u));return Math.abs(_)<.001&&(_=1),this.x=(f-p)/_,this.y=(h-m)/_,this.z=(c-u)/_,this.w=Math.acos((l+d+g-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this.z=t.z+(e.z-t.z)*i,this.w=t.w+(e.w-t.w)*i,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e,i){return void 0!==i&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}en.prototype.isVector4=!0;class nn extends Di{constructor(t,e,i){super(),this.width=t,this.height=e,this.depth=1,this.scissor=new en(0,0,t,e),this.scissorTest=!1,this.viewport=new en(0,0,t,e),i=i||{},this.texture=new Qi(void 0,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.encoding),this.texture.image={},this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=1,this.texture.generateMipmaps=void 0!==i.generateMipmaps&&i.generateMipmaps,this.texture.minFilter=void 0!==i.minFilter?i.minFilter:bt,this.depthBuffer=void 0===i.depthBuffer||i.depthBuffer,this.stencilBuffer=void 0!==i.stencilBuffer&&i.stencilBuffer,this.depthTexture=void 0!==i.depthTexture?i.depthTexture:null}setTexture(t){t.image={width:this.width,height:this.height,depth:this.depth},this.texture=t}setSize(t,e,i=1){this.width===t&&this.height===e&&this.depth===i||(this.width=t,this.height=e,this.depth=i,this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=i,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return(new this.constructor).copy(this)}copy(t){return this.width=t.width,this.height=t.height,this.depth=t.depth,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}nn.prototype.isWebGLRenderTarget=!0;class rn extends nn{constructor(t,e,i){super(t,e,i),this.samples=4}copy(t){return super.copy.call(this,t),this.samples=t.samples,this}}rn.prototype.isWebGLMultisampleRenderTarget=!0;class an{constructor(t=0,e=0,i=0,n=1){this._x=t,this._y=e,this._z=i,this._w=n}static slerp(t,e,i,n){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),i.slerpQuaternions(t,e,n)}static slerpFlat(t,e,i,n,r,a,o){let s=i[n+0],l=i[n+1],u=i[n+2],h=i[n+3];const c=r[a+0],d=r[a+1],p=r[a+2],m=r[a+3];if(0===o)return t[e+0]=s,t[e+1]=l,t[e+2]=u,void(t[e+3]=h);if(1===o)return t[e+0]=c,t[e+1]=d,t[e+2]=p,void(t[e+3]=m);if(h!==m||s!==c||l!==d||u!==p){let t=1-o;const e=s*c+l*d+u*p+h*m,i=e>=0?1:-1,n=1-e*e;if(n>Number.EPSILON){const r=Math.sqrt(n),a=Math.atan2(r,e*i);t=Math.sin(t*a)/r,o=Math.sin(o*a)/r}const r=o*i;if(s=s*t+c*r,l=l*t+d*r,u=u*t+p*r,h=h*t+m*r,t===1-o){const t=1/Math.sqrt(s*s+l*l+u*u+h*h);s*=t,l*=t,u*=t,h*=t}}t[e]=s,t[e+1]=l,t[e+2]=u,t[e+3]=h}static multiplyQuaternionsFlat(t,e,i,n,r,a){const o=i[n],s=i[n+1],l=i[n+2],u=i[n+3],h=r[a],c=r[a+1],d=r[a+2],p=r[a+3];return t[e]=o*p+u*h+s*d-l*c,t[e+1]=s*p+u*c+l*h-o*d,t[e+2]=l*p+u*d+o*c-s*h,t[e+3]=u*p-o*h-s*c-l*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,i,n){return this._x=t,this._y=e,this._z=i,this._w=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){if(!t||!t.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const i=t._x,n=t._y,r=t._z,a=t._order,o=Math.cos,s=Math.sin,l=o(i/2),u=o(n/2),h=o(r/2),c=s(i/2),d=s(n/2),p=s(r/2);switch(a){case"XYZ":this._x=c*u*h+l*d*p,this._y=l*d*h-c*u*p,this._z=l*u*p+c*d*h,this._w=l*u*h-c*d*p;break;case"YXZ":this._x=c*u*h+l*d*p,this._y=l*d*h-c*u*p,this._z=l*u*p-c*d*h,this._w=l*u*h+c*d*p;break;case"ZXY":this._x=c*u*h-l*d*p,this._y=l*d*h+c*u*p,this._z=l*u*p+c*d*h,this._w=l*u*h-c*d*p;break;case"ZYX":this._x=c*u*h-l*d*p,this._y=l*d*h+c*u*p,this._z=l*u*p-c*d*h,this._w=l*u*h+c*d*p;break;case"YZX":this._x=c*u*h+l*d*p,this._y=l*d*h+c*u*p,this._z=l*u*p-c*d*h,this._w=l*u*h-c*d*p;break;case"XZY":this._x=c*u*h-l*d*p,this._y=l*d*h-c*u*p,this._z=l*u*p+c*d*h,this._w=l*u*h+c*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return!1!==e&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const i=e/2,n=Math.sin(i);return this._x=t.x*n,this._y=t.y*n,this._z=t.z*n,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,i=e[0],n=e[4],r=e[8],a=e[1],o=e[5],s=e[9],l=e[2],u=e[6],h=e[10],c=i+o+h;if(c>0){const t=.5/Math.sqrt(c+1);this._w=.25/t,this._x=(u-s)*t,this._y=(r-l)*t,this._z=(a-n)*t}else if(i>o&&i>h){const t=2*Math.sqrt(1+i-o-h);this._w=(u-s)/t,this._x=.25*t,this._y=(n+a)/t,this._z=(r+l)/t}else if(o>h){const t=2*Math.sqrt(1+o-i-h);this._w=(r-l)/t,this._x=(n+a)/t,this._y=.25*t,this._z=(s+u)/t}else{const t=2*Math.sqrt(1+h-i-o);this._w=(a-n)/t,this._x=(r+l)/t,this._y=(s+u)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let i=t.dot(e)+1;return i<Number.EPSILON?(i=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=i):(this._x=0,this._y=-t.z,this._z=t.y,this._w=i)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=i),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(Hi(this.dot(t),-1,1)))}rotateTowards(t,e){const i=this.angleTo(t);if(0===i)return this;const n=Math.min(1,e/i);return this.slerp(t,n),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t,e){return void 0!==e?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const i=t._x,n=t._y,r=t._z,a=t._w,o=e._x,s=e._y,l=e._z,u=e._w;return this._x=i*u+a*o+n*l-r*s,this._y=n*u+a*s+r*o-i*l,this._z=r*u+a*l+i*s-n*o,this._w=a*u-i*o-n*s-r*l,this._onChangeCallback(),this}slerp(t,e){if(0===e)return this;if(1===e)return this.copy(t);const i=this._x,n=this._y,r=this._z,a=this._w;let o=a*t._w+i*t._x+n*t._y+r*t._z;if(o<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,o=-o):this.copy(t),o>=1)return this._w=a,this._x=i,this._y=n,this._z=r,this;const s=1-o*o;if(s<=Number.EPSILON){const t=1-e;return this._w=t*a+e*this._w,this._x=t*i+e*this._x,this._y=t*n+e*this._y,this._z=t*r+e*this._z,this.normalize(),this._onChangeCallback(),this}const l=Math.sqrt(s),u=Math.atan2(l,o),h=Math.sin((1-e)*u)/l,c=Math.sin(e*u)/l;return this._w=a*h+this._w*c,this._x=i*h+this._x*c,this._y=n*h+this._y*c,this._z=r*h+this._z*c,this._onChangeCallback(),this}slerpQuaternions(t,e,i){this.copy(t).slerp(e,i)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}an.prototype.isQuaternion=!0;class on{constructor(t=0,e=0,i=0){this.x=t,this.y=e,this.z=i}set(t,e,i){return void 0===i&&(i=this.z),this.x=t,this.y=e,this.z=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return t&&t.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(ln.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(ln.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,i=this.y,n=this.z,r=t.elements;return this.x=r[0]*e+r[3]*i+r[6]*n,this.y=r[1]*e+r[4]*i+r[7]*n,this.z=r[2]*e+r[5]*i+r[8]*n,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,i=this.y,n=this.z,r=t.elements,a=1/(r[3]*e+r[7]*i+r[11]*n+r[15]);return this.x=(r[0]*e+r[4]*i+r[8]*n+r[12])*a,this.y=(r[1]*e+r[5]*i+r[9]*n+r[13])*a,this.z=(r[2]*e+r[6]*i+r[10]*n+r[14])*a,this}applyQuaternion(t){const e=this.x,i=this.y,n=this.z,r=t.x,a=t.y,o=t.z,s=t.w,l=s*e+a*n-o*i,u=s*i+o*e-r*n,h=s*n+r*i-a*e,c=-r*e-a*i-o*n;return this.x=l*s+c*-r+u*-o-h*-a,this.y=u*s+c*-a+h*-r-l*-o,this.z=h*s+c*-o+l*-a-u*-r,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,i=this.y,n=this.z,r=t.elements;return this.x=r[0]*e+r[4]*i+r[8]*n,this.y=r[1]*e+r[5]*i+r[9]*n,this.z=r[2]*e+r[6]*i+r[10]*n,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this.z=t.z+(e.z-t.z)*i,this}cross(t,e){return void 0!==e?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e)):this.crossVectors(this,t)}crossVectors(t,e){const i=t.x,n=t.y,r=t.z,a=e.x,o=e.y,s=e.z;return this.x=n*s-r*o,this.y=r*a-i*s,this.z=i*o-n*a,this}projectOnVector(t){const e=t.lengthSq();if(0===e)return this.set(0,0,0);const i=t.dot(this)/e;return this.copy(t).multiplyScalar(i)}projectOnPlane(t){return sn.copy(this).projectOnVector(t),this.sub(sn)}reflect(t){return this.sub(sn.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const i=this.dot(t)/e;return Math.acos(Hi(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,i=this.y-t.y,n=this.z-t.z;return e*e+i*i+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,i){const n=Math.sin(e)*t;return this.x=n*Math.sin(i),this.y=Math.cos(e)*t,this.z=n*Math.cos(i),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,i){return this.x=t*Math.sin(e),this.y=i,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length(),n=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=i,this.z=n,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,4*e)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,3*e)}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e,i){return void 0!==i&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}on.prototype.isVector3=!0;const sn=new on,ln=new an;class un{constructor(t=new on(1/0,1/0,1/0),e=new on(-1/0,-1/0,-1/0)){this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){let e=1/0,i=1/0,n=1/0,r=-1/0,a=-1/0,o=-1/0;for(let s=0,l=t.length;s<l;s+=3){const l=t[s],u=t[s+1],h=t[s+2];l<e&&(e=l),u<i&&(i=u),h<n&&(n=h),l>r&&(r=l),u>a&&(a=u),h>o&&(o=h)}return this.min.set(e,i,n),this.max.set(r,a,o),this}setFromBufferAttribute(t){let e=1/0,i=1/0,n=1/0,r=-1/0,a=-1/0,o=-1/0;for(let s=0,l=t.count;s<l;s++){const l=t.getX(s),u=t.getY(s),h=t.getZ(s);l<e&&(e=l),u<i&&(i=u),h<n&&(n=h),l>r&&(r=l),u>a&&(a=u),h>o&&(o=h)}return this.min.set(e,i,n),this.max.set(r,a,o),this}setFromPoints(t){this.makeEmpty();for(let e=0,i=t.length;e<i;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const i=cn.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}setFromObject(t){return this.makeEmpty(),this.expandByObject(t)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return void 0===t&&(console.warn("THREE.Box3: .getCenter() target is now required"),t=new on),this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return void 0===t&&(console.warn("THREE.Box3: .getSize() target is now required"),t=new on),this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t){t.updateWorldMatrix(!1,!1);const e=t.geometry;void 0!==e&&(null===e.boundingBox&&e.computeBoundingBox(),dn.copy(e.boundingBox),dn.applyMatrix4(t.matrixWorld),this.union(dn));const i=t.children;for(let t=0,e=i.length;t<e;t++)this.expandByObject(i[t]);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return void 0===e&&(console.warn("THREE.Box3: .getParameter() target is now required"),e=new on),e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,cn),cn.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,i;return t.normal.x>0?(e=t.normal.x*this.min.x,i=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,i=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,i+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,i+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,i+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,i+=t.normal.z*this.min.z),e<=-t.constant&&i>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(bn),yn.subVectors(this.max,bn),pn.subVectors(t.a,bn),mn.subVectors(t.b,bn),fn.subVectors(t.c,bn),gn.subVectors(mn,pn),_n.subVectors(fn,mn),vn.subVectors(pn,fn);let e=[0,-gn.z,gn.y,0,-_n.z,_n.y,0,-vn.z,vn.y,gn.z,0,-gn.x,_n.z,0,-_n.x,vn.z,0,-vn.x,-gn.y,gn.x,0,-_n.y,_n.x,0,-vn.y,vn.x,0];return!!Mn(e,pn,mn,fn,yn)&&(e=[1,0,0,0,1,0,0,0,1],!!Mn(e,pn,mn,fn,yn)&&(xn.crossVectors(gn,_n),e=[xn.x,xn.y,xn.z],Mn(e,pn,mn,fn,yn)))}clampPoint(t,e){return void 0===e&&(console.warn("THREE.Box3: .clampPoint() target is now required"),e=new on),e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return cn.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return void 0===t&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(t.center),t.radius=.5*this.getSize(cn).length(),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(hn[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),hn[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),hn[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),hn[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),hn[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),hn[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),hn[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),hn[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(hn)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}un.prototype.isBox3=!0;const hn=[new on,new on,new on,new on,new on,new on,new on,new on],cn=new on,dn=new un,pn=new on,mn=new on,fn=new on,gn=new on,_n=new on,vn=new on,bn=new on,yn=new on,xn=new on,wn=new on;function Mn(t,e,i,n,r){for(let a=0,o=t.length-3;a<=o;a+=3){wn.fromArray(t,a);const o=r.x*Math.abs(wn.x)+r.y*Math.abs(wn.y)+r.z*Math.abs(wn.z),s=e.dot(wn),l=i.dot(wn),u=n.dot(wn);if(Math.max(-Math.max(s,l,u),Math.min(s,l,u))>o)return!1}return!0}const En=new un,Sn=new on,Tn=new on,kn=new on;class An{constructor(t=new on,e=-1){this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const i=this.center;void 0!==e?i.copy(e):En.setFromPoints(t).getCenter(i);let n=0;for(let e=0,r=t.length;e<r;e++)n=Math.max(n,i.distanceToSquared(t[e]));return this.radius=Math.sqrt(n),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const i=this.center.distanceToSquared(t);return void 0===e&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),e=new on),e.copy(t),i>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return void 0===t&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),t=new un),this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){kn.subVectors(t,this.center);const e=kn.lengthSq();if(e>this.radius*this.radius){const t=Math.sqrt(e),i=.5*(t-this.radius);this.center.add(kn.multiplyScalar(i/t)),this.radius+=i}return this}union(t){return Tn.subVectors(t.center,this.center).normalize().multiplyScalar(t.radius),this.expandByPoint(Sn.copy(t.center).add(Tn)),this.expandByPoint(Sn.copy(t.center).sub(Tn)),this}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const zn=new on,Ln=new on,Rn=new on,Cn=new on,Pn=new on,qn=new on,Dn=new on;class In{constructor(t=new on,e=new on(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return void 0===e&&(console.warn("THREE.Ray: .at() target is now required"),e=new on),e.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,zn)),this}closestPointToPoint(t,e){void 0===e&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),e=new on),e.subVectors(t,this.origin);const i=e.dot(this.direction);return i<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(i).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=zn.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(zn.copy(this.direction).multiplyScalar(e).add(this.origin),zn.distanceToSquared(t))}distanceSqToSegment(t,e,i,n){Ln.copy(t).add(e).multiplyScalar(.5),Rn.copy(e).sub(t).normalize(),Cn.copy(this.origin).sub(Ln);const r=.5*t.distanceTo(e),a=-this.direction.dot(Rn),o=Cn.dot(this.direction),s=-Cn.dot(Rn),l=Cn.lengthSq(),u=Math.abs(1-a*a);let h,c,d,p;if(u>0)if(h=a*s-o,c=a*o-s,p=r*u,h>=0)if(c>=-p)if(c<=p){const t=1/u;h*=t,c*=t,d=h*(h+a*c+2*o)+c*(a*h+c+2*s)+l}else c=r,h=Math.max(0,-(a*c+o)),d=-h*h+c*(c+2*s)+l;else c=-r,h=Math.max(0,-(a*c+o)),d=-h*h+c*(c+2*s)+l;else c<=-p?(h=Math.max(0,-(-a*r+o)),c=h>0?-r:Math.min(Math.max(-r,-s),r),d=-h*h+c*(c+2*s)+l):c<=p?(h=0,c=Math.min(Math.max(-r,-s),r),d=c*(c+2*s)+l):(h=Math.max(0,-(a*r+o)),c=h>0?r:Math.min(Math.max(-r,-s),r),d=-h*h+c*(c+2*s)+l);else c=a>0?-r:r,h=Math.max(0,-(a*c+o)),d=-h*h+c*(c+2*s)+l;return i&&i.copy(this.direction).multiplyScalar(h).add(this.origin),n&&n.copy(Rn).multiplyScalar(c).add(Ln),d}intersectSphere(t,e){zn.subVectors(t.center,this.origin);const i=zn.dot(this.direction),n=zn.dot(zn)-i*i,r=t.radius*t.radius;if(n>r)return null;const a=Math.sqrt(r-n),o=i-a,s=i+a;return o<0&&s<0?null:o<0?this.at(s,e):this.at(o,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;const i=-(this.origin.dot(t.normal)+t.constant)/e;return i>=0?i:null}intersectPlane(t,e){const i=this.distanceToPlane(t);return null===i?null:this.at(i,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return 0===e||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let i,n,r,a,o,s;const l=1/this.direction.x,u=1/this.direction.y,h=1/this.direction.z,c=this.origin;return l>=0?(i=(t.min.x-c.x)*l,n=(t.max.x-c.x)*l):(i=(t.max.x-c.x)*l,n=(t.min.x-c.x)*l),u>=0?(r=(t.min.y-c.y)*u,a=(t.max.y-c.y)*u):(r=(t.max.y-c.y)*u,a=(t.min.y-c.y)*u),i>a||r>n?null:((r>i||i!=i)&&(i=r),(a<n||n!=n)&&(n=a),h>=0?(o=(t.min.z-c.z)*h,s=(t.max.z-c.z)*h):(o=(t.max.z-c.z)*h,s=(t.min.z-c.z)*h),i>s||o>n?null:((o>i||i!=i)&&(i=o),(s<n||n!=n)&&(n=s),n<0?null:this.at(i>=0?i:n,e)))}intersectsBox(t){return null!==this.intersectBox(t,zn)}intersectTriangle(t,e,i,n,r){Pn.subVectors(e,t),qn.subVectors(i,t),Dn.crossVectors(Pn,qn);let a,o=this.direction.dot(Dn);if(o>0){if(n)return null;a=1}else{if(!(o<0))return null;a=-1,o=-o}Cn.subVectors(this.origin,t);const s=a*this.direction.dot(qn.crossVectors(Cn,qn));if(s<0)return null;const l=a*this.direction.dot(Pn.cross(Cn));if(l<0)return null;if(s+l>o)return null;const u=-a*Cn.dot(Dn);return u<0?null:this.at(u/o,r)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class Bn{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(t,e,i,n,r,a,o,s,l,u,h,c,d,p,m,f){const g=this.elements;return g[0]=t,g[4]=e,g[8]=i,g[12]=n,g[1]=r,g[5]=a,g[9]=o,g[13]=s,g[2]=l,g[6]=u,g[10]=h,g[14]=c,g[3]=d,g[7]=p,g[11]=m,g[15]=f,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new Bn).fromArray(this.elements)}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],e[9]=i[9],e[10]=i[10],e[11]=i[11],e[12]=i[12],e[13]=i[13],e[14]=i[14],e[15]=i[15],this}copyPosition(t){const e=this.elements,i=t.elements;return e[12]=i[12],e[13]=i[13],e[14]=i[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,i){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(t,e,i){return this.set(t.x,e.x,i.x,0,t.y,e.y,i.y,0,t.z,e.z,i.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,i=t.elements,n=1/On.setFromMatrixColumn(t,0).length(),r=1/On.setFromMatrixColumn(t,1).length(),a=1/On.setFromMatrixColumn(t,2).length();return e[0]=i[0]*n,e[1]=i[1]*n,e[2]=i[2]*n,e[3]=0,e[4]=i[4]*r,e[5]=i[5]*r,e[6]=i[6]*r,e[7]=0,e[8]=i[8]*a,e[9]=i[9]*a,e[10]=i[10]*a,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const e=this.elements,i=t.x,n=t.y,r=t.z,a=Math.cos(i),o=Math.sin(i),s=Math.cos(n),l=Math.sin(n),u=Math.cos(r),h=Math.sin(r);if("XYZ"===t.order){const t=a*u,i=a*h,n=o*u,r=o*h;e[0]=s*u,e[4]=-s*h,e[8]=l,e[1]=i+n*l,e[5]=t-r*l,e[9]=-o*s,e[2]=r-t*l,e[6]=n+i*l,e[10]=a*s}else if("YXZ"===t.order){const t=s*u,i=s*h,n=l*u,r=l*h;e[0]=t+r*o,e[4]=n*o-i,e[8]=a*l,e[1]=a*h,e[5]=a*u,e[9]=-o,e[2]=i*o-n,e[6]=r+t*o,e[10]=a*s}else if("ZXY"===t.order){const t=s*u,i=s*h,n=l*u,r=l*h;e[0]=t-r*o,e[4]=-a*h,e[8]=n+i*o,e[1]=i+n*o,e[5]=a*u,e[9]=r-t*o,e[2]=-a*l,e[6]=o,e[10]=a*s}else if("ZYX"===t.order){const t=a*u,i=a*h,n=o*u,r=o*h;e[0]=s*u,e[4]=n*l-i,e[8]=t*l+r,e[1]=s*h,e[5]=r*l+t,e[9]=i*l-n,e[2]=-l,e[6]=o*s,e[10]=a*s}else if("YZX"===t.order){const t=a*s,i=a*l,n=o*s,r=o*l;e[0]=s*u,e[4]=r-t*h,e[8]=n*h+i,e[1]=h,e[5]=a*u,e[9]=-o*u,e[2]=-l*u,e[6]=i*h+n,e[10]=t-r*h}else if("XZY"===t.order){const t=a*s,i=a*l,n=o*s,r=o*l;e[0]=s*u,e[4]=-h,e[8]=l*u,e[1]=t*h+r,e[5]=a*u,e[9]=i*h-n,e[2]=n*h-i,e[6]=o*u,e[10]=r*h+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(Nn,t,Hn)}lookAt(t,e,i){const n=this.elements;return Vn.subVectors(t,e),0===Vn.lengthSq()&&(Vn.z=1),Vn.normalize(),Un.crossVectors(i,Vn),0===Un.lengthSq()&&(1===Math.abs(i.z)?Vn.x+=1e-4:Vn.z+=1e-4,Vn.normalize(),Un.crossVectors(i,Vn)),Un.normalize(),Gn.crossVectors(Vn,Un),n[0]=Un.x,n[4]=Gn.x,n[8]=Vn.x,n[1]=Un.y,n[5]=Gn.y,n[9]=Vn.y,n[2]=Un.z,n[6]=Gn.z,n[10]=Vn.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,n=e.elements,r=this.elements,a=i[0],o=i[4],s=i[8],l=i[12],u=i[1],h=i[5],c=i[9],d=i[13],p=i[2],m=i[6],f=i[10],g=i[14],_=i[3],v=i[7],b=i[11],y=i[15],x=n[0],w=n[4],M=n[8],E=n[12],S=n[1],T=n[5],k=n[9],A=n[13],z=n[2],L=n[6],R=n[10],C=n[14],P=n[3],q=n[7],D=n[11],I=n[15];return r[0]=a*x+o*S+s*z+l*P,r[4]=a*w+o*T+s*L+l*q,r[8]=a*M+o*k+s*R+l*D,r[12]=a*E+o*A+s*C+l*I,r[1]=u*x+h*S+c*z+d*P,r[5]=u*w+h*T+c*L+d*q,r[9]=u*M+h*k+c*R+d*D,r[13]=u*E+h*A+c*C+d*I,r[2]=p*x+m*S+f*z+g*P,r[6]=p*w+m*T+f*L+g*q,r[10]=p*M+m*k+f*R+g*D,r[14]=p*E+m*A+f*C+g*I,r[3]=_*x+v*S+b*z+y*P,r[7]=_*w+v*T+b*L+y*q,r[11]=_*M+v*k+b*R+y*D,r[15]=_*E+v*A+b*C+y*I,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],i=t[4],n=t[8],r=t[12],a=t[1],o=t[5],s=t[9],l=t[13],u=t[2],h=t[6],c=t[10],d=t[14];return t[3]*(+r*s*h-n*l*h-r*o*c+i*l*c+n*o*d-i*s*d)+t[7]*(+e*s*d-e*l*c+r*a*c-n*a*d+n*l*u-r*s*u)+t[11]*(+e*l*h-e*o*d-r*a*h+i*a*d+r*o*u-i*l*u)+t[15]*(-n*o*u-e*s*h+e*o*c+n*a*h-i*a*c+i*s*u)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,i){const n=this.elements;return t.isVector3?(n[12]=t.x,n[13]=t.y,n[14]=t.z):(n[12]=t,n[13]=e,n[14]=i),this}invert(){const t=this.elements,e=t[0],i=t[1],n=t[2],r=t[3],a=t[4],o=t[5],s=t[6],l=t[7],u=t[8],h=t[9],c=t[10],d=t[11],p=t[12],m=t[13],f=t[14],g=t[15],_=h*f*l-m*c*l+m*s*d-o*f*d-h*s*g+o*c*g,v=p*c*l-u*f*l-p*s*d+a*f*d+u*s*g-a*c*g,b=u*m*l-p*h*l+p*o*d-a*m*d-u*o*g+a*h*g,y=p*h*s-u*m*s-p*o*c+a*m*c+u*o*f-a*h*f,x=e*_+i*v+n*b+r*y;if(0===x)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const w=1/x;return t[0]=_*w,t[1]=(m*c*r-h*f*r-m*n*d+i*f*d+h*n*g-i*c*g)*w,t[2]=(o*f*r-m*s*r+m*n*l-i*f*l-o*n*g+i*s*g)*w,t[3]=(h*s*r-o*c*r-h*n*l+i*c*l+o*n*d-i*s*d)*w,t[4]=v*w,t[5]=(u*f*r-p*c*r+p*n*d-e*f*d-u*n*g+e*c*g)*w,t[6]=(p*s*r-a*f*r-p*n*l+e*f*l+a*n*g-e*s*g)*w,t[7]=(a*c*r-u*s*r+u*n*l-e*c*l-a*n*d+e*s*d)*w,t[8]=b*w,t[9]=(p*h*r-u*m*r-p*i*d+e*m*d+u*i*g-e*h*g)*w,t[10]=(a*m*r-p*o*r+p*i*l-e*m*l-a*i*g+e*o*g)*w,t[11]=(u*o*r-a*h*r-u*i*l+e*h*l+a*i*d-e*o*d)*w,t[12]=y*w,t[13]=(u*m*n-p*h*n+p*i*c-e*m*c-u*i*f+e*h*f)*w,t[14]=(p*o*n-a*m*n-p*i*s+e*m*s+a*i*f-e*o*f)*w,t[15]=(a*h*n-u*o*n+u*i*s-e*h*s-a*i*c+e*o*c)*w,this}scale(t){const e=this.elements,i=t.x,n=t.y,r=t.z;return e[0]*=i,e[4]*=n,e[8]*=r,e[1]*=i,e[5]*=n,e[9]*=r,e[2]*=i,e[6]*=n,e[10]*=r,e[3]*=i,e[7]*=n,e[11]*=r,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],i=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],n=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,i,n))}makeTranslation(t,e,i){return this.set(1,0,0,t,0,1,0,e,0,0,1,i,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),i=Math.sin(t);return this.set(1,0,0,0,0,e,-i,0,0,i,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,0,i,0,0,1,0,0,-i,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,0,i,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const i=Math.cos(e),n=Math.sin(e),r=1-i,a=t.x,o=t.y,s=t.z,l=r*a,u=r*o;return this.set(l*a+i,l*o-n*s,l*s+n*o,0,l*o+n*s,u*o+i,u*s-n*a,0,l*s-n*o,u*s+n*a,r*s*s+i,0,0,0,0,1),this}makeScale(t,e,i){return this.set(t,0,0,0,0,e,0,0,0,0,i,0,0,0,0,1),this}makeShear(t,e,i){return this.set(1,e,i,0,t,1,i,0,t,e,1,0,0,0,0,1),this}compose(t,e,i){const n=this.elements,r=e._x,a=e._y,o=e._z,s=e._w,l=r+r,u=a+a,h=o+o,c=r*l,d=r*u,p=r*h,m=a*u,f=a*h,g=o*h,_=s*l,v=s*u,b=s*h,y=i.x,x=i.y,w=i.z;return n[0]=(1-(m+g))*y,n[1]=(d+b)*y,n[2]=(p-v)*y,n[3]=0,n[4]=(d-b)*x,n[5]=(1-(c+g))*x,n[6]=(f+_)*x,n[7]=0,n[8]=(p+v)*w,n[9]=(f-_)*w,n[10]=(1-(c+m))*w,n[11]=0,n[12]=t.x,n[13]=t.y,n[14]=t.z,n[15]=1,this}decompose(t,e,i){const n=this.elements;let r=On.set(n[0],n[1],n[2]).length();const a=On.set(n[4],n[5],n[6]).length(),o=On.set(n[8],n[9],n[10]).length();this.determinant()<0&&(r=-r),t.x=n[12],t.y=n[13],t.z=n[14],Fn.copy(this);const s=1/r,l=1/a,u=1/o;return Fn.elements[0]*=s,Fn.elements[1]*=s,Fn.elements[2]*=s,Fn.elements[4]*=l,Fn.elements[5]*=l,Fn.elements[6]*=l,Fn.elements[8]*=u,Fn.elements[9]*=u,Fn.elements[10]*=u,e.setFromRotationMatrix(Fn),i.x=r,i.y=a,i.z=o,this}makePerspective(t,e,i,n,r,a){void 0===a&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const o=this.elements,s=2*r/(e-t),l=2*r/(i-n),u=(e+t)/(e-t),h=(i+n)/(i-n),c=-(a+r)/(a-r),d=-2*a*r/(a-r);return o[0]=s,o[4]=0,o[8]=u,o[12]=0,o[1]=0,o[5]=l,o[9]=h,o[13]=0,o[2]=0,o[6]=0,o[10]=c,o[14]=d,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(t,e,i,n,r,a){const o=this.elements,s=1/(e-t),l=1/(i-n),u=1/(a-r),h=(e+t)*s,c=(i+n)*l,d=(a+r)*u;return o[0]=2*s,o[4]=0,o[8]=0,o[12]=-h,o[1]=0,o[5]=2*l,o[9]=0,o[13]=-c,o[2]=0,o[6]=0,o[10]=-2*u,o[14]=-d,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(t){const e=this.elements,i=t.elements;for(let t=0;t<16;t++)if(e[t]!==i[t])return!1;return!0}fromArray(t,e=0){for(let i=0;i<16;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t[e+9]=i[9],t[e+10]=i[10],t[e+11]=i[11],t[e+12]=i[12],t[e+13]=i[13],t[e+14]=i[14],t[e+15]=i[15],t}}Bn.prototype.isMatrix4=!0;const On=new on,Fn=new Bn,Nn=new on(0,0,0),Hn=new on(1,1,1),Un=new on,Gn=new on,Vn=new on,Wn=new Bn,jn=new an;class Yn{constructor(t=0,e=0,i=0,n=Yn.DefaultOrder){this._x=t,this._y=e,this._z=i,this._order=n}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,i,n){return this._x=t,this._y=e,this._z=i,this._order=n||this._order,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e,i){const n=t.elements,r=n[0],a=n[4],o=n[8],s=n[1],l=n[5],u=n[9],h=n[2],c=n[6],d=n[10];switch(e=e||this._order){case"XYZ":this._y=Math.asin(Hi(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-u,d),this._z=Math.atan2(-a,r)):(this._x=Math.atan2(c,l),this._z=0);break;case"YXZ":this._x=Math.asin(-Hi(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(o,d),this._z=Math.atan2(s,l)):(this._y=Math.atan2(-h,r),this._z=0);break;case"ZXY":this._x=Math.asin(Hi(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(-h,d),this._z=Math.atan2(-a,l)):(this._y=0,this._z=Math.atan2(s,r));break;case"ZYX":this._y=Math.asin(-Hi(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(c,d),this._z=Math.atan2(s,r)):(this._x=0,this._z=Math.atan2(-a,l));break;case"YZX":this._z=Math.asin(Hi(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(-u,l),this._y=Math.atan2(-h,r)):(this._x=0,this._y=Math.atan2(o,d));break;case"XZY":this._z=Math.asin(-Hi(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(c,l),this._y=Math.atan2(o,r)):(this._x=Math.atan2(-u,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,!1!==i&&this._onChangeCallback(),this}setFromQuaternion(t,e,i){return Wn.makeRotationFromQuaternion(t),this.setFromRotationMatrix(Wn,e,i)}setFromVector3(t,e){return this.set(t.x,t.y,t.z,e||this._order)}reorder(t){return jn.setFromEuler(this),this.setFromQuaternion(jn,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}toVector3(t){return t?t.set(this._x,this._y,this._z):new on(this._x,this._y,this._z)}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}Yn.prototype.isEuler=!0,Yn.DefaultOrder="XYZ",Yn.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class Xn{constructor(){this.mask=1}set(t){this.mask=1<<t|0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return 0!=(this.mask&t.mask)}}let Zn=0;const Jn=new on,Kn=new an,$n=new Bn,Qn=new on,tr=new on,er=new on,ir=new an,nr=new on(1,0,0),rr=new on(0,1,0),ar=new on(0,0,1),or={type:"added"},sr={type:"removed"};class lr extends Di{constructor(){super(),Object.defineProperty(this,"id",{value:Zn++}),this.uuid=Ni(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=lr.DefaultUp.clone();const t=new on,e=new Yn,i=new an,n=new on(1,1,1);e._onChange((function(){i.setFromEuler(e,!1)})),i._onChange((function(){e.setFromQuaternion(i,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:n},modelViewMatrix:{value:new Bn},normalMatrix:{value:new Zi}}),this.matrix=new Bn,this.matrixWorld=new Bn,this.matrixAutoUpdate=lr.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Xn,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return Kn.setFromAxisAngle(t,e),this.quaternion.multiply(Kn),this}rotateOnWorldAxis(t,e){return Kn.setFromAxisAngle(t,e),this.quaternion.premultiply(Kn),this}rotateX(t){return this.rotateOnAxis(nr,t)}rotateY(t){return this.rotateOnAxis(rr,t)}rotateZ(t){return this.rotateOnAxis(ar,t)}translateOnAxis(t,e){return Jn.copy(t).applyQuaternion(this.quaternion),this.position.add(Jn.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(nr,t)}translateY(t){return this.translateOnAxis(rr,t)}translateZ(t){return this.translateOnAxis(ar,t)}localToWorld(t){return t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return t.applyMatrix4($n.copy(this.matrixWorld).invert())}lookAt(t,e,i){t.isVector3?Qn.copy(t):Qn.set(t,e,i);const n=this.parent;this.updateWorldMatrix(!0,!1),tr.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?$n.lookAt(tr,Qn,this.up):$n.lookAt(Qn,tr,this.up),this.quaternion.setFromRotationMatrix($n),n&&($n.extractRotation(n.matrixWorld),Kn.setFromRotationMatrix($n),this.quaternion.premultiply(Kn.invert()))}add(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(null!==t.parent&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(or)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const e=this.children.indexOf(t);return-1!==e&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(sr)),this}clear(){for(let t=0;t<this.children.length;t++){const e=this.children[t];e.parent=null,e.dispatchEvent(sr)}return this.children.length=0,this}attach(t){return this.updateWorldMatrix(!0,!1),$n.copy(this.matrixWorld).invert(),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),$n.multiply(t.parent.matrixWorld)),t.applyMatrix4($n),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let i=0,n=this.children.length;i<n;i++){const n=this.children[i].getObjectByProperty(t,e);if(void 0!==n)return n}}getWorldPosition(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),t=new on),this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),t=new an),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(tr,t,er),t}getWorldScale(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),t=new on),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(tr,ir,t),t}getWorldDirection(t){void 0===t&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),t=new on),this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let i=0,n=e.length;i<n;i++)e[i].traverse(t)}traverseVisible(t){if(!1===this.visible)return;t(this);const e=this.children;for(let i=0,n=e.length;i<n;i++)e[i].traverseVisible(t)}traverseAncestors(t){const e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let i=0,n=e.length;i<n;i++)e[i].updateMatrixWorld(t)}updateWorldMatrix(t,e){const i=this.parent;if(!0===t&&null!==i&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===e){const t=this.children;for(let e=0,i=t.length;e<i;e++)t[e].updateWorldMatrix(!1,!0)}}toJSON(t){const e=void 0===t||"string"==typeof t,i={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},i.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const n={};function r(e,i){return void 0===e[i.uuid]&&(e[i.uuid]=i.toJSON(t)),i.uuid}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),!0===this.castShadow&&(n.castShadow=!0),!0===this.receiveShadow&&(n.receiveShadow=!0),!1===this.visible&&(n.visible=!1),!1===this.frustumCulled&&(n.frustumCulled=!1),0!==this.renderOrder&&(n.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),n.layers=this.layers.mask,n.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(n.matrixAutoUpdate=!1),this.isInstancedMesh&&(n.type="InstancedMesh",n.count=this.count,n.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(n.instanceColor=this.instanceColor.toJSON())),this.isMesh||this.isLine||this.isPoints){n.geometry=r(t.geometries,this.geometry);const e=this.geometry.parameters;if(void 0!==e&&void 0!==e.shapes){const i=e.shapes;if(Array.isArray(i))for(let e=0,n=i.length;e<n;e++){const n=i[e];r(t.shapes,n)}else r(t.shapes,i)}}if(this.isSkinnedMesh&&(n.bindMode=this.bindMode,n.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(r(t.skeletons,this.skeleton),n.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const e=[];for(let i=0,n=this.material.length;i<n;i++)e.push(r(t.materials,this.material[i]));n.material=e}else n.material=r(t.materials,this.material);if(this.children.length>0){n.children=[];for(let e=0;e<this.children.length;e++)n.children.push(this.children[e].toJSON(t).object)}if(this.animations.length>0){n.animations=[];for(let e=0;e<this.animations.length;e++){const i=this.animations[e];n.animations.push(r(t.animations,i))}}if(e){const e=a(t.geometries),n=a(t.materials),r=a(t.textures),o=a(t.images),s=a(t.shapes),l=a(t.skeletons),u=a(t.animations);e.length>0&&(i.geometries=e),n.length>0&&(i.materials=n),r.length>0&&(i.textures=r),o.length>0&&(i.images=o),s.length>0&&(i.shapes=s),l.length>0&&(i.skeletons=l),u.length>0&&(i.animations=u)}return i.object=n,i;function a(t){const e=[];for(const i in t){const n=t[i];delete n.metadata,e.push(n)}return e}}clone(t){return(new this.constructor).copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let e=0;e<t.children.length;e++){const i=t.children[e];this.add(i.clone())}return this}}lr.DefaultUp=new on(0,1,0),lr.DefaultMatrixAutoUpdate=!0,lr.prototype.isObject3D=!0;const ur=new on,hr=new on,cr=new Zi;class dr{constructor(t=new on(1,0,0),e=0){this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,i,n){return this.normal.set(t,e,i),this.constant=n,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,i){const n=ur.subVectors(i,e).cross(hr.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(n,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return void 0===e&&(console.warn("THREE.Plane: .projectPoint() target is now required"),e=new on),e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(t,e){void 0===e&&(console.warn("THREE.Plane: .intersectLine() target is now required"),e=new on);const i=t.delta(ur),n=this.normal.dot(i);if(0===n)return 0===this.distanceToPoint(t.start)?e.copy(t.start):null;const r=-(t.start.dot(this.normal)+this.constant)/n;return r<0||r>1?null:e.copy(i).multiplyScalar(r).add(t.start)}intersectsLine(t){const e=this.distanceToPoint(t.start),i=this.distanceToPoint(t.end);return e<0&&i>0||i<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return void 0===t&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),t=new on),t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const i=e||cr.getNormalMatrix(t),n=this.coplanarPoint(ur).applyMatrix4(t),r=this.normal.applyMatrix3(i).normalize();return this.constant=-n.dot(r),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return(new this.constructor).copy(this)}}dr.prototype.isPlane=!0;const pr=new on,mr=new on,fr=new on,gr=new on,_r=new on,vr=new on,br=new on,yr=new on,xr=new on,wr=new on;class Mr{constructor(t=new on,e=new on,i=new on){this.a=t,this.b=e,this.c=i}static getNormal(t,e,i,n){void 0===n&&(console.warn("THREE.Triangle: .getNormal() target is now required"),n=new on),n.subVectors(i,e),pr.subVectors(t,e),n.cross(pr);const r=n.lengthSq();return r>0?n.multiplyScalar(1/Math.sqrt(r)):n.set(0,0,0)}static getBarycoord(t,e,i,n,r){pr.subVectors(n,e),mr.subVectors(i,e),fr.subVectors(t,e);const a=pr.dot(pr),o=pr.dot(mr),s=pr.dot(fr),l=mr.dot(mr),u=mr.dot(fr),h=a*l-o*o;if(void 0===r&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),r=new on),0===h)return r.set(-2,-1,-1);const c=1/h,d=(l*s-o*u)*c,p=(a*u-o*s)*c;return r.set(1-d-p,p,d)}static containsPoint(t,e,i,n){return this.getBarycoord(t,e,i,n,gr),gr.x>=0&&gr.y>=0&&gr.x+gr.y<=1}static getUV(t,e,i,n,r,a,o,s){return this.getBarycoord(t,e,i,n,gr),s.set(0,0),s.addScaledVector(r,gr.x),s.addScaledVector(a,gr.y),s.addScaledVector(o,gr.z),s}static isFrontFacing(t,e,i,n){return pr.subVectors(i,e),mr.subVectors(t,e),pr.cross(mr).dot(n)<0}set(t,e,i){return this.a.copy(t),this.b.copy(e),this.c.copy(i),this}setFromPointsAndIndices(t,e,i,n){return this.a.copy(t[e]),this.b.copy(t[i]),this.c.copy(t[n]),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return pr.subVectors(this.c,this.b),mr.subVectors(this.a,this.b),.5*pr.cross(mr).length()}getMidpoint(t){return void 0===t&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),t=new on),t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return Mr.getNormal(this.a,this.b,this.c,t)}getPlane(t){return void 0===t&&(console.warn("THREE.Triangle: .getPlane() target is now required"),t=new dr),t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return Mr.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,i,n,r){return Mr.getUV(t,this.a,this.b,this.c,e,i,n,r)}containsPoint(t){return Mr.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return Mr.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){void 0===e&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),e=new on);const i=this.a,n=this.b,r=this.c;let a,o;_r.subVectors(n,i),vr.subVectors(r,i),yr.subVectors(t,i);const s=_r.dot(yr),l=vr.dot(yr);if(s<=0&&l<=0)return e.copy(i);xr.subVectors(t,n);const u=_r.dot(xr),h=vr.dot(xr);if(u>=0&&h<=u)return e.copy(n);const c=s*h-u*l;if(c<=0&&s>=0&&u<=0)return a=s/(s-u),e.copy(i).addScaledVector(_r,a);wr.subVectors(t,r);const d=_r.dot(wr),p=vr.dot(wr);if(p>=0&&d<=p)return e.copy(r);const m=d*l-s*p;if(m<=0&&l>=0&&p<=0)return o=l/(l-p),e.copy(i).addScaledVector(vr,o);const f=u*p-d*h;if(f<=0&&h-u>=0&&d-p>=0)return br.subVectors(r,n),o=(h-u)/(h-u+(d-p)),e.copy(n).addScaledVector(br,o);const g=1/(f+m+c);return a=m*g,o=c*g,e.copy(i).addScaledVector(_r,a).addScaledVector(vr,o)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}let Er=0;function Sr(){Object.defineProperty(this,"id",{value:Er++}),this.uuid=Ni(),this.name="",this.type="Material",this.fog=!0,this.blending=y,this.side=m,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=q,this.blendDst=D,this.blendEquation=S,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=V,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Mi,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=ui,this.stencilZFail=ui,this.stencilZPass=ui,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}Sr.prototype=Object.assign(Object.create(Di.prototype),{constructor:Sr,isMaterial:!0,onBuild:function(){},onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(t){if(void 0!==t)for(const e in t){const i=t[e];if(void 0===i){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}if("shading"===e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=i===_;continue}const n=this[e];void 0!==n?n&&n.isColor?n.set(i):n&&n.isVector3&&i&&i.isVector3?n.copy(i):this[e]=i:console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.")}},toJSON:function(t){const e=void 0===t||"string"==typeof t;e&&(t={textures:{},images:{}});const i={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function n(t){const e=[];for(const i in t){const n=t[i];delete n.metadata,e.push(n)}return e}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),void 0!==this.roughness&&(i.roughness=this.roughness),void 0!==this.metalness&&(i.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(i.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),void 0!==this.shininess&&(i.shininess=this.shininess),void 0!==this.clearcoat&&(i.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(t).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(t).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(t).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(t).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(t).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(t).uuid,void 0!==this.combine&&(i.combine=this.combine)),void 0!==this.envMapIntensity&&(i.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(i.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.size&&(i.size=this.size),null!==this.shadowSide&&(i.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==y&&(i.blending=this.blending),this.side!==m&&(i.side=this.side),this.vertexColors&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),!0===this.transparent&&(i.transparent=this.transparent),i.depthFunc=this.depthFunc,i.depthTest=this.depthTest,i.depthWrite=this.depthWrite,i.colorWrite=this.colorWrite,i.stencilWrite=this.stencilWrite,i.stencilWriteMask=this.stencilWriteMask,i.stencilFunc=this.stencilFunc,i.stencilRef=this.stencilRef,i.stencilFuncMask=this.stencilFuncMask,i.stencilFail=this.stencilFail,i.stencilZFail=this.stencilZFail,i.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(i.rotation=this.rotation),!0===this.polygonOffset&&(i.polygonOffset=!0),0!==this.polygonOffsetFactor&&(i.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(i.linewidth=this.linewidth),void 0!==this.dashSize&&(i.dashSize=this.dashSize),void 0!==this.gapSize&&(i.gapSize=this.gapSize),void 0!==this.scale&&(i.scale=this.scale),!0===this.dithering&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(i.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(i.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(i.wireframe=this.wireframe),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(i.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(i.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(i.morphTargets=!0),!0===this.morphNormals&&(i.morphNormals=!0),!0===this.skinning&&(i.skinning=!0),!0===this.flatShading&&(i.flatShading=this.flatShading),!1===this.visible&&(i.visible=!1),!1===this.toneMapped&&(i.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),e){const e=n(t.textures),r=n(t.images);e.length>0&&(i.textures=e),r.length>0&&(i.images=r)}return i},clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.name=t.name,this.fog=t.fog,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let i=null;if(null!==e){const t=e.length;i=new Array(t);for(let n=0;n!==t;++n)i[n]=e[n].clone()}return this.clippingPlanes=i,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(Sr.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}});const Tr={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},kr={h:0,s:0,l:0},Ar={h:0,s:0,l:0};function zr(t,e,i){return i<0&&(i+=1),i>1&&(i-=1),i<1/6?t+6*(e-t)*i:i<.5?e:i<2/3?t+6*(e-t)*(2/3-i):t}function Lr(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function Rr(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}class Cr{constructor(t,e,i){return void 0===e&&void 0===i?this.set(t):this.setRGB(t,e,i)}set(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this}setRGB(t,e,i){return this.r=t,this.g=e,this.b=i,this}setHSL(t,e,i){if(t=Ui(t,1),e=Hi(e,0,1),i=Hi(i,0,1),0===e)this.r=this.g=this.b=i;else{const n=i<=.5?i*(1+e):i+e-i*e,r=2*i-n;this.r=zr(r,n,t+1/3),this.g=zr(r,n,t),this.b=zr(r,n,t-1/3)}return this}setStyle(t){function e(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let i;if(i=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let t;const n=i[1],r=i[2];switch(n){case"rgb":case"rgba":if(t=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r))return this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,e(t[4]),this;if(t=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r))return this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,e(t[4]),this;break;case"hsl":case"hsla":if(t=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r)){const i=parseFloat(t[1])/360,n=parseInt(t[2],10)/100,r=parseInt(t[3],10)/100;return e(t[4]),this.setHSL(i,n,r)}}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(t)){const t=i[1],e=t.length;if(3===e)return this.r=parseInt(t.charAt(0)+t.charAt(0),16)/255,this.g=parseInt(t.charAt(1)+t.charAt(1),16)/255,this.b=parseInt(t.charAt(2)+t.charAt(2),16)/255,this;if(6===e)return this.r=parseInt(t.charAt(0)+t.charAt(1),16)/255,this.g=parseInt(t.charAt(2)+t.charAt(3),16)/255,this.b=parseInt(t.charAt(4)+t.charAt(5),16)/255,this}return t&&t.length>0?this.setColorName(t):this}setColorName(t){const e=Tr[t.toLowerCase()];return void 0!==e?this.setHex(e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copyGammaToLinear(t,e=2){return this.r=Math.pow(t.r,e),this.g=Math.pow(t.g,e),this.b=Math.pow(t.b,e),this}copyLinearToGamma(t,e=2){const i=e>0?1/e:1;return this.r=Math.pow(t.r,i),this.g=Math.pow(t.g,i),this.b=Math.pow(t.b,i),this}convertGammaToLinear(t){return this.copyGammaToLinear(this,t),this}convertLinearToGamma(t){return this.copyLinearToGamma(this,t),this}copySRGBToLinear(t){return this.r=Lr(t.r),this.g=Lr(t.g),this.b=Lr(t.b),this}copyLinearToSRGB(t){return this.r=Rr(t.r),this.g=Rr(t.g),this.b=Rr(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(t){void 0===t&&(console.warn("THREE.Color: .getHSL() target is now required"),t={h:0,s:0,l:0});const e=this.r,i=this.g,n=this.b,r=Math.max(e,i,n),a=Math.min(e,i,n);let o,s;const l=(a+r)/2;if(a===r)o=0,s=0;else{const t=r-a;switch(s=l<=.5?t/(r+a):t/(2-r-a),r){case e:o=(i-n)/t+(i<n?6:0);break;case i:o=(n-e)/t+2;break;case n:o=(e-i)/t+4}o/=6}return t.h=o,t.s=s,t.l=l,t}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(t,e,i){return this.getHSL(kr),kr.h+=t,kr.s+=e,kr.l+=i,this.setHSL(kr.h,kr.s,kr.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,i){return this.r=t.r+(e.r-t.r)*i,this.g=t.g+(e.g-t.g)*i,this.b=t.b+(e.b-t.b)*i,this}lerpHSL(t,e){this.getHSL(kr),t.getHSL(Ar);const i=Gi(kr.h,Ar.h,e),n=Gi(kr.s,Ar.s,e),r=Gi(kr.l,Ar.l,e);return this.setHSL(i,n,r),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),!0===t.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}Cr.NAMES=Tr,Cr.prototype.isColor=!0,Cr.prototype.r=1,Cr.prototype.g=1,Cr.prototype.b=1;class Pr extends Sr{constructor(t){super(),this.type="MeshBasicMaterial",this.color=new Cr(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Z,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this}}Pr.prototype.isMeshBasicMaterial=!0;const qr=new on,Dr=new Xi;class Ir{constructor(t,e,i){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=!0===i,this.usage=Ei,this.updateRange={offset:0,count:-1},this.version=0,this.onUploadCallback=function(){}}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this}copyAt(t,e,i){t*=this.itemSize,i*=e.itemSize;for(let n=0,r=this.itemSize;n<r;n++)this.array[t+n]=e.array[i+n];return this}copyArray(t){return this.array.set(t),this}copyColorsArray(t){const e=this.array;let i=0;for(let n=0,r=t.length;n<r;n++){let r=t[n];void 0===r&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",n),r=new Cr),e[i++]=r.r,e[i++]=r.g,e[i++]=r.b}return this}copyVector2sArray(t){const e=this.array;let i=0;for(let n=0,r=t.length;n<r;n++){let r=t[n];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",n),r=new Xi),e[i++]=r.x,e[i++]=r.y}return this}copyVector3sArray(t){const e=this.array;let i=0;for(let n=0,r=t.length;n<r;n++){let r=t[n];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",n),r=new on),e[i++]=r.x,e[i++]=r.y,e[i++]=r.z}return this}copyVector4sArray(t){const e=this.array;let i=0;for(let n=0,r=t.length;n<r;n++){let r=t[n];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",n),r=new en),e[i++]=r.x,e[i++]=r.y,e[i++]=r.z,e[i++]=r.w}return this}applyMatrix3(t){if(2===this.itemSize)for(let e=0,i=this.count;e<i;e++)Dr.fromBufferAttribute(this,e),Dr.applyMatrix3(t),this.setXY(e,Dr.x,Dr.y);else if(3===this.itemSize)for(let e=0,i=this.count;e<i;e++)qr.fromBufferAttribute(this,e),qr.applyMatrix3(t),this.setXYZ(e,qr.x,qr.y,qr.z);return this}applyMatrix4(t){for(let e=0,i=this.count;e<i;e++)qr.x=this.getX(e),qr.y=this.getY(e),qr.z=this.getZ(e),qr.applyMatrix4(t),this.setXYZ(e,qr.x,qr.y,qr.z);return this}applyNormalMatrix(t){for(let e=0,i=this.count;e<i;e++)qr.x=this.getX(e),qr.y=this.getY(e),qr.z=this.getZ(e),qr.applyNormalMatrix(t),this.setXYZ(e,qr.x,qr.y,qr.z);return this}transformDirection(t){for(let e=0,i=this.count;e<i;e++)qr.x=this.getX(e),qr.y=this.getY(e),qr.z=this.getZ(e),qr.transformDirection(t),this.setXYZ(e,qr.x,qr.y,qr.z);return this}set(t,e=0){return this.array.set(t,e),this}getX(t){return this.array[t*this.itemSize]}setX(t,e){return this.array[t*this.itemSize]=e,this}getY(t){return this.array[t*this.itemSize+1]}setY(t,e){return this.array[t*this.itemSize+1]=e,this}getZ(t){return this.array[t*this.itemSize+2]}setZ(t,e){return this.array[t*this.itemSize+2]=e,this}getW(t){return this.array[t*this.itemSize+3]}setW(t,e){return this.array[t*this.itemSize+3]=e,this}setXY(t,e,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=i,this}setXYZ(t,e,i,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=n,this}setXYZW(t,e,i,n,r){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=n,this.array[t+3]=r,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(t.name=this.name),this.usage!==Ei&&(t.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(t.updateRange=this.updateRange),t}}Ir.prototype.isBufferAttribute=!0;class Br extends Ir{constructor(t,e,i){super(new Int8Array(t),e,i)}}class Or extends Ir{constructor(t,e,i){super(new Uint8Array(t),e,i)}}class Fr extends Ir{constructor(t,e,i){super(new Uint8ClampedArray(t),e,i)}}class Nr extends Ir{constructor(t,e,i){super(new Int16Array(t),e,i)}}class Hr extends Ir{constructor(t,e,i){super(new Uint16Array(t),e,i)}}class Ur extends Ir{constructor(t,e,i){super(new Int32Array(t),e,i)}}class Gr extends Ir{constructor(t,e,i){super(new Uint32Array(t),e,i)}}class Vr extends Ir{constructor(t,e,i){super(new Uint16Array(t),e,i)}}Vr.prototype.isFloat16BufferAttribute=!0;class Wr extends Ir{constructor(t,e,i){super(new Float32Array(t),e,i)}}class jr extends Ir{constructor(t,e,i){super(new Float64Array(t),e,i)}}function Yr(t){if(0===t.length)return-1/0;let e=t[0];for(let i=1,n=t.length;i<n;++i)t[i]>e&&(e=t[i]);return e}const Xr={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Zr(t,e){return new Xr[t](e)}let Jr=0;const Kr=new Bn,$r=new lr,Qr=new on,ta=new un,ea=new un,ia=new on;class na extends Di{constructor(){super(),Object.defineProperty(this,"id",{value:Jr++}),this.uuid=Ni(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(Yr(t)>65535?Gr:Hr)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return void 0!==this.attributes[t]}addGroup(t,e,i=0){this.groups.push({start:t,count:e,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;void 0!==e&&(e.applyMatrix4(t),e.needsUpdate=!0);const i=this.attributes.normal;if(void 0!==i){const e=(new Zi).getNormalMatrix(t);i.applyNormalMatrix(e),i.needsUpdate=!0}const n=this.attributes.tangent;return void 0!==n&&(n.transformDirection(t),n.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}rotateX(t){return Kr.makeRotationX(t),this.applyMatrix4(Kr),this}rotateY(t){return Kr.makeRotationY(t),this.applyMatrix4(Kr),this}rotateZ(t){return Kr.makeRotationZ(t),this.applyMatrix4(Kr),this}translate(t,e,i){return Kr.makeTranslation(t,e,i),this.applyMatrix4(Kr),this}scale(t,e,i){return Kr.makeScale(t,e,i),this.applyMatrix4(Kr),this}lookAt(t){return $r.lookAt(t),$r.updateMatrix(),this.applyMatrix4($r.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Qr).negate(),this.translate(Qr.x,Qr.y,Qr.z),this}setFromPoints(t){const e=[];for(let i=0,n=t.length;i<n;i++){const n=t[i];e.push(n.x,n.y,n.z||0)}return this.setAttribute("position",new Wr(e,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new un);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new on(-1/0,-1/0,-1/0),new on(1/0,1/0,1/0));if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),e)for(let t=0,i=e.length;t<i;t++){const i=e[t];ta.setFromBufferAttribute(i),this.morphTargetsRelative?(ia.addVectors(this.boundingBox.min,ta.min),this.boundingBox.expandByPoint(ia),ia.addVectors(this.boundingBox.max,ta.max),this.boundingBox.expandByPoint(ia)):(this.boundingBox.expandByPoint(ta.min),this.boundingBox.expandByPoint(ta.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new An);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new on,1/0);if(t){const i=this.boundingSphere.center;if(ta.setFromBufferAttribute(t),e)for(let t=0,i=e.length;t<i;t++){const i=e[t];ea.setFromBufferAttribute(i),this.morphTargetsRelative?(ia.addVectors(ta.min,ea.min),ta.expandByPoint(ia),ia.addVectors(ta.max,ea.max),ta.expandByPoint(ia)):(ta.expandByPoint(ea.min),ta.expandByPoint(ea.max))}ta.getCenter(i);let n=0;for(let e=0,r=t.count;e<r;e++)ia.fromBufferAttribute(t,e),n=Math.max(n,i.distanceToSquared(ia));if(e)for(let r=0,a=e.length;r<a;r++){const a=e[r],o=this.morphTargetsRelative;for(let e=0,r=a.count;e<r;e++)ia.fromBufferAttribute(a,e),o&&(Qr.fromBufferAttribute(t,e),ia.add(Qr)),n=Math.max(n,i.distanceToSquared(ia))}this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeFaceNormals(){}computeTangents(){const t=this.index,e=this.attributes;if(null===t||void 0===e.position||void 0===e.normal||void 0===e.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const i=t.array,n=e.position.array,r=e.normal.array,a=e.uv.array,o=n.length/3;void 0===e.tangent&&this.setAttribute("tangent",new Ir(new Float32Array(4*o),4));const s=e.tangent.array,l=[],u=[];for(let t=0;t<o;t++)l[t]=new on,u[t]=new on;const h=new on,c=new on,d=new on,p=new Xi,m=new Xi,f=new Xi,g=new on,_=new on;function v(t,e,i){h.fromArray(n,3*t),c.fromArray(n,3*e),d.fromArray(n,3*i),p.fromArray(a,2*t),m.fromArray(a,2*e),f.fromArray(a,2*i),c.sub(h),d.sub(h),m.sub(p),f.sub(p);const r=1/(m.x*f.y-f.x*m.y);isFinite(r)&&(g.copy(c).multiplyScalar(f.y).addScaledVector(d,-m.y).multiplyScalar(r),_.copy(d).multiplyScalar(m.x).addScaledVector(c,-f.x).multiplyScalar(r),l[t].add(g),l[e].add(g),l[i].add(g),u[t].add(_),u[e].add(_),u[i].add(_))}let b=this.groups;0===b.length&&(b=[{start:0,count:i.length}]);for(let t=0,e=b.length;t<e;++t){const e=b[t],n=e.start;for(let t=n,r=n+e.count;t<r;t+=3)v(i[t+0],i[t+1],i[t+2])}const y=new on,x=new on,w=new on,M=new on;function E(t){w.fromArray(r,3*t),M.copy(w);const e=l[t];y.copy(e),y.sub(w.multiplyScalar(w.dot(e))).normalize(),x.crossVectors(M,e);const i=x.dot(u[t])<0?-1:1;s[4*t]=y.x,s[4*t+1]=y.y,s[4*t+2]=y.z,s[4*t+3]=i}for(let t=0,e=b.length;t<e;++t){const e=b[t],n=e.start;for(let t=n,r=n+e.count;t<r;t+=3)E(i[t+0]),E(i[t+1]),E(i[t+2])}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(void 0!==e){let i=this.getAttribute("normal");if(void 0===i)i=new Ir(new Float32Array(3*e.count),3),this.setAttribute("normal",i);else for(let t=0,e=i.count;t<e;t++)i.setXYZ(t,0,0,0);const n=new on,r=new on,a=new on,o=new on,s=new on,l=new on,u=new on,h=new on;if(t)for(let c=0,d=t.count;c<d;c+=3){const d=t.getX(c+0),p=t.getX(c+1),m=t.getX(c+2);n.fromBufferAttribute(e,d),r.fromBufferAttribute(e,p),a.fromBufferAttribute(e,m),u.subVectors(a,r),h.subVectors(n,r),u.cross(h),o.fromBufferAttribute(i,d),s.fromBufferAttribute(i,p),l.fromBufferAttribute(i,m),o.add(u),s.add(u),l.add(u),i.setXYZ(d,o.x,o.y,o.z),i.setXYZ(p,s.x,s.y,s.z),i.setXYZ(m,l.x,l.y,l.z)}else for(let t=0,o=e.count;t<o;t+=3)n.fromBufferAttribute(e,t+0),r.fromBufferAttribute(e,t+1),a.fromBufferAttribute(e,t+2),u.subVectors(a,r),h.subVectors(n,r),u.cross(h),i.setXYZ(t+0,u.x,u.y,u.z),i.setXYZ(t+1,u.x,u.y,u.z),i.setXYZ(t+2,u.x,u.y,u.z);this.normalizeNormals(),i.needsUpdate=!0}}merge(t,e){if(!t||!t.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t);void 0===e&&(e=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const i=this.attributes;for(const n in i){if(void 0===t.attributes[n])continue;const r=i[n].array,a=t.attributes[n],o=a.array,s=a.itemSize*e,l=Math.min(o.length,r.length-s);for(let t=0,e=s;t<l;t++,e++)r[e]=o[t]}return this}normalizeNormals(){const t=this.attributes.normal;for(let e=0,i=t.count;e<i;e++)ia.fromBufferAttribute(t,e),ia.normalize(),t.setXYZ(e,ia.x,ia.y,ia.z)}toNonIndexed(){function t(t,e){const i=t.array,n=t.itemSize,r=t.normalized,a=new i.constructor(e.length*n);let o=0,s=0;for(let t=0,r=e.length;t<r;t++){o=e[t]*n;for(let t=0;t<n;t++)a[s++]=i[o++]}return new Ir(a,n,r)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new na,i=this.index.array,n=this.attributes;for(const r in n){const a=t(n[r],i);e.setAttribute(r,a)}const r=this.morphAttributes;for(const n in r){const a=[],o=r[n];for(let e=0,n=o.length;e<n;e++){const n=t(o[e],i);a.push(n)}e.morphAttributes[n]=a}e.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let t=0,i=a.length;t<i;t++){const i=a[t];e.addGroup(i.start,i.count,i.materialIndex)}return e}toJSON(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){const e=this.parameters;for(const i in e)void 0!==e[i]&&(t[i]=e[i]);return t}t.data={attributes:{}};const e=this.index;null!==e&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const i=this.attributes;for(const e in i){const n=i[e];t.data.attributes[e]=n.toJSON(t.data)}const n={};let r=!1;for(const e in this.morphAttributes){const i=this.morphAttributes[e],a=[];for(let e=0,n=i.length;e<n;e++){const n=i[e];a.push(n.toJSON(t.data))}a.length>0&&(n[e]=a,r=!0)}r&&(t.data.morphAttributes=n,t.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(t.data.groups=JSON.parse(JSON.stringify(a)));const o=this.boundingSphere;return null!==o&&(t.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),t}clone(){return(new na).copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const i=t.index;null!==i&&this.setIndex(i.clone(e));const n=t.attributes;for(const t in n){const i=n[t];this.setAttribute(t,i.clone(e))}const r=t.morphAttributes;for(const t in r){const i=[],n=r[t];for(let t=0,r=n.length;t<r;t++)i.push(n[t].clone(e));this.morphAttributes[t]=i}this.morphTargetsRelative=t.morphTargetsRelative;const a=t.groups;for(let t=0,e=a.length;t<e;t++){const e=a[t];this.addGroup(e.start,e.count,e.materialIndex)}const o=t.boundingBox;null!==o&&(this.boundingBox=o.clone());const s=t.boundingSphere;return null!==s&&(this.boundingSphere=s.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}na.prototype.isBufferGeometry=!0;const ra=new Bn,aa=new In,oa=new An,sa=new on,la=new on,ua=new on,ha=new on,ca=new on,da=new on,pa=new on,ma=new on,fa=new on,ga=new Xi,_a=new Xi,va=new Xi,ba=new on,ya=new on;class xa extends lr{constructor(t=new na,e=new Pr){super(),this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t){return super.copy(t),void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this}updateMorphTargets(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,i=Object.keys(e);if(i.length>0){const t=e[i[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,i=t.length;e<i;e++){const i=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(t,e){const i=this.geometry,n=this.material,r=this.matrixWorld;if(void 0===n)return;if(null===i.boundingSphere&&i.computeBoundingSphere(),oa.copy(i.boundingSphere),oa.applyMatrix4(r),!1===t.ray.intersectsSphere(oa))return;if(ra.copy(r).invert(),aa.copy(t.ray).applyMatrix4(ra),null!==i.boundingBox&&!1===aa.intersectsBox(i.boundingBox))return;let a;if(i.isBufferGeometry){const r=i.index,o=i.attributes.position,s=i.morphAttributes.position,l=i.morphTargetsRelative,u=i.attributes.uv,h=i.attributes.uv2,c=i.groups,d=i.drawRange;if(null!==r)if(Array.isArray(n))for(let i=0,p=c.length;i<p;i++){const p=c[i],m=n[p.materialIndex];for(let i=Math.max(p.start,d.start),n=Math.min(p.start+p.count,d.start+d.count);i<n;i+=3){const n=r.getX(i),c=r.getX(i+1),d=r.getX(i+2);a=wa(this,m,t,aa,o,s,l,u,h,n,c,d),a&&(a.faceIndex=Math.floor(i/3),a.face.materialIndex=p.materialIndex,e.push(a))}}else for(let i=Math.max(0,d.start),c=Math.min(r.count,d.start+d.count);i<c;i+=3){const c=r.getX(i),d=r.getX(i+1),p=r.getX(i+2);a=wa(this,n,t,aa,o,s,l,u,h,c,d,p),a&&(a.faceIndex=Math.floor(i/3),e.push(a))}else if(void 0!==o)if(Array.isArray(n))for(let i=0,r=c.length;i<r;i++){const r=c[i],p=n[r.materialIndex];for(let i=Math.max(r.start,d.start),n=Math.min(r.start+r.count,d.start+d.count);i<n;i+=3)a=wa(this,p,t,aa,o,s,l,u,h,i,i+1,i+2),a&&(a.faceIndex=Math.floor(i/3),a.face.materialIndex=r.materialIndex,e.push(a))}else for(let i=Math.max(0,d.start),r=Math.min(o.count,d.start+d.count);i<r;i+=3)a=wa(this,n,t,aa,o,s,l,u,h,i,i+1,i+2),a&&(a.faceIndex=Math.floor(i/3),e.push(a))}else i.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}function wa(t,e,i,n,r,a,o,s,l,u,h,c){sa.fromBufferAttribute(r,u),la.fromBufferAttribute(r,h),ua.fromBufferAttribute(r,c);const d=t.morphTargetInfluences;if(e.morphTargets&&a&&d){pa.set(0,0,0),ma.set(0,0,0),fa.set(0,0,0);for(let t=0,e=a.length;t<e;t++){const e=d[t],i=a[t];0!==e&&(ha.fromBufferAttribute(i,u),ca.fromBufferAttribute(i,h),da.fromBufferAttribute(i,c),o?(pa.addScaledVector(ha,e),ma.addScaledVector(ca,e),fa.addScaledVector(da,e)):(pa.addScaledVector(ha.sub(sa),e),ma.addScaledVector(ca.sub(la),e),fa.addScaledVector(da.sub(ua),e)))}sa.add(pa),la.add(ma),ua.add(fa)}t.isSkinnedMesh&&e.skinning&&(t.boneTransform(u,sa),t.boneTransform(h,la),t.boneTransform(c,ua));const p=function(t,e,i,n,r,a,o,s){let l;if(l=e.side===f?n.intersectTriangle(o,a,r,!0,s):n.intersectTriangle(r,a,o,e.side!==g,s),null===l)return null;ya.copy(s),ya.applyMatrix4(t.matrixWorld);const u=i.ray.origin.distanceTo(ya);return u<i.near||u>i.far?null:{distance:u,point:ya.clone(),object:t}}(t,e,i,n,sa,la,ua,ba);if(p){s&&(ga.fromBufferAttribute(s,u),_a.fromBufferAttribute(s,h),va.fromBufferAttribute(s,c),p.uv=Mr.getUV(ba,sa,la,ua,ga,_a,va,new Xi)),l&&(ga.fromBufferAttribute(l,u),_a.fromBufferAttribute(l,h),va.fromBufferAttribute(l,c),p.uv2=Mr.getUV(ba,sa,la,ua,ga,_a,va,new Xi));const t={a:u,b:h,c,normal:new on,materialIndex:0};Mr.getNormal(sa,la,ua,t.normal),p.face=t}return p}xa.prototype.isMesh=!0;class Ma extends na{constructor(t=1,e=1,i=1,n=1,r=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:i,widthSegments:n,heightSegments:r,depthSegments:a};const o=this;n=Math.floor(n),r=Math.floor(r),a=Math.floor(a);const s=[],l=[],u=[],h=[];let c=0,d=0;function p(t,e,i,n,r,a,p,m,f,g,_){const v=a/f,b=p/g,y=a/2,x=p/2,w=m/2,M=f+1,E=g+1;let S=0,T=0;const k=new on;for(let a=0;a<E;a++){const o=a*b-x;for(let s=0;s<M;s++){const c=s*v-y;k[t]=c*n,k[e]=o*r,k[i]=w,l.push(k.x,k.y,k.z),k[t]=0,k[e]=0,k[i]=m>0?1:-1,u.push(k.x,k.y,k.z),h.push(s/f),h.push(1-a/g),S+=1}}for(let t=0;t<g;t++)for(let e=0;e<f;e++){const i=c+e+M*t,n=c+e+M*(t+1),r=c+(e+1)+M*(t+1),a=c+(e+1)+M*t;s.push(i,n,a),s.push(n,r,a),T+=6}o.addGroup(d,T,_),d+=T,c+=S}p("z","y","x",-1,-1,i,e,t,a,r,0),p("z","y","x",1,-1,i,e,-t,a,r,1),p("x","z","y",1,1,t,i,e,n,a,2),p("x","z","y",1,-1,t,i,-e,n,a,3),p("x","y","z",1,-1,t,e,i,n,r,4),p("x","y","z",-1,-1,t,e,-i,n,r,5),this.setIndex(s),this.setAttribute("position",new Wr(l,3)),this.setAttribute("normal",new Wr(u,3)),this.setAttribute("uv",new Wr(h,2))}}function Ea(t){const e={};for(const i in t){e[i]={};for(const n in t[i]){const r=t[i][n];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?e[i][n]=r.clone():Array.isArray(r)?e[i][n]=r.slice():e[i][n]=r}}return e}function Sa(t){const e={};for(let i=0;i<t.length;i++){const n=Ea(t[i]);for(const t in n)e[t]=n[t]}return e}const Ta={clone:Ea,merge:Sa};class ka extends Sr{constructor(t){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==t&&(void 0!==t.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=Ea(t.uniforms),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.lights=t.lights,this.clipping=t.clipping,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const i in this.uniforms){const n=this.uniforms[i].value;n&&n.isTexture?e.uniforms[i]={type:"t",value:n.toJSON(t).uuid}:n&&n.isColor?e.uniforms[i]={type:"c",value:n.getHex()}:n&&n.isVector2?e.uniforms[i]={type:"v2",value:n.toArray()}:n&&n.isVector3?e.uniforms[i]={type:"v3",value:n.toArray()}:n&&n.isVector4?e.uniforms[i]={type:"v4",value:n.toArray()}:n&&n.isMatrix3?e.uniforms[i]={type:"m3",value:n.toArray()}:n&&n.isMatrix4?e.uniforms[i]={type:"m4",value:n.toArray()}:e.uniforms[i]={value:n}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;const i={};for(const t in this.extensions)!0===this.extensions[t]&&(i[t]=!0);return Object.keys(i).length>0&&(e.extensions=i),e}}ka.prototype.isShaderMaterial=!0;class Aa extends lr{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new Bn,this.projectionMatrix=new Bn,this.projectionMatrixInverse=new Bn}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this}getWorldDirection(t){void 0===t&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),t=new on),this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}Aa.prototype.isCamera=!0;class za extends Aa{constructor(t=50,e=1,i=.1,n=2e3){super(),this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=i,this.far=n,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=2*Fi*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(.5*Oi*this.fov);return.5*this.getFilmHeight()/t}getEffectiveFOV(){return 2*Fi*Math.atan(Math.tan(.5*Oi*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(t,e,i,n,r,a){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=i,this.view.offsetY=n,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(.5*Oi*this.fov)/this.zoom,i=2*e,n=this.aspect*i,r=-.5*n;const a=this.view;if(null!==this.view&&this.view.enabled){const t=a.fullWidth,o=a.fullHeight;r+=a.offsetX*n/t,e-=a.offsetY*i/o,n*=a.width/t,i*=a.height/o}const o=this.filmOffset;0!==o&&(r+=t*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+n,e,e-i,t,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}za.prototype.isPerspectiveCamera=!0;const La=90;class Ra extends lr{constructor(t,e,i){if(super(),this.type="CubeCamera",!0!==i.isWebGLCubeRenderTarget)return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");this.renderTarget=i;const n=new za(La,1,t,e);n.layers=this.layers,n.up.set(0,-1,0),n.lookAt(new on(1,0,0)),this.add(n);const r=new za(La,1,t,e);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new on(-1,0,0)),this.add(r);const a=new za(La,1,t,e);a.layers=this.layers,a.up.set(0,0,1),a.lookAt(new on(0,1,0)),this.add(a);const o=new za(La,1,t,e);o.layers=this.layers,o.up.set(0,0,-1),o.lookAt(new on(0,-1,0)),this.add(o);const s=new za(La,1,t,e);s.layers=this.layers,s.up.set(0,-1,0),s.lookAt(new on(0,0,1)),this.add(s);const l=new za(La,1,t,e);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new on(0,0,-1)),this.add(l)}update(t,e){null===this.parent&&this.updateMatrixWorld();const i=this.renderTarget,[n,r,a,o,s,l]=this.children,u=t.xr.enabled,h=t.getRenderTarget();t.xr.enabled=!1;const c=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,t.setRenderTarget(i,0),t.render(e,n),t.setRenderTarget(i,1),t.render(e,r),t.setRenderTarget(i,2),t.render(e,a),t.setRenderTarget(i,3),t.render(e,o),t.setRenderTarget(i,4),t.render(e,s),i.texture.generateMipmaps=c,t.setRenderTarget(i,5),t.render(e,l),t.setRenderTarget(h),t.xr.enabled=u}}class Ca extends Qi{constructor(t,e,i,n,r,a,o,s,l,u){super(t=void 0!==t?t:[],e=void 0!==e?e:at,i,n,r,a,o=void 0!==o?o:Bt,s,l,u),this._needsFlipEnvMap=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}Ca.prototype.isCubeTexture=!0;class Pa extends nn{constructor(t,e,i){Number.isInteger(e)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),e=i),super(t,t,e),e=e||{},this.texture=new Ca(void 0,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.encoding),this.texture.generateMipmaps=void 0!==e.generateMipmaps&&e.generateMipmaps,this.texture.minFilter=void 0!==e.minFilter?e.minFilter:bt,this.texture._needsFlipEnvMap=!1}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.format=Ot,this.texture.encoding=e.encoding,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const i={tEquirect:{value:null}},n="\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",r="\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t",a=new Ma(5,5,5),o=new ka({name:"CubemapFromEquirect",uniforms:Ea(i),vertexShader:n,fragmentShader:r,side:f,blending:b});o.uniforms.tEquirect.value=e;const s=new xa(a,o),l=e.minFilter;return e.minFilter===wt&&(e.minFilter=bt),new Ra(1,10,this).update(t,s),e.minFilter=l,s.geometry.dispose(),s.material.dispose(),this}clear(t,e,i,n){const r=t.getRenderTarget();for(let r=0;r<6;r++)t.setRenderTarget(this,r),t.clear(e,i,n);t.setRenderTarget(r)}}Pa.prototype.isWebGLCubeRenderTarget=!0;class qa extends Qi{constructor(t,e,i,n,r,a,o,s,l,u,h,c){super(null,a,o,s,l,u,n,r,h,c),this.image={data:t||null,width:e||1,height:i||1},this.magFilter=void 0!==l?l:mt,this.minFilter=void 0!==u?u:mt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}qa.prototype.isDataTexture=!0;const Da=new An,Ia=new on;class Ba{constructor(t=new dr,e=new dr,i=new dr,n=new dr,r=new dr,a=new dr){this.planes=[t,e,i,n,r,a]}set(t,e,i,n,r,a){const o=this.planes;return o[0].copy(t),o[1].copy(e),o[2].copy(i),o[3].copy(n),o[4].copy(r),o[5].copy(a),this}copy(t){const e=this.planes;for(let i=0;i<6;i++)e[i].copy(t.planes[i]);return this}setFromProjectionMatrix(t){const e=this.planes,i=t.elements,n=i[0],r=i[1],a=i[2],o=i[3],s=i[4],l=i[5],u=i[6],h=i[7],c=i[8],d=i[9],p=i[10],m=i[11],f=i[12],g=i[13],_=i[14],v=i[15];return e[0].setComponents(o-n,h-s,m-c,v-f).normalize(),e[1].setComponents(o+n,h+s,m+c,v+f).normalize(),e[2].setComponents(o+r,h+l,m+d,v+g).normalize(),e[3].setComponents(o-r,h-l,m-d,v-g).normalize(),e[4].setComponents(o-a,h-u,m-p,v-_).normalize(),e[5].setComponents(o+a,h+u,m+p,v+_).normalize(),this}intersectsObject(t){const e=t.geometry;return null===e.boundingSphere&&e.computeBoundingSphere(),Da.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(Da)}intersectsSprite(t){return Da.center.set(0,0,0),Da.radius=.7071067811865476,Da.applyMatrix4(t.matrixWorld),this.intersectsSphere(Da)}intersectsSphere(t){const e=this.planes,i=t.center,n=-t.radius;for(let t=0;t<6;t++)if(e[t].distanceToPoint(i)<n)return!1;return!0}intersectsBox(t){const e=this.planes;for(let i=0;i<6;i++){const n=e[i];if(Ia.x=n.normal.x>0?t.max.x:t.min.x,Ia.y=n.normal.y>0?t.max.y:t.min.y,Ia.z=n.normal.z>0?t.max.z:t.min.z,n.distanceToPoint(Ia)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let i=0;i<6;i++)if(e[i].distanceToPoint(t)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function Oa(){let t=null,e=!1,i=null,n=null;function r(e,a){i(e,a),n=t.requestAnimationFrame(r)}return{start:function(){!0!==e&&null!==i&&(n=t.requestAnimationFrame(r),e=!0)},stop:function(){t.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(t){i=t},setContext:function(e){t=e}}}function Fa(t,e){const i=e.isWebGL2,n=new WeakMap;return{get:function(t){return t.isInterleavedBufferAttribute&&(t=t.data),n.get(t)},remove:function(e){e.isInterleavedBufferAttribute&&(e=e.data);const i=n.get(e);i&&(t.deleteBuffer(i.buffer),n.delete(e))},update:function(e,r){if(e.isGLBufferAttribute){const t=n.get(e);return void((!t||t.version<e.version)&&n.set(e,{buffer:e.buffer,type:e.type,bytesPerElement:e.elementSize,version:e.version}))}e.isInterleavedBufferAttribute&&(e=e.data);const a=n.get(e);void 0===a?n.set(e,function(e,n){const r=e.array,a=e.usage,o=t.createBuffer();t.bindBuffer(n,o),t.bufferData(n,r,a),e.onUploadCallback();let s=5126;return r instanceof Float32Array?s=5126:r instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):r instanceof Uint16Array?e.isFloat16BufferAttribute?i?s=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):s=5123:r instanceof Int16Array?s=5122:r instanceof Uint32Array?s=5125:r instanceof Int32Array?s=5124:r instanceof Int8Array?s=5120:r instanceof Uint8Array&&(s=5121),{buffer:o,type:s,bytesPerElement:r.BYTES_PER_ELEMENT,version:e.version}}(e,r)):a.version<e.version&&(function(e,n,r){const a=n.array,o=n.updateRange;t.bindBuffer(r,e),-1===o.count?t.bufferSubData(r,0,a):(i?t.bufferSubData(r,o.offset*a.BYTES_PER_ELEMENT,a,o.offset,o.count):t.bufferSubData(r,o.offset*a.BYTES_PER_ELEMENT,a.subarray(o.offset,o.offset+o.count)),o.count=-1)}(a.buffer,e,r),a.version=e.version)}}}class Na extends na{constructor(t=1,e=1,i=1,n=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:i,heightSegments:n};const r=t/2,a=e/2,o=Math.floor(i),s=Math.floor(n),l=o+1,u=s+1,h=t/o,c=e/s,d=[],p=[],m=[],f=[];for(let t=0;t<u;t++){const e=t*c-a;for(let i=0;i<l;i++){const n=i*h-r;p.push(n,-e,0),m.push(0,0,1),f.push(i/o),f.push(1-t/s)}}for(let t=0;t<s;t++)for(let e=0;e<o;e++){const i=e+l*t,n=e+l*(t+1),r=e+1+l*(t+1),a=e+1+l*t;d.push(i,n,a),d.push(n,r,a)}this.setIndex(d),this.setAttribute("position",new Wr(p,3)),this.setAttribute("normal",new Wr(m,3)),this.setAttribute("uv",new Wr(f,2))}}const Ha={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\t\tvec2 f = fract( uv );\n\t\tuv += 0.5 - f;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t}\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\tuv *= texelSize;\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x += texelSize;\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.y += texelSize;\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x -= texelSize;\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tvec3 tm = mix( tl, tr, f.x );\n\t\tvec3 bm = mix( bl, br, f.x );\n\t\treturn mix( tm, bm, f.y );\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tfogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat specularRoughness;\n\tvec3 specularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\t\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\t\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmissionmap_fragment:"#ifdef USE_TRANSMISSIONMAP\n\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\n#endif",transmissionmap_pars_fragment:"#ifdef USE_TRANSMISSIONMAP\n\tuniform sampler2D transmissionMap;\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSMISSION\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSMISSION\n\tuniform float transmission;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <transmissionmap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#ifdef TRANSMISSION\n\t\tfloat totalTransmission = transmission;\n\t#endif\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <transmissionmap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSMISSION\n\t\tdiffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",normal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",normal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}"},Ua={common:{diffuse:{value:new Cr(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new Zi},uv2Transform:{value:new Zi},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Xi(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Cr(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Cr(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new Zi}},sprite:{diffuse:{value:new Cr(15658734)},opacity:{value:1},center:{value:new Xi(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new Zi}}},Ga={basic:{uniforms:Sa([Ua.common,Ua.specularmap,Ua.envmap,Ua.aomap,Ua.lightmap,Ua.fog]),vertexShader:Ha.meshbasic_vert,fragmentShader:Ha.meshbasic_frag},lambert:{uniforms:Sa([Ua.common,Ua.specularmap,Ua.envmap,Ua.aomap,Ua.lightmap,Ua.emissivemap,Ua.fog,Ua.lights,{emissive:{value:new Cr(0)}}]),vertexShader:Ha.meshlambert_vert,fragmentShader:Ha.meshlambert_frag},phong:{uniforms:Sa([Ua.common,Ua.specularmap,Ua.envmap,Ua.aomap,Ua.lightmap,Ua.emissivemap,Ua.bumpmap,Ua.normalmap,Ua.displacementmap,Ua.fog,Ua.lights,{emissive:{value:new Cr(0)},specular:{value:new Cr(1118481)},shininess:{value:30}}]),vertexShader:Ha.meshphong_vert,fragmentShader:Ha.meshphong_frag},standard:{uniforms:Sa([Ua.common,Ua.envmap,Ua.aomap,Ua.lightmap,Ua.emissivemap,Ua.bumpmap,Ua.normalmap,Ua.displacementmap,Ua.roughnessmap,Ua.metalnessmap,Ua.fog,Ua.lights,{emissive:{value:new Cr(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Ha.meshphysical_vert,fragmentShader:Ha.meshphysical_frag},toon:{uniforms:Sa([Ua.common,Ua.aomap,Ua.lightmap,Ua.emissivemap,Ua.bumpmap,Ua.normalmap,Ua.displacementmap,Ua.gradientmap,Ua.fog,Ua.lights,{emissive:{value:new Cr(0)}}]),vertexShader:Ha.meshtoon_vert,fragmentShader:Ha.meshtoon_frag},matcap:{uniforms:Sa([Ua.common,Ua.bumpmap,Ua.normalmap,Ua.displacementmap,Ua.fog,{matcap:{value:null}}]),vertexShader:Ha.meshmatcap_vert,fragmentShader:Ha.meshmatcap_frag},points:{uniforms:Sa([Ua.points,Ua.fog]),vertexShader:Ha.points_vert,fragmentShader:Ha.points_frag},dashed:{uniforms:Sa([Ua.common,Ua.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Ha.linedashed_vert,fragmentShader:Ha.linedashed_frag},depth:{uniforms:Sa([Ua.common,Ua.displacementmap]),vertexShader:Ha.depth_vert,fragmentShader:Ha.depth_frag},normal:{uniforms:Sa([Ua.common,Ua.bumpmap,Ua.normalmap,Ua.displacementmap,{opacity:{value:1}}]),vertexShader:Ha.normal_vert,fragmentShader:Ha.normal_frag},sprite:{uniforms:Sa([Ua.sprite,Ua.fog]),vertexShader:Ha.sprite_vert,fragmentShader:Ha.sprite_frag},background:{uniforms:{uvTransform:{value:new Zi},t2D:{value:null}},vertexShader:Ha.background_vert,fragmentShader:Ha.background_frag},cube:{uniforms:Sa([Ua.envmap,{opacity:{value:1}}]),vertexShader:Ha.cube_vert,fragmentShader:Ha.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Ha.equirect_vert,fragmentShader:Ha.equirect_frag},distanceRGBA:{uniforms:Sa([Ua.common,Ua.displacementmap,{referencePosition:{value:new on},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Ha.distanceRGBA_vert,fragmentShader:Ha.distanceRGBA_frag},shadow:{uniforms:Sa([Ua.lights,Ua.fog,{color:{value:new Cr(0)},opacity:{value:1}}]),vertexShader:Ha.shadow_vert,fragmentShader:Ha.shadow_frag}};function Va(t,e,i,n,r){const a=new Cr(0);let o,s,l=0,u=null,h=0,c=null;function d(t,e){i.buffers.color.setClear(t.r,t.g,t.b,e,r)}return{getClearColor:function(){return a},setClearColor:function(t,e=1){a.set(t),l=e,d(a,l)},getClearAlpha:function(){return l},setClearAlpha:function(t){l=t,d(a,l)},render:function(i,r,p,g){let _=!0===r.isScene?r.background:null;_&&_.isTexture&&(_=e.get(_));const v=t.xr,b=v.getSession&&v.getSession();b&&"additive"===b.environmentBlendMode&&(_=null),null===_?d(a,l):_&&_.isColor&&(d(_,1),g=!0),(t.autoClear||g)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),_&&(_.isCubeTexture||_.mapping===ut)?(void 0===s&&(s=new xa(new Ma(1,1,1),new ka({name:"BackgroundCubeMaterial",uniforms:Ea(Ga.cube.uniforms),vertexShader:Ga.cube.vertexShader,fragmentShader:Ga.cube.fragmentShader,side:f,depthTest:!1,depthWrite:!1,fog:!1})),s.geometry.deleteAttribute("normal"),s.geometry.deleteAttribute("uv"),s.onBeforeRender=function(t,e,i){this.matrixWorld.copyPosition(i.matrixWorld)},Object.defineProperty(s.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(s)),s.material.uniforms.envMap.value=_,s.material.uniforms.flipEnvMap.value=_.isCubeTexture&&_._needsFlipEnvMap?-1:1,u===_&&h===_.version&&c===t.toneMapping||(s.material.needsUpdate=!0,u=_,h=_.version,c=t.toneMapping),i.unshift(s,s.geometry,s.material,0,0,null)):_&&_.isTexture&&(void 0===o&&(o=new xa(new Na(2,2),new ka({name:"BackgroundMaterial",uniforms:Ea(Ga.background.uniforms),vertexShader:Ga.background.vertexShader,fragmentShader:Ga.background.fragmentShader,side:m,depthTest:!1,depthWrite:!1,fog:!1})),o.geometry.deleteAttribute("normal"),Object.defineProperty(o.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(o)),o.material.uniforms.t2D.value=_,!0===_.matrixAutoUpdate&&_.updateMatrix(),o.material.uniforms.uvTransform.value.copy(_.matrix),u===_&&h===_.version&&c===t.toneMapping||(o.material.needsUpdate=!0,u=_,h=_.version,c=t.toneMapping),i.unshift(o,o.geometry,o.material,0,0,null))}}}function Wa(t,e,i,n){const r=t.getParameter(34921),a=n.isWebGL2?null:e.get("OES_vertex_array_object"),o=n.isWebGL2||null!==a,s={},l=d(null);let u=l;function h(e){return n.isWebGL2?t.bindVertexArray(e):a.bindVertexArrayOES(e)}function c(e){return n.isWebGL2?t.deleteVertexArray(e):a.deleteVertexArrayOES(e)}function d(t){const e=[],i=[],n=[];for(let t=0;t<r;t++)e[t]=0,i[t]=0,n[t]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:e,enabledAttributes:i,attributeDivisors:n,object:t,attributes:{},index:null}}function p(){const t=u.newAttributes;for(let e=0,i=t.length;e<i;e++)t[e]=0}function m(t){f(t,0)}function f(i,r){const a=u.newAttributes,o=u.enabledAttributes,s=u.attributeDivisors;a[i]=1,0===o[i]&&(t.enableVertexAttribArray(i),o[i]=1),s[i]!==r&&((n.isWebGL2?t:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](i,r),s[i]=r)}function g(){const e=u.newAttributes,i=u.enabledAttributes;for(let n=0,r=i.length;n<r;n++)i[n]!==e[n]&&(t.disableVertexAttribArray(n),i[n]=0)}function _(e,i,r,a,o,s){!0!==n.isWebGL2||5124!==r&&5125!==r?t.vertexAttribPointer(e,i,r,a,o,s):t.vertexAttribIPointer(e,i,r,o,s)}function v(){b(),u!==l&&(u=l,h(u.object))}function b(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:function(r,l,c,v,b){let y=!1;if(o){const e=function(e,i,r){const o=!0===r.wireframe;let l=s[e.id];void 0===l&&(l={},s[e.id]=l);let u=l[i.id];void 0===u&&(u={},l[i.id]=u);let h=u[o];return void 0===h&&(h=d(n.isWebGL2?t.createVertexArray():a.createVertexArrayOES()),u[o]=h),h}(v,c,l);u!==e&&(u=e,h(u.object)),y=function(t,e){const i=u.attributes,n=t.attributes;let r=0;for(const t in n){const e=i[t],a=n[t];if(void 0===e)return!0;if(e.attribute!==a)return!0;if(e.data!==a.data)return!0;r++}return u.attributesNum!==r||u.index!==e}(v,b),y&&function(t,e){const i={},n=t.attributes;let r=0;for(const t in n){const e=n[t],a={};a.attribute=e,e.data&&(a.data=e.data),i[t]=a,r++}u.attributes=i,u.attributesNum=r,u.index=e}(v,b)}else{const t=!0===l.wireframe;u.geometry===v.id&&u.program===c.id&&u.wireframe===t||(u.geometry=v.id,u.program=c.id,u.wireframe=t,y=!0)}!0===r.isInstancedMesh&&(y=!0),null!==b&&i.update(b,34963),y&&(function(r,a,o,s){if(!1===n.isWebGL2&&(r.isInstancedMesh||s.isInstancedBufferGeometry)&&null===e.get("ANGLE_instanced_arrays"))return;p();const l=s.attributes,u=o.getAttributes(),h=a.defaultAttributeValues;for(const e in u){const n=u[e];if(n>=0){const a=l[e];if(void 0!==a){const e=a.normalized,r=a.itemSize,o=i.get(a);if(void 0===o)continue;const l=o.buffer,u=o.type,h=o.bytesPerElement;if(a.isInterleavedBufferAttribute){const i=a.data,o=i.stride,c=a.offset;i&&i.isInstancedInterleavedBuffer?(f(n,i.meshPerAttribute),void 0===s._maxInstanceCount&&(s._maxInstanceCount=i.meshPerAttribute*i.count)):m(n),t.bindBuffer(34962,l),_(n,r,u,e,o*h,c*h)}else a.isInstancedBufferAttribute?(f(n,a.meshPerAttribute),void 0===s._maxInstanceCount&&(s._maxInstanceCount=a.meshPerAttribute*a.count)):m(n),t.bindBuffer(34962,l),_(n,r,u,e,0,0)}else if("instanceMatrix"===e){const e=i.get(r.instanceMatrix);if(void 0===e)continue;const a=e.buffer,o=e.type;f(n+0,1),f(n+1,1),f(n+2,1),f(n+3,1),t.bindBuffer(34962,a),t.vertexAttribPointer(n+0,4,o,!1,64,0),t.vertexAttribPointer(n+1,4,o,!1,64,16),t.vertexAttribPointer(n+2,4,o,!1,64,32),t.vertexAttribPointer(n+3,4,o,!1,64,48)}else if("instanceColor"===e){const e=i.get(r.instanceColor);if(void 0===e)continue;const a=e.buffer,o=e.type;f(n,1),t.bindBuffer(34962,a),t.vertexAttribPointer(n,3,o,!1,12,0)}else if(void 0!==h){const i=h[e];if(void 0!==i)switch(i.length){case 2:t.vertexAttrib2fv(n,i);break;case 3:t.vertexAttrib3fv(n,i);break;case 4:t.vertexAttrib4fv(n,i);break;default:t.vertexAttrib1fv(n,i)}}}}g()}(r,l,c,v),null!==b&&t.bindBuffer(34963,i.get(b).buffer))},reset:v,resetDefaultState:b,dispose:function(){v();for(const t in s){const e=s[t];for(const t in e){const i=e[t];for(const t in i)c(i[t].object),delete i[t];delete e[t]}delete s[t]}},releaseStatesOfGeometry:function(t){if(void 0===s[t.id])return;const e=s[t.id];for(const t in e){const i=e[t];for(const t in i)c(i[t].object),delete i[t];delete e[t]}delete s[t.id]},releaseStatesOfProgram:function(t){for(const e in s){const i=s[e];if(void 0===i[t.id])continue;const n=i[t.id];for(const t in n)c(n[t].object),delete n[t];delete i[t.id]}},initAttributes:p,enableAttribute:m,disableUnusedAttributes:g}}function ja(t,e,i,n){const r=n.isWebGL2;let a;this.setMode=function(t){a=t},this.render=function(e,n){t.drawArrays(a,e,n),i.update(n,a,1)},this.renderInstances=function(n,o,s){if(0===s)return;let l,u;if(r)l=t,u="drawArraysInstanced";else if(l=e.get("ANGLE_instanced_arrays"),u="drawArraysInstancedANGLE",null===l)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");l[u](a,n,o,s),i.update(o,a,s)}}function Ya(t,e,i){let n;function r(e){if("highp"===e){if(t.getShaderPrecisionFormat(35633,36338).precision>0&&t.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(35633,36337).precision>0&&t.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const a="undefined"!=typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&t instanceof WebGL2ComputeRenderingContext;let o=void 0!==i.precision?i.precision:"highp";const s=r(o);s!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",s,"instead."),o=s);const l=!0===i.logarithmicDepthBuffer,u=t.getParameter(34930),h=t.getParameter(35660),c=t.getParameter(3379),d=t.getParameter(34076),p=t.getParameter(34921),m=t.getParameter(36347),f=t.getParameter(36348),g=t.getParameter(36349),_=h>0,v=a||e.has("OES_texture_float");return{isWebGL2:a,getMaxAnisotropy:function(){if(void 0!==n)return n;if(!0===e.has("EXT_texture_filter_anisotropic")){const i=e.get("EXT_texture_filter_anisotropic");n=t.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n},getMaxPrecision:r,precision:o,logarithmicDepthBuffer:l,maxTextures:u,maxVertexTextures:h,maxTextureSize:c,maxCubemapSize:d,maxAttributes:p,maxVertexUniforms:m,maxVaryings:f,maxFragmentUniforms:g,vertexTextures:_,floatFragmentTextures:v,floatVertexTextures:_&&v,maxSamples:a?t.getParameter(36183):0}}function Xa(t){const e=this;let i=null,n=0,r=!1,a=!1;const o=new dr,s=new Zi,l={value:null,needsUpdate:!1};function u(){l.value!==i&&(l.value=i,l.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function h(t,i,n,r){const a=null!==t?t.length:0;let u=null;if(0!==a){if(u=l.value,!0!==r||null===u){const e=n+4*a,r=i.matrixWorldInverse;s.getNormalMatrix(r),(null===u||u.length<e)&&(u=new Float32Array(e));for(let e=0,i=n;e!==a;++e,i+=4)o.copy(t[e]).applyMatrix4(r,s),o.normal.toArray(u,i),u[i+3]=o.constant}l.value=u,l.needsUpdate=!0}return e.numPlanes=a,e.numIntersection=0,u}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(t,e,a){const o=0!==t.length||e||0!==n||r;return r=e,i=h(t,a,0),n=t.length,o},this.beginShadows=function(){a=!0,h(null)},this.endShadows=function(){a=!1,u()},this.setState=function(e,o,s){const c=e.clippingPlanes,d=e.clipIntersection,p=e.clipShadows,m=t.get(e);if(!r||null===c||0===c.length||a&&!p)a?h(null):u();else{const t=a?0:n,e=4*t;let r=m.clippingState||null;l.value=r,r=h(c,o,e,s);for(let t=0;t!==e;++t)r[t]=i[t];m.clippingState=r,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=t}}}function Za(t){let e=new WeakMap;function i(t,e){return e===st?t.mapping=at:e===lt&&(t.mapping=ot),t}function n(t){const i=t.target;i.removeEventListener("dispose",n);const r=e.get(i);void 0!==r&&(e.delete(i),r.dispose())}return{get:function(r){if(r&&r.isTexture){const a=r.mapping;if(a===st||a===lt){if(e.has(r))return i(e.get(r).texture,r.mapping);{const a=r.image;if(a&&a.height>0){const o=t.getRenderTarget(),s=new Pa(a.height/2);return s.fromEquirectangularTexture(t,r),e.set(r,s),t.setRenderTarget(o),r.addEventListener("dispose",n),i(s.texture,r.mapping)}return null}}}return r},dispose:function(){e=new WeakMap}}}function Ja(t){const e={};function i(i){if(void 0!==e[i])return e[i];let n;switch(i){case"WEBGL_depth_texture":n=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":n=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":n=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":n=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:n=t.getExtension(i)}return e[i]=n,n}return{has:function(t){return null!==i(t)},init:function(t){t.isWebGL2?i("EXT_color_buffer_float"):(i("WEBGL_depth_texture"),i("OES_texture_float"),i("OES_texture_half_float"),i("OES_texture_half_float_linear"),i("OES_standard_derivatives"),i("OES_element_index_uint"),i("OES_vertex_array_object"),i("ANGLE_instanced_arrays")),i("OES_texture_float_linear"),i("EXT_color_buffer_half_float")},get:function(t){const e=i(t);return null===e&&console.warn("THREE.WebGLRenderer: "+t+" extension not supported."),e}}}function Ka(t,e,i,n){const r={},a=new WeakMap;function o(t){const s=t.target;null!==s.index&&e.remove(s.index);for(const t in s.attributes)e.remove(s.attributes[t]);s.removeEventListener("dispose",o),delete r[s.id];const l=a.get(s);l&&(e.remove(l),a.delete(s)),n.releaseStatesOfGeometry(s),!0===s.isInstancedBufferGeometry&&delete s._maxInstanceCount,i.memory.geometries--}function s(t){const i=[],n=t.index,r=t.attributes.position;let o=0;if(null!==n){const t=n.array;o=n.version;for(let e=0,n=t.length;e<n;e+=3){const n=t[e+0],r=t[e+1],a=t[e+2];i.push(n,r,r,a,a,n)}}else{const t=r.array;o=r.version;for(let e=0,n=t.length/3-1;e<n;e+=3){const t=e+0,n=e+1,r=e+2;i.push(t,n,n,r,r,t)}}const s=new(Yr(i)>65535?Gr:Hr)(i,1);s.version=o;const l=a.get(t);l&&e.remove(l),a.set(t,s)}return{get:function(t,e){return!0===r[e.id]||(e.addEventListener("dispose",o),r[e.id]=!0,i.memory.geometries++),e},update:function(t){const i=t.attributes;for(const t in i)e.update(i[t],34962);const n=t.morphAttributes;for(const t in n){const i=n[t];for(let t=0,n=i.length;t<n;t++)e.update(i[t],34962)}},getWireframeAttribute:function(t){const e=a.get(t);if(e){const i=t.index;null!==i&&e.version<i.version&&s(t)}else s(t);return a.get(t)}}}function $a(t,e,i,n){const r=n.isWebGL2;let a,o,s;this.setMode=function(t){a=t},this.setIndex=function(t){o=t.type,s=t.bytesPerElement},this.render=function(e,n){t.drawElements(a,n,o,e*s),i.update(n,a,1)},this.renderInstances=function(n,l,u){if(0===u)return;let h,c;if(r)h=t,c="drawElementsInstanced";else if(h=e.get("ANGLE_instanced_arrays"),c="drawElementsInstancedANGLE",null===h)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");h[c](a,l,o,n*s,u),i.update(l,a,u)}}function Qa(t){const e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(t,i,n){switch(e.calls++,i){case 4:e.triangles+=n*(t/3);break;case 1:e.lines+=n*(t/2);break;case 3:e.lines+=n*(t-1);break;case 2:e.lines+=n*t;break;case 0:e.points+=n*t;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",i)}}}}function to(t,e){return t[0]-e[0]}function eo(t,e){return Math.abs(e[1])-Math.abs(t[1])}function io(t){const e={},i=new Float32Array(8),n=[];for(let t=0;t<8;t++)n[t]=[t,0];return{update:function(r,a,o,s){const l=r.morphTargetInfluences,u=void 0===l?0:l.length;let h=e[a.id];if(void 0===h){h=[];for(let t=0;t<u;t++)h[t]=[t,0];e[a.id]=h}for(let t=0;t<u;t++){const e=h[t];e[0]=t,e[1]=l[t]}h.sort(eo);for(let t=0;t<8;t++)t<u&&h[t][1]?(n[t][0]=h[t][0],n[t][1]=h[t][1]):(n[t][0]=Number.MAX_SAFE_INTEGER,n[t][1]=0);n.sort(to);const c=o.morphTargets&&a.morphAttributes.position,d=o.morphNormals&&a.morphAttributes.normal;let p=0;for(let t=0;t<8;t++){const e=n[t],r=e[0],o=e[1];r!==Number.MAX_SAFE_INTEGER&&o?(c&&a.getAttribute("morphTarget"+t)!==c[r]&&a.setAttribute("morphTarget"+t,c[r]),d&&a.getAttribute("morphNormal"+t)!==d[r]&&a.setAttribute("morphNormal"+t,d[r]),i[t]=o,p+=o):(c&&!0===a.hasAttribute("morphTarget"+t)&&a.deleteAttribute("morphTarget"+t),d&&!0===a.hasAttribute("morphNormal"+t)&&a.deleteAttribute("morphNormal"+t),i[t]=0)}const m=a.morphTargetsRelative?1:1-p;s.getUniforms().setValue(t,"morphTargetBaseInfluence",m),s.getUniforms().setValue(t,"morphTargetInfluences",i)}}}function no(t,e,i,n){let r=new WeakMap;function a(t){const e=t.target;e.removeEventListener("dispose",a),i.remove(e.instanceMatrix),null!==e.instanceColor&&i.remove(e.instanceColor)}return{update:function(t){const o=n.render.frame,s=t.geometry,l=e.get(t,s);return r.get(l)!==o&&(e.update(l),r.set(l,o)),t.isInstancedMesh&&(!1===t.hasEventListener("dispose",a)&&t.addEventListener("dispose",a),i.update(t.instanceMatrix,34962),null!==t.instanceColor&&i.update(t.instanceColor,34962)),l},dispose:function(){r=new WeakMap}}}Ga.physical={uniforms:Sa([Ga.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Xi(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new Cr(0)},transmission:{value:0},transmissionMap:{value:null}}]),vertexShader:Ha.meshphysical_vert,fragmentShader:Ha.meshphysical_frag};class ro extends Qi{constructor(t=null,e=1,i=1,n=1){super(null),this.image={data:t,width:e,height:i,depth:n},this.magFilter=mt,this.minFilter=mt,this.wrapR=dt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}ro.prototype.isDataTexture2DArray=!0;class ao extends Qi{constructor(t=null,e=1,i=1,n=1){super(null),this.image={data:t,width:e,height:i,depth:n},this.magFilter=mt,this.minFilter=mt,this.wrapR=dt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}ao.prototype.isDataTexture3D=!0;const oo=new Qi,so=new ro,lo=new ao,uo=new Ca,ho=[],co=[],po=new Float32Array(16),mo=new Float32Array(9),fo=new Float32Array(4);function go(t,e,i){const n=t[0];if(n<=0||n>0)return t;const r=e*i;let a=ho[r];if(void 0===a&&(a=new Float32Array(r),ho[r]=a),0!==e){n.toArray(a,0);for(let n=1,r=0;n!==e;++n)r+=i,t[n].toArray(a,r)}return a}function _o(t,e){if(t.length!==e.length)return!1;for(let i=0,n=t.length;i<n;i++)if(t[i]!==e[i])return!1;return!0}function vo(t,e){for(let i=0,n=e.length;i<n;i++)t[i]=e[i]}function bo(t,e){let i=co[e];void 0===i&&(i=new Int32Array(e),co[e]=i);for(let n=0;n!==e;++n)i[n]=t.allocateTextureUnit();return i}function yo(t,e){const i=this.cache;i[0]!==e&&(t.uniform1f(this.addr,e),i[0]=e)}function xo(t,e){const i=this.cache;if(void 0!==e.x)i[0]===e.x&&i[1]===e.y||(t.uniform2f(this.addr,e.x,e.y),i[0]=e.x,i[1]=e.y);else{if(_o(i,e))return;t.uniform2fv(this.addr,e),vo(i,e)}}function wo(t,e){const i=this.cache;if(void 0!==e.x)i[0]===e.x&&i[1]===e.y&&i[2]===e.z||(t.uniform3f(this.addr,e.x,e.y,e.z),i[0]=e.x,i[1]=e.y,i[2]=e.z);else if(void 0!==e.r)i[0]===e.r&&i[1]===e.g&&i[2]===e.b||(t.uniform3f(this.addr,e.r,e.g,e.b),i[0]=e.r,i[1]=e.g,i[2]=e.b);else{if(_o(i,e))return;t.uniform3fv(this.addr,e),vo(i,e)}}function Mo(t,e){const i=this.cache;if(void 0!==e.x)i[0]===e.x&&i[1]===e.y&&i[2]===e.z&&i[3]===e.w||(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),i[0]=e.x,i[1]=e.y,i[2]=e.z,i[3]=e.w);else{if(_o(i,e))return;t.uniform4fv(this.addr,e),vo(i,e)}}function Eo(t,e){const i=this.cache,n=e.elements;if(void 0===n){if(_o(i,e))return;t.uniformMatrix2fv(this.addr,!1,e),vo(i,e)}else{if(_o(i,n))return;fo.set(n),t.uniformMatrix2fv(this.addr,!1,fo),vo(i,n)}}function So(t,e){const i=this.cache,n=e.elements;if(void 0===n){if(_o(i,e))return;t.uniformMatrix3fv(this.addr,!1,e),vo(i,e)}else{if(_o(i,n))return;mo.set(n),t.uniformMatrix3fv(this.addr,!1,mo),vo(i,n)}}function To(t,e){const i=this.cache,n=e.elements;if(void 0===n){if(_o(i,e))return;t.uniformMatrix4fv(this.addr,!1,e),vo(i,e)}else{if(_o(i,n))return;po.set(n),t.uniformMatrix4fv(this.addr,!1,po),vo(i,n)}}function ko(t,e){const i=this.cache;i[0]!==e&&(t.uniform1i(this.addr,e),i[0]=e)}function Ao(t,e){const i=this.cache;_o(i,e)||(t.uniform2iv(this.addr,e),vo(i,e))}function zo(t,e){const i=this.cache;_o(i,e)||(t.uniform3iv(this.addr,e),vo(i,e))}function Lo(t,e){const i=this.cache;_o(i,e)||(t.uniform4iv(this.addr,e),vo(i,e))}function Ro(t,e){const i=this.cache;i[0]!==e&&(t.uniform1ui(this.addr,e),i[0]=e)}function Co(t,e){const i=this.cache;_o(i,e)||(t.uniform2uiv(this.addr,e),vo(i,e))}function Po(t,e){const i=this.cache;_o(i,e)||(t.uniform3uiv(this.addr,e),vo(i,e))}function qo(t,e){const i=this.cache;_o(i,e)||(t.uniform4uiv(this.addr,e),vo(i,e))}function Do(t,e,i){const n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(t.uniform1i(this.addr,r),n[0]=r),i.safeSetTexture2D(e||oo,r)}function Io(t,e,i){const n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(t.uniform1i(this.addr,r),n[0]=r),i.setTexture3D(e||lo,r)}function Bo(t,e,i){const n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(t.uniform1i(this.addr,r),n[0]=r),i.safeSetTextureCube(e||uo,r)}function Oo(t,e,i){const n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(t.uniform1i(this.addr,r),n[0]=r),i.setTexture2DArray(e||so,r)}function Fo(t,e){t.uniform1fv(this.addr,e)}function No(t,e){const i=go(e,this.size,2);t.uniform2fv(this.addr,i)}function Ho(t,e){const i=go(e,this.size,3);t.uniform3fv(this.addr,i)}function Uo(t,e){const i=go(e,this.size,4);t.uniform4fv(this.addr,i)}function Go(t,e){const i=go(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,i)}function Vo(t,e){const i=go(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,i)}function Wo(t,e){const i=go(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,i)}function jo(t,e){t.uniform1iv(this.addr,e)}function Yo(t,e){t.uniform2iv(this.addr,e)}function Xo(t,e){t.uniform3iv(this.addr,e)}function Zo(t,e){t.uniform4iv(this.addr,e)}function Jo(t,e){t.uniform1uiv(this.addr,e)}function Ko(t,e){t.uniform2uiv(this.addr,e)}function $o(t,e){t.uniform3uiv(this.addr,e)}function Qo(t,e){t.uniform4uiv(this.addr,e)}function ts(t,e,i){const n=e.length,r=bo(i,n);t.uniform1iv(this.addr,r);for(let t=0;t!==n;++t)i.safeSetTexture2D(e[t]||oo,r[t])}function es(t,e,i){const n=e.length,r=bo(i,n);t.uniform1iv(this.addr,r);for(let t=0;t!==n;++t)i.safeSetTextureCube(e[t]||uo,r[t])}function is(t,e,i){this.id=t,this.addr=i,this.cache=[],this.setValue=function(t){switch(t){case 5126:return yo;case 35664:return xo;case 35665:return wo;case 35666:return Mo;case 35674:return Eo;case 35675:return So;case 35676:return To;case 5124:case 35670:return ko;case 35667:case 35671:return Ao;case 35668:case 35672:return zo;case 35669:case 35673:return Lo;case 5125:return Ro;case 36294:return Co;case 36295:return Po;case 36296:return qo;case 35678:case 36198:case 36298:case 36306:case 35682:return Do;case 35679:case 36299:case 36307:return Io;case 35680:case 36300:case 36308:case 36293:return Bo;case 36289:case 36303:case 36311:case 36292:return Oo}}(e.type)}function ns(t,e,i){this.id=t,this.addr=i,this.cache=[],this.size=e.size,this.setValue=function(t){switch(t){case 5126:return Fo;case 35664:return No;case 35665:return Ho;case 35666:return Uo;case 35674:return Go;case 35675:return Vo;case 35676:return Wo;case 5124:case 35670:return jo;case 35667:case 35671:return Yo;case 35668:case 35672:return Xo;case 35669:case 35673:return Zo;case 5125:return Jo;case 36294:return Ko;case 36295:return $o;case 36296:return Qo;case 35678:case 36198:case 36298:case 36306:case 35682:return ts;case 35680:case 36300:case 36308:case 36293:return es}}(e.type)}function rs(t){this.id=t,this.seq=[],this.map={}}ns.prototype.updateCache=function(t){const e=this.cache;t instanceof Float32Array&&e.length!==t.length&&(this.cache=new Float32Array(t.length)),vo(e,t)},rs.prototype.setValue=function(t,e,i){const n=this.seq;for(let r=0,a=n.length;r!==a;++r){const a=n[r];a.setValue(t,e[a.id],i)}};const as=/(\w+)(\])?(\[|\.)?/g;function os(t,e){t.seq.push(e),t.map[e.id]=e}function ss(t,e,i){const n=t.name,r=n.length;for(as.lastIndex=0;;){const a=as.exec(n),o=as.lastIndex;let s=a[1];const l="]"===a[2],u=a[3];if(l&&(s|=0),void 0===u||"["===u&&o+2===r){os(i,void 0===u?new is(s,t,e):new ns(s,t,e));break}{let t=i.map[s];void 0===t&&(t=new rs(s),os(i,t)),i=t}}}function ls(t,e){this.seq=[],this.map={};const i=t.getProgramParameter(e,35718);for(let n=0;n<i;++n){const i=t.getActiveUniform(e,n);ss(i,t.getUniformLocation(e,i.name),this)}}function us(t,e,i){const n=t.createShader(e);return t.shaderSource(n,i),t.compileShader(n),n}ls.prototype.setValue=function(t,e,i,n){const r=this.map[e];void 0!==r&&r.setValue(t,i,n)},ls.prototype.setOptional=function(t,e,i){const n=e[i];void 0!==n&&this.setValue(t,i,n)},ls.upload=function(t,e,i,n){for(let r=0,a=e.length;r!==a;++r){const a=e[r],o=i[a.id];!1!==o.needsUpdate&&a.setValue(t,o.value,n)}},ls.seqWithValue=function(t,e){const i=[];for(let n=0,r=t.length;n!==r;++n){const r=t[n];r.id in e&&i.push(r)}return i};let hs=0;function cs(t){switch(t){case Je:return["Linear","( value )"];case Ke:return["sRGB","( value )"];case Qe:return["RGBE","( value )"];case ei:return["RGBM","( value, 7.0 )"];case ii:return["RGBM","( value, 16.0 )"];case ni:return["RGBD","( value, 256.0 )"];case $e:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case ti:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",t),["Linear","( value )"]}}function ds(t,e,i){const n=t.getShaderParameter(e,35713),r=t.getShaderInfoLog(e).trim();return n&&""===r?"":"THREE.WebGLShader: gl.getShaderInfoLog() "+i+"\n"+r+function(t){const e=t.split("\n");for(let t=0;t<e.length;t++)e[t]=t+1+": "+e[t];return e.join("\n")}(t.getShaderSource(e))}function ps(t,e){const i=cs(e);return"vec4 "+t+"( vec4 value ) { return "+i[0]+"ToLinear"+i[1]+"; }"}function ms(t,e){const i=cs(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+i[0]+i[1]+"; }"}function fs(t,e){let i;switch(e){case Q:i="Linear";break;case tt:i="Reinhard";break;case et:i="OptimizedCineon";break;case it:i="ACESFilmic";break;case nt:i="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),i="Linear"}return"vec3 "+t+"( vec3 color ) { return "+i+"ToneMapping( color ); }"}function gs(t){return""!==t}function _s(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function vs(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const bs=/^[ \t]*#include +<([\w\d./]+)>/gm;function ys(t){return t.replace(bs,xs)}function xs(t,e){const i=Ha[e];if(void 0===i)throw new Error("Can not resolve #include <"+e+">");return ys(i)}const ws=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,Ms=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Es(t){return t.replace(Ms,Ts).replace(ws,Ss)}function Ss(t,e,i,n){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),Ts(0,e,i,n)}function Ts(t,e,i,n){let r="";for(let t=parseInt(e);t<parseInt(i);t++)r+=n.replace(/\[\s*i\s*\]/g,"[ "+t+" ]").replace(/UNROLLED_LOOP_INDEX/g,t);return r}function ks(t){let e="precision "+t.precision+" float;\nprecision "+t.precision+" int;";return"highp"===t.precision?e+="\n#define HIGH_PRECISION":"mediump"===t.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===t.precision&&(e+="\n#define LOW_PRECISION"),e}function As(t,e,i,n){const r=t.getContext(),a=i.defines;let o=i.vertexShader,s=i.fragmentShader;const l=function(t){let e="SHADOWMAP_TYPE_BASIC";return t.shadowMapType===c?e="SHADOWMAP_TYPE_PCF":t.shadowMapType===d?e="SHADOWMAP_TYPE_PCF_SOFT":t.shadowMapType===p&&(e="SHADOWMAP_TYPE_VSM"),e}(i),u=function(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case at:case ot:e="ENVMAP_TYPE_CUBE";break;case ut:case ht:e="ENVMAP_TYPE_CUBE_UV"}return e}(i),h=function(t){let e="ENVMAP_MODE_REFLECTION";if(t.envMap)switch(t.envMapMode){case ot:case ht:e="ENVMAP_MODE_REFRACTION"}return e}(i),m=function(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case Z:e="ENVMAP_BLENDING_MULTIPLY";break;case J:e="ENVMAP_BLENDING_MIX";break;case K:e="ENVMAP_BLENDING_ADD"}return e}(i),f=t.gammaFactor>0?t.gammaFactor:1,g=i.isWebGL2?"":function(t){return[t.extensionDerivatives||t.envMapCubeUV||t.bumpMap||t.tangentSpaceNormalMap||t.clearcoatNormalMap||t.flatShading||"physical"===t.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(t.extensionFragDepth||t.logarithmicDepthBuffer)&&t.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",t.extensionDrawBuffers&&t.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(t.extensionShaderTextureLOD||t.envMap)&&t.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(gs).join("\n")}(i),_=function(t){const e=[];for(const i in t){const n=t[i];!1!==n&&e.push("#define "+i+" "+n)}return e.join("\n")}(a),v=r.createProgram();let b,y,x=i.glslVersion?"#version "+i.glslVersion+"\n":"";i.isRawShaderMaterial?(b=[_].filter(gs).join("\n"),b.length>0&&(b+="\n"),y=[g,_].filter(gs).join("\n"),y.length>0&&(y+="\n")):(b=[ks(i),"#define SHADER_NAME "+i.shaderName,_,i.instancing?"#define USE_INSTANCING":"",i.instancingColor?"#define USE_INSTANCING_COLOR":"",i.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+f,"#define MAX_BONES "+i.maxBones,i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp2?"#define FOG_EXP2":"",i.map?"#define USE_MAP":"",i.envMap?"#define USE_ENVMAP":"",i.envMap?"#define "+h:"",i.lightMap?"#define USE_LIGHTMAP":"",i.aoMap?"#define USE_AOMAP":"",i.emissiveMap?"#define USE_EMISSIVEMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.normalMap&&i.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",i.normalMap&&i.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",i.clearcoatMap?"#define USE_CLEARCOATMAP":"",i.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",i.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",i.displacementMap&&i.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.roughnessMap?"#define USE_ROUGHNESSMAP":"",i.metalnessMap?"#define USE_METALNESSMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.transmissionMap?"#define USE_TRANSMISSIONMAP":"",i.vertexTangents?"#define USE_TANGENT":"",i.vertexColors?"#define USE_COLOR":"",i.vertexAlphas?"#define USE_COLOR_ALPHA":"",i.vertexUvs?"#define USE_UV":"",i.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",i.flatShading?"#define FLAT_SHADED":"",i.skinning?"#define USE_SKINNING":"",i.useVertexTexture?"#define BONE_TEXTURE":"",i.morphTargets?"#define USE_MORPHTARGETS":"",i.morphNormals&&!1===i.flatShading?"#define USE_MORPHNORMALS":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+l:"",i.sizeAttenuation?"#define USE_SIZEATTENUATION":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",i.logarithmicDepthBuffer&&i.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(gs).join("\n"),y=[g,ks(i),"#define SHADER_NAME "+i.shaderName,_,i.alphaTest?"#define ALPHATEST "+i.alphaTest+(i.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+f,i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp2?"#define FOG_EXP2":"",i.map?"#define USE_MAP":"",i.matcap?"#define USE_MATCAP":"",i.envMap?"#define USE_ENVMAP":"",i.envMap?"#define "+u:"",i.envMap?"#define "+h:"",i.envMap?"#define "+m:"",i.lightMap?"#define USE_LIGHTMAP":"",i.aoMap?"#define USE_AOMAP":"",i.emissiveMap?"#define USE_EMISSIVEMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.normalMap&&i.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",i.normalMap&&i.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",i.clearcoatMap?"#define USE_CLEARCOATMAP":"",i.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",i.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.roughnessMap?"#define USE_ROUGHNESSMAP":"",i.metalnessMap?"#define USE_METALNESSMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.sheen?"#define USE_SHEEN":"",i.transmissionMap?"#define USE_TRANSMISSIONMAP":"",i.vertexTangents?"#define USE_TANGENT":"",i.vertexColors||i.instancingColor?"#define USE_COLOR":"",i.vertexAlphas?"#define USE_COLOR_ALPHA":"",i.vertexUvs?"#define USE_UV":"",i.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",i.gradientMap?"#define USE_GRADIENTMAP":"",i.flatShading?"#define FLAT_SHADED":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+l:"",i.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",i.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",i.logarithmicDepthBuffer&&i.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(i.extensionShaderTextureLOD||i.envMap)&&i.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",i.toneMapping!==$?"#define TONE_MAPPING":"",i.toneMapping!==$?Ha.tonemapping_pars_fragment:"",i.toneMapping!==$?fs("toneMapping",i.toneMapping):"",i.dithering?"#define DITHERING":"",Ha.encodings_pars_fragment,i.map?ps("mapTexelToLinear",i.mapEncoding):"",i.matcap?ps("matcapTexelToLinear",i.matcapEncoding):"",i.envMap?ps("envMapTexelToLinear",i.envMapEncoding):"",i.emissiveMap?ps("emissiveMapTexelToLinear",i.emissiveMapEncoding):"",i.lightMap?ps("lightMapTexelToLinear",i.lightMapEncoding):"",ms("linearToOutputTexel",i.outputEncoding),i.depthPacking?"#define DEPTH_PACKING "+i.depthPacking:"","\n"].filter(gs).join("\n")),o=ys(o),o=_s(o,i),o=vs(o,i),s=ys(s),s=_s(s,i),s=vs(s,i),o=Es(o),s=Es(s),i.isWebGL2&&!0!==i.isRawShaderMaterial&&(x="#version 300 es\n",b=["#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+b,y=["#define varying in",i.glslVersion===qi?"":"out highp vec4 pc_fragColor;",i.glslVersion===qi?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+y);const w=x+y+s,M=us(r,35633,x+b+o),E=us(r,35632,w);if(r.attachShader(v,M),r.attachShader(v,E),void 0!==i.index0AttributeName?r.bindAttribLocation(v,0,i.index0AttributeName):!0===i.morphTargets&&r.bindAttribLocation(v,0,"position"),r.linkProgram(v),t.debug.checkShaderErrors){const t=r.getProgramInfoLog(v).trim(),e=r.getShaderInfoLog(M).trim(),i=r.getShaderInfoLog(E).trim();let n=!0,a=!0;if(!1===r.getProgramParameter(v,35714)){n=!1;const e=ds(r,M,"vertex"),i=ds(r,E,"fragment");console.error("THREE.WebGLProgram: shader error: ",r.getError(),"35715",r.getProgramParameter(v,35715),"gl.getProgramInfoLog",t,e,i)}else""!==t?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",t):""!==e&&""!==i||(a=!1);a&&(this.diagnostics={runnable:n,programLog:t,vertexShader:{log:e,prefix:b},fragmentShader:{log:i,prefix:y}})}let S,T;return r.deleteShader(M),r.deleteShader(E),this.getUniforms=function(){return void 0===S&&(S=new ls(r,v)),S},this.getAttributes=function(){return void 0===T&&(T=function(t,e){const i={},n=t.getProgramParameter(e,35721);for(let r=0;r<n;r++){const n=t.getActiveAttrib(e,r).name;i[n]=t.getAttribLocation(e,n)}return i}(r,v)),T},this.destroy=function(){n.releaseStatesOfProgram(this),r.deleteProgram(v),this.program=void 0},this.name=i.shaderName,this.id=hs++,this.cacheKey=e,this.usedTimes=1,this.program=v,this.vertexShader=M,this.fragmentShader=E,this}function zs(t,e,i,n,r,a){const o=[],s=n.isWebGL2,l=n.logarithmicDepthBuffer,u=n.floatVertexTextures,h=n.maxVertexUniforms,c=n.vertexTextures;let d=n.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},m=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexAlphas","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen","transmissionMap"];function _(t){let e;return t&&t.isTexture?e=t.encoding:t&&t.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),e=t.texture.encoding):e=Je,e}return{getParameters:function(r,o,m,v,b){const y=v.fog,x=r.isMeshStandardMaterial?v.environment:null,w=e.get(r.envMap||x),M=p[r.type],E=b.isSkinnedMesh?function(t){const e=t.skeleton.bones;if(u)return 1024;{const t=h,i=Math.floor((t-20)/4),n=Math.min(i,e.length);return n<e.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+e.length+" bones. This GPU supports "+n+"."),0):n}}(b):0;let S,T;if(null!==r.precision&&(d=n.getMaxPrecision(r.precision),d!==r.precision&&console.warn("THREE.WebGLProgram.getParameters:",r.precision,"not supported, using",d,"instead.")),M){const t=Ga[M];S=t.vertexShader,T=t.fragmentShader}else S=r.vertexShader,T=r.fragmentShader;const k=t.getRenderTarget();return{isWebGL2:s,shaderID:M,shaderName:r.type,vertexShader:S,fragmentShader:T,defines:r.defines,isRawShaderMaterial:!0===r.isRawShaderMaterial,glslVersion:r.glslVersion,precision:d,instancing:!0===b.isInstancedMesh,instancingColor:!0===b.isInstancedMesh&&null!==b.instanceColor,supportsVertexTextures:c,outputEncoding:null!==k?_(k.texture):t.outputEncoding,map:!!r.map,mapEncoding:_(r.map),matcap:!!r.matcap,matcapEncoding:_(r.matcap),envMap:!!w,envMapMode:w&&w.mapping,envMapEncoding:_(w),envMapCubeUV:!!w&&(w.mapping===ut||w.mapping===ht),lightMap:!!r.lightMap,lightMapEncoding:_(r.lightMap),aoMap:!!r.aoMap,emissiveMap:!!r.emissiveMap,emissiveMapEncoding:_(r.emissiveMap),bumpMap:!!r.bumpMap,normalMap:!!r.normalMap,objectSpaceNormalMap:r.normalMapType===si,tangentSpaceNormalMap:r.normalMapType===oi,clearcoatMap:!!r.clearcoatMap,clearcoatRoughnessMap:!!r.clearcoatRoughnessMap,clearcoatNormalMap:!!r.clearcoatNormalMap,displacementMap:!!r.displacementMap,roughnessMap:!!r.roughnessMap,metalnessMap:!!r.metalnessMap,specularMap:!!r.specularMap,alphaMap:!!r.alphaMap,gradientMap:!!r.gradientMap,sheen:!!r.sheen,transmissionMap:!!r.transmissionMap,combine:r.combine,vertexTangents:r.normalMap&&r.vertexTangents,vertexColors:r.vertexColors,vertexAlphas:!0===r.vertexColors&&b.geometry&&b.geometry.attributes.color&&4===b.geometry.attributes.color.itemSize,vertexUvs:!!(r.map||r.bumpMap||r.normalMap||r.specularMap||r.alphaMap||r.emissiveMap||r.roughnessMap||r.metalnessMap||r.clearcoatMap||r.clearcoatRoughnessMap||r.clearcoatNormalMap||r.displacementMap||r.transmissionMap),uvsVertexOnly:!(r.map||r.bumpMap||r.normalMap||r.specularMap||r.alphaMap||r.emissiveMap||r.roughnessMap||r.metalnessMap||r.clearcoatNormalMap||r.transmissionMap||!r.displacementMap),fog:!!y,useFog:r.fog,fogExp2:y&&y.isFogExp2,flatShading:!!r.flatShading,sizeAttenuation:r.sizeAttenuation,logarithmicDepthBuffer:l,skinning:r.skinning&&E>0,maxBones:E,useVertexTexture:u,morphTargets:r.morphTargets,morphNormals:r.morphNormals,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numDirLightShadows:o.directionalShadowMap.length,numPointLightShadows:o.pointShadowMap.length,numSpotLightShadows:o.spotShadowMap.length,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:r.dithering,shadowMapEnabled:t.shadowMap.enabled&&m.length>0,shadowMapType:t.shadowMap.type,toneMapping:r.toneMapped?t.toneMapping:$,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:r.premultipliedAlpha,alphaTest:r.alphaTest,doubleSided:r.side===g,flipSided:r.side===f,depthPacking:void 0!==r.depthPacking&&r.depthPacking,index0AttributeName:r.index0AttributeName,extensionDerivatives:r.extensions&&r.extensions.derivatives,extensionFragDepth:r.extensions&&r.extensions.fragDepth,extensionDrawBuffers:r.extensions&&r.extensions.drawBuffers,extensionShaderTextureLOD:r.extensions&&r.extensions.shaderTextureLOD,rendererExtensionFragDepth:s||i.has("EXT_frag_depth"),rendererExtensionDrawBuffers:s||i.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:s||i.has("EXT_shader_texture_lod"),customProgramCacheKey:r.customProgramCacheKey()}},getProgramCacheKey:function(e){const i=[];if(e.shaderID?i.push(e.shaderID):(i.push(e.fragmentShader),i.push(e.vertexShader)),void 0!==e.defines)for(const t in e.defines)i.push(t),i.push(e.defines[t]);if(!1===e.isRawShaderMaterial){for(let t=0;t<m.length;t++)i.push(e[m[t]]);i.push(t.outputEncoding),i.push(t.gammaFactor)}return i.push(e.customProgramCacheKey),i.join()},getUniforms:function(t){const e=p[t.type];let i;if(e){const t=Ga[e];i=Ta.clone(t.uniforms)}else i=t.uniforms;return i},acquireProgram:function(e,i){let n;for(let t=0,e=o.length;t<e;t++){const e=o[t];if(e.cacheKey===i){n=e,++n.usedTimes;break}}return void 0===n&&(n=new As(t,i,e,r),o.push(n)),n},releaseProgram:function(t){if(0==--t.usedTimes){const e=o.indexOf(t);o[e]=o[o.length-1],o.pop(),t.destroy()}},programs:o}}function Ls(){let t=new WeakMap;return{get:function(e){let i=t.get(e);return void 0===i&&(i={},t.set(e,i)),i},remove:function(e){t.delete(e)},update:function(e,i,n){t.get(e)[i]=n},dispose:function(){t=new WeakMap}}}function Rs(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.program!==e.program?t.program.id-e.program.id:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function Cs(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function Ps(t){const e=[];let i=0;const n=[],r=[],a={id:-1};function o(n,r,o,s,l,u){let h=e[i];const c=t.get(o);return void 0===h?(h={id:n.id,object:n,geometry:r,material:o,program:c.program||a,groupOrder:s,renderOrder:n.renderOrder,z:l,group:u},e[i]=h):(h.id=n.id,h.object=n,h.geometry=r,h.material=o,h.program=c.program||a,h.groupOrder=s,h.renderOrder=n.renderOrder,h.z=l,h.group=u),i++,h}return{opaque:n,transparent:r,init:function(){i=0,n.length=0,r.length=0},push:function(t,e,i,a,s,l){const u=o(t,e,i,a,s,l);(!0===i.transparent?r:n).push(u)},unshift:function(t,e,i,a,s,l){const u=o(t,e,i,a,s,l);(!0===i.transparent?r:n).unshift(u)},finish:function(){for(let t=i,n=e.length;t<n;t++){const i=e[t];if(null===i.id)break;i.id=null,i.object=null,i.geometry=null,i.material=null,i.program=null,i.group=null}},sort:function(t,e){n.length>1&&n.sort(t||Rs),r.length>1&&r.sort(e||Cs)}}}function qs(t){let e=new WeakMap;return{get:function(i,n){let r;return!1===e.has(i)?(r=new Ps(t),e.set(i,[r])):n>=e.get(i).length?(r=new Ps(t),e.get(i).push(r)):r=e.get(i)[n],r},dispose:function(){e=new WeakMap}}}function Ds(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let i;switch(e.type){case"DirectionalLight":i={direction:new on,color:new Cr};break;case"SpotLight":i={position:new on,direction:new on,color:new Cr,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":i={position:new on,color:new Cr,distance:0,decay:0};break;case"HemisphereLight":i={direction:new on,skyColor:new Cr,groundColor:new Cr};break;case"RectAreaLight":i={color:new Cr,position:new on,halfWidth:new on,halfHeight:new on}}return t[e.id]=i,i}}}let Is=0;function Bs(t,e){return(e.castShadow?1:0)-(t.castShadow?1:0)}function Os(t,e){const i=new Ds,n=function(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let i;switch(e.type){case"DirectionalLight":case"SpotLight":i={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Xi};break;case"PointLight":i={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Xi,shadowCameraNear:1,shadowCameraFar:1e3}}return t[e.id]=i,i}}}(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let t=0;t<9;t++)r.probe.push(new on);const a=new on,o=new Bn,s=new Bn;return{setup:function(a){let o=0,s=0,l=0;for(let t=0;t<9;t++)r.probe[t].set(0,0,0);let u=0,h=0,c=0,d=0,p=0,m=0,f=0,g=0;a.sort(Bs);for(let t=0,e=a.length;t<e;t++){const e=a[t],_=e.color,v=e.intensity,b=e.distance,y=e.shadow&&e.shadow.map?e.shadow.map.texture:null;if(e.isAmbientLight)o+=_.r*v,s+=_.g*v,l+=_.b*v;else if(e.isLightProbe)for(let t=0;t<9;t++)r.probe[t].addScaledVector(e.sh.coefficients[t],v);else if(e.isDirectionalLight){const t=i.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity),e.castShadow){const t=e.shadow,i=n.get(e);i.shadowBias=t.bias,i.shadowNormalBias=t.normalBias,i.shadowRadius=t.radius,i.shadowMapSize=t.mapSize,r.directionalShadow[u]=i,r.directionalShadowMap[u]=y,r.directionalShadowMatrix[u]=e.shadow.matrix,m++}r.directional[u]=t,u++}else if(e.isSpotLight){const t=i.get(e);if(t.position.setFromMatrixPosition(e.matrixWorld),t.color.copy(_).multiplyScalar(v),t.distance=b,t.coneCos=Math.cos(e.angle),t.penumbraCos=Math.cos(e.angle*(1-e.penumbra)),t.decay=e.decay,e.castShadow){const t=e.shadow,i=n.get(e);i.shadowBias=t.bias,i.shadowNormalBias=t.normalBias,i.shadowRadius=t.radius,i.shadowMapSize=t.mapSize,r.spotShadow[c]=i,r.spotShadowMap[c]=y,r.spotShadowMatrix[c]=e.shadow.matrix,g++}r.spot[c]=t,c++}else if(e.isRectAreaLight){const t=i.get(e);t.color.copy(_).multiplyScalar(v),t.halfWidth.set(.5*e.width,0,0),t.halfHeight.set(0,.5*e.height,0),r.rectArea[d]=t,d++}else if(e.isPointLight){const t=i.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity),t.distance=e.distance,t.decay=e.decay,e.castShadow){const t=e.shadow,i=n.get(e);i.shadowBias=t.bias,i.shadowNormalBias=t.normalBias,i.shadowRadius=t.radius,i.shadowMapSize=t.mapSize,i.shadowCameraNear=t.camera.near,i.shadowCameraFar=t.camera.far,r.pointShadow[h]=i,r.pointShadowMap[h]=y,r.pointShadowMatrix[h]=e.shadow.matrix,f++}r.point[h]=t,h++}else if(e.isHemisphereLight){const t=i.get(e);t.skyColor.copy(e.color).multiplyScalar(v),t.groundColor.copy(e.groundColor).multiplyScalar(v),r.hemi[p]=t,p++}}d>0&&(e.isWebGL2||!0===t.has("OES_texture_float_linear")?(r.rectAreaLTC1=Ua.LTC_FLOAT_1,r.rectAreaLTC2=Ua.LTC_FLOAT_2):!0===t.has("OES_texture_half_float_linear")?(r.rectAreaLTC1=Ua.LTC_HALF_1,r.rectAreaLTC2=Ua.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),r.ambient[0]=o,r.ambient[1]=s,r.ambient[2]=l;const _=r.hash;_.directionalLength===u&&_.pointLength===h&&_.spotLength===c&&_.rectAreaLength===d&&_.hemiLength===p&&_.numDirectionalShadows===m&&_.numPointShadows===f&&_.numSpotShadows===g||(r.directional.length=u,r.spot.length=c,r.rectArea.length=d,r.point.length=h,r.hemi.length=p,r.directionalShadow.length=m,r.directionalShadowMap.length=m,r.pointShadow.length=f,r.pointShadowMap.length=f,r.spotShadow.length=g,r.spotShadowMap.length=g,r.directionalShadowMatrix.length=m,r.pointShadowMatrix.length=f,r.spotShadowMatrix.length=g,_.directionalLength=u,_.pointLength=h,_.spotLength=c,_.rectAreaLength=d,_.hemiLength=p,_.numDirectionalShadows=m,_.numPointShadows=f,_.numSpotShadows=g,r.version=Is++)},setupView:function(t,e){let i=0,n=0,l=0,u=0,h=0;const c=e.matrixWorldInverse;for(let e=0,d=t.length;e<d;e++){const d=t[e];if(d.isDirectionalLight){const t=r.directional[i];t.direction.setFromMatrixPosition(d.matrixWorld),a.setFromMatrixPosition(d.target.matrixWorld),t.direction.sub(a),t.direction.transformDirection(c),i++}else if(d.isSpotLight){const t=r.spot[l];t.position.setFromMatrixPosition(d.matrixWorld),t.position.applyMatrix4(c),t.direction.setFromMatrixPosition(d.matrixWorld),a.setFromMatrixPosition(d.target.matrixWorld),t.direction.sub(a),t.direction.transformDirection(c),l++}else if(d.isRectAreaLight){const t=r.rectArea[u];t.position.setFromMatrixPosition(d.matrixWorld),t.position.applyMatrix4(c),s.identity(),o.copy(d.matrixWorld),o.premultiply(c),s.extractRotation(o),t.halfWidth.set(.5*d.width,0,0),t.halfHeight.set(0,.5*d.height,0),t.halfWidth.applyMatrix4(s),t.halfHeight.applyMatrix4(s),u++}else if(d.isPointLight){const t=r.point[n];t.position.setFromMatrixPosition(d.matrixWorld),t.position.applyMatrix4(c),n++}else if(d.isHemisphereLight){const t=r.hemi[h];t.direction.setFromMatrixPosition(d.matrixWorld),t.direction.transformDirection(c),t.direction.normalize(),h++}}},state:r}}function Fs(t,e){const i=new Os(t,e),n=[],r=[];return{init:function(){n.length=0,r.length=0},state:{lightsArray:n,shadowsArray:r,lights:i},setupLights:function(){i.setup(n)},setupLightsView:function(t){i.setupView(n,t)},pushLight:function(t){n.push(t)},pushShadow:function(t){r.push(t)}}}function Ns(t,e){let i=new WeakMap;return{get:function(n,r=0){let a;return!1===i.has(n)?(a=new Fs(t,e),i.set(n,[a])):r>=i.get(n).length?(a=new Fs(t,e),i.get(n).push(a)):a=i.get(n)[r],a},dispose:function(){i=new WeakMap}}}class Hs extends Sr{constructor(t){super(),this.type="MeshDepthMaterial",this.depthPacking=ri,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}Hs.prototype.isMeshDepthMaterial=!0;class Us extends Sr{constructor(t){super(),this.type="MeshDistanceMaterial",this.referencePosition=new on,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(t)}copy(t){return super.copy(t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}function Gs(t,e,i){let n=new Ba;const r=new Xi,a=new Xi,o=new en,s=[],l=[],u={},h=i.maxTextureSize,d={0:f,1:m,2:g},_=new ka({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new Xi},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\n\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean * HALF_SAMPLE_RATE;\n\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),v=_.clone();v.defines.HORIZONTAL_PASS=1;const y=new na;y.setAttribute("position",new Ir(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const x=new xa(y,_),w=this;function M(i,n){const r=e.update(x);_.uniforms.shadow_pass.value=i.map.texture,_.uniforms.resolution.value=i.mapSize,_.uniforms.radius.value=i.radius,t.setRenderTarget(i.mapPass),t.clear(),t.renderBufferDirect(n,null,r,_,x,null),v.uniforms.shadow_pass.value=i.mapPass.texture,v.uniforms.resolution.value=i.mapSize,v.uniforms.radius.value=i.radius,t.setRenderTarget(i.map),t.clear(),t.renderBufferDirect(n,null,r,v,x,null)}function E(t,e,i){const n=t<<0|e<<1|i<<2;let r=s[n];return void 0===r&&(r=new Hs({depthPacking:ai,morphTargets:t,skinning:e}),s[n]=r),r}function S(t,e,i){const n=t<<0|e<<1|i<<2;let r=l[n];return void 0===r&&(r=new Us({morphTargets:t,skinning:e}),l[n]=r),r}function T(e,i,n,r,a,o,s){let l=null,h=E,c=e.customDepthMaterial;if(!0===r.isPointLight&&(h=S,c=e.customDistanceMaterial),void 0===c){let t=!1;!0===n.morphTargets&&(t=i.morphAttributes&&i.morphAttributes.position&&i.morphAttributes.position.length>0);let r=!1;!0===e.isSkinnedMesh&&(!0===n.skinning?r=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",e)),l=h(t,r,!0===e.isInstancedMesh)}else l=c;if(t.localClippingEnabled&&!0===n.clipShadows&&0!==n.clippingPlanes.length){const t=l.uuid,e=n.uuid;let i=u[t];void 0===i&&(i={},u[t]=i);let r=i[e];void 0===r&&(r=l.clone(),i[e]=r),l=r}return l.visible=n.visible,l.wireframe=n.wireframe,l.side=s===p?null!==n.shadowSide?n.shadowSide:n.side:null!==n.shadowSide?n.shadowSide:d[n.side],l.clipShadows=n.clipShadows,l.clippingPlanes=n.clippingPlanes,l.clipIntersection=n.clipIntersection,l.wireframeLinewidth=n.wireframeLinewidth,l.linewidth=n.linewidth,!0===r.isPointLight&&!0===l.isMeshDistanceMaterial&&(l.referencePosition.setFromMatrixPosition(r.matrixWorld),l.nearDistance=a,l.farDistance=o),l}function k(i,r,a,o,s){if(!1===i.visible)return;if(i.layers.test(r.layers)&&(i.isMesh||i.isLine||i.isPoints)&&(i.castShadow||i.receiveShadow&&s===p)&&(!i.frustumCulled||n.intersectsObject(i))){i.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse,i.matrixWorld);const n=e.update(i),r=i.material;if(Array.isArray(r)){const e=n.groups;for(let l=0,u=e.length;l<u;l++){const u=e[l],h=r[u.materialIndex];if(h&&h.visible){const e=T(i,n,h,o,a.near,a.far,s);t.renderBufferDirect(a,null,n,e,i,u)}}}else if(r.visible){const e=T(i,n,r,o,a.near,a.far,s);t.renderBufferDirect(a,null,n,e,i,null)}}const l=i.children;for(let t=0,e=l.length;t<e;t++)k(l[t],r,a,o,s)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=c,this.render=function(e,i,s){if(!1===w.enabled)return;if(!1===w.autoUpdate&&!1===w.needsUpdate)return;if(0===e.length)return;const l=t.getRenderTarget(),u=t.getActiveCubeFace(),c=t.getActiveMipmapLevel(),d=t.state;d.setBlending(b),d.buffers.color.setClear(1,1,1,1),d.buffers.depth.setTest(!0),d.setScissorTest(!1);for(let l=0,u=e.length;l<u;l++){const u=e[l],c=u.shadow;if(void 0===c){console.warn("THREE.WebGLShadowMap:",u,"has no shadow.");continue}if(!1===c.autoUpdate&&!1===c.needsUpdate)continue;r.copy(c.mapSize);const m=c.getFrameExtents();if(r.multiply(m),a.copy(c.mapSize),(r.x>h||r.y>h)&&(r.x>h&&(a.x=Math.floor(h/m.x),r.x=a.x*m.x,c.mapSize.x=a.x),r.y>h&&(a.y=Math.floor(h/m.y),r.y=a.y*m.y,c.mapSize.y=a.y)),null===c.map&&!c.isPointLightShadow&&this.type===p){const t={minFilter:bt,magFilter:bt,format:Ot};c.map=new nn(r.x,r.y,t),c.map.texture.name=u.name+".shadowMap",c.mapPass=new nn(r.x,r.y,t),c.camera.updateProjectionMatrix()}if(null===c.map){const t={minFilter:mt,magFilter:mt,format:Ot};c.map=new nn(r.x,r.y,t),c.map.texture.name=u.name+".shadowMap",c.camera.updateProjectionMatrix()}t.setRenderTarget(c.map),t.clear();const f=c.getViewportCount();for(let t=0;t<f;t++){const e=c.getViewport(t);o.set(a.x*e.x,a.y*e.y,a.x*e.z,a.y*e.w),d.viewport(o),c.updateMatrices(u,t),n=c.getFrustum(),k(i,s,c.camera,u,this.type)}c.isPointLightShadow||this.type!==p||M(c,s),c.needsUpdate=!1}w.needsUpdate=!1,t.setRenderTarget(l,u,c)}}function Vs(t,e,i){const n=i.isWebGL2,r=new function(){let e=!1;const i=new en;let n=null;const r=new en(0,0,0,0);return{setMask:function(i){n===i||e||(t.colorMask(i,i,i,i),n=i)},setLocked:function(t){e=t},setClear:function(e,n,a,o,s){!0===s&&(e*=o,n*=o,a*=o),i.set(e,n,a,o),!1===r.equals(i)&&(t.clearColor(e,n,a,o),r.copy(i))},reset:function(){e=!1,n=null,r.set(-1,0,0,0)}}},a=new function(){let e=!1,i=null,n=null,r=null;return{setTest:function(t){t?gt(2929):_t(2929)},setMask:function(n){i===n||e||(t.depthMask(n),i=n)},setFunc:function(e){if(n!==e){if(e)switch(e){case H:t.depthFunc(512);break;case U:t.depthFunc(519);break;case G:t.depthFunc(513);break;case V:t.depthFunc(515);break;case W:t.depthFunc(514);break;case j:t.depthFunc(518);break;case Y:t.depthFunc(516);break;case X:t.depthFunc(517);break;default:t.depthFunc(515)}else t.depthFunc(515);n=e}},setLocked:function(t){e=t},setClear:function(e){r!==e&&(t.clearDepth(e),r=e)},reset:function(){e=!1,i=null,n=null,r=null}}},u=new function(){let e=!1,i=null,n=null,r=null,a=null,o=null,s=null,l=null,u=null;return{setTest:function(t){e||(t?gt(2960):_t(2960))},setMask:function(n){i===n||e||(t.stencilMask(n),i=n)},setFunc:function(e,i,o){n===e&&r===i&&a===o||(t.stencilFunc(e,i,o),n=e,r=i,a=o)},setOp:function(e,i,n){o===e&&s===i&&l===n||(t.stencilOp(e,i,n),o=e,s=i,l=n)},setLocked:function(t){e=t},setClear:function(e){u!==e&&(t.clearStencil(e),u=e)},reset:function(){e=!1,i=null,n=null,r=null,a=null,o=null,s=null,l=null,u=null}}};let h={},c=null,d={},p=null,m=!1,_=null,v=null,Z=null,J=null,K=null,$=null,Q=null,tt=!1,et=null,it=null,nt=null,rt=null,at=null;const ot=t.getParameter(35661);let st=!1,lt=0;const ut=t.getParameter(7938);-1!==ut.indexOf("WebGL")?(lt=parseFloat(/^WebGL (\d)/.exec(ut)[1]),st=lt>=1):-1!==ut.indexOf("OpenGL ES")&&(lt=parseFloat(/^OpenGL ES (\d)/.exec(ut)[1]),st=lt>=2);let ht=null,ct={};const dt=new en(0,0,t.canvas.width,t.canvas.height),pt=new en(0,0,t.canvas.width,t.canvas.height);function mt(e,i,n){const r=new Uint8Array(4),a=t.createTexture();t.bindTexture(e,a),t.texParameteri(e,10241,9728),t.texParameteri(e,10240,9728);for(let e=0;e<n;e++)t.texImage2D(i+e,0,6408,1,1,0,6408,5121,r);return a}const ft={};function gt(e){!0!==h[e]&&(t.enable(e),h[e]=!0)}function _t(e){!1!==h[e]&&(t.disable(e),h[e]=!1)}ft[3553]=mt(3553,3553,1),ft[34067]=mt(34067,34069,6),r.setClear(0,0,0,1),a.setClear(1),u.setClear(0),gt(2929),a.setFunc(V),xt(!1),wt(s),gt(2884),yt(b);const vt={[S]:32774,[T]:32778,[k]:32779};if(n)vt[A]=32775,vt[z]=32776;else{const t=e.get("EXT_blend_minmax");null!==t&&(vt[A]=t.MIN_EXT,vt[z]=t.MAX_EXT)}const bt={[L]:0,[R]:1,[C]:768,[q]:770,[N]:776,[O]:774,[I]:772,[P]:769,[D]:771,[F]:775,[B]:773};function yt(e,i,n,r,a,o,s,l){if(e!==b){if(!1===m&&(gt(3042),m=!0),e===E)a=a||i,o=o||n,s=s||r,i===v&&a===K||(t.blendEquationSeparate(vt[i],vt[a]),v=i,K=a),n===Z&&r===J&&o===$&&s===Q||(t.blendFuncSeparate(bt[n],bt[r],bt[o],bt[s]),Z=n,J=r,$=o,Q=s),_=e,tt=null;else if(e!==_||l!==tt){if(v===S&&K===S||(t.blendEquation(32774),v=S,K=S),l)switch(e){case y:t.blendFuncSeparate(1,771,1,771);break;case x:t.blendFunc(1,1);break;case w:t.blendFuncSeparate(0,0,769,771);break;case M:t.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}else switch(e){case y:t.blendFuncSeparate(770,771,1,771);break;case x:t.blendFunc(770,1);break;case w:t.blendFunc(0,769);break;case M:t.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}Z=null,J=null,$=null,Q=null,_=e,tt=l}}else!0===m&&(_t(3042),m=!1)}function xt(e){et!==e&&(e?t.frontFace(2304):t.frontFace(2305),et=e)}function wt(e){e!==o?(gt(2884),e!==it&&(e===s?t.cullFace(1029):e===l?t.cullFace(1028):t.cullFace(1032))):_t(2884),it=e}function Mt(e,i,n){e?(gt(32823),rt===i&&at===n||(t.polygonOffset(i,n),rt=i,at=n)):_t(32823)}function Et(e){void 0===e&&(e=33984+ot-1),ht!==e&&(t.activeTexture(e),ht=e)}return{buffers:{color:r,depth:a,stencil:u},enable:gt,disable:_t,bindFramebuffer:function(e,i){null===i&&null!==c&&(i=c),d[e]!==i&&(t.bindFramebuffer(e,i),d[e]=i,n&&(36009===e&&(d[36160]=i),36160===e&&(d[36009]=i)))},bindXRFramebuffer:function(e){e!==c&&(t.bindFramebuffer(36160,e),c=e)},useProgram:function(e){return p!==e&&(t.useProgram(e),p=e,!0)},setBlending:yt,setMaterial:function(t,e){t.side===g?_t(2884):gt(2884);let i=t.side===f;e&&(i=!i),xt(i),t.blending===y&&!1===t.transparent?yt(b):yt(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha),a.setFunc(t.depthFunc),a.setTest(t.depthTest),a.setMask(t.depthWrite),r.setMask(t.colorWrite);const n=t.stencilWrite;u.setTest(n),n&&(u.setMask(t.stencilWriteMask),u.setFunc(t.stencilFunc,t.stencilRef,t.stencilFuncMask),u.setOp(t.stencilFail,t.stencilZFail,t.stencilZPass)),Mt(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits),!0===t.alphaToCoverage?gt(32926):_t(32926)},setFlipSided:xt,setCullFace:wt,setLineWidth:function(e){e!==nt&&(st&&t.lineWidth(e),nt=e)},setPolygonOffset:Mt,setScissorTest:function(t){t?gt(3089):_t(3089)},activeTexture:Et,bindTexture:function(e,i){null===ht&&Et();let n=ct[ht];void 0===n&&(n={type:void 0,texture:void 0},ct[ht]=n),n.type===e&&n.texture===i||(t.bindTexture(e,i||ft[e]),n.type=e,n.texture=i)},unbindTexture:function(){const e=ct[ht];void 0!==e&&void 0!==e.type&&(t.bindTexture(e.type,null),e.type=void 0,e.texture=void 0)},compressedTexImage2D:function(){try{t.compressedTexImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function(){try{t.texImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage3D:function(){try{t.texImage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:function(e){!1===dt.equals(e)&&(t.scissor(e.x,e.y,e.z,e.w),dt.copy(e))},viewport:function(e){!1===pt.equals(e)&&(t.viewport(e.x,e.y,e.z,e.w),pt.copy(e))},reset:function(){t.disable(3042),t.disable(2884),t.disable(2929),t.disable(32823),t.disable(3089),t.disable(2960),t.disable(32926),t.blendEquation(32774),t.blendFunc(1,0),t.blendFuncSeparate(1,0,1,0),t.colorMask(!0,!0,!0,!0),t.clearColor(0,0,0,0),t.depthMask(!0),t.depthFunc(513),t.clearDepth(1),t.stencilMask(4294967295),t.stencilFunc(519,0,4294967295),t.stencilOp(7680,7680,7680),t.clearStencil(0),t.cullFace(1029),t.frontFace(2305),t.polygonOffset(0,0),t.activeTexture(33984),t.bindFramebuffer(36160,null),!0===n&&(t.bindFramebuffer(36009,null),t.bindFramebuffer(36008,null)),t.useProgram(null),t.lineWidth(1),t.scissor(0,0,t.canvas.width,t.canvas.height),t.viewport(0,0,t.canvas.width,t.canvas.height),h={},ht=null,ct={},c=null,d={},p=null,m=!1,_=null,v=null,Z=null,J=null,K=null,$=null,Q=null,tt=!1,et=null,it=null,nt=null,rt=null,at=null,dt.set(0,0,t.canvas.width,t.canvas.height),pt.set(0,0,t.canvas.width,t.canvas.height),r.reset(),a.reset(),u.reset()}}}function Ws(t,e,i,n,r,a,o){const s=r.isWebGL2,l=r.maxTextures,u=r.maxCubemapSize,h=r.maxTextureSize,c=r.maxSamples,d=new WeakMap;let p,m=!1;try{m="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(t){}function f(t,e){return m?new OffscreenCanvas(t,e):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function g(t,e,i,n){let r=1;if((t.width>n||t.height>n)&&(r=n/Math.max(t.width,t.height)),r<1||!0===e){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){const n=e?ji:Math.floor,a=n(r*t.width),o=n(r*t.height);void 0===p&&(p=f(a,o));const s=i?f(a,o):p;return s.width=a,s.height=o,s.getContext("2d").drawImage(t,0,0,a,o),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+t.width+"x"+t.height+") to ("+a+"x"+o+")."),s}return"data"in t&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+t.width+"x"+t.height+")."),t}return t}function _(t){return Vi(t.width)&&Vi(t.height)}function v(t,e){return t.generateMipmaps&&e&&t.minFilter!==mt&&t.minFilter!==bt}function b(e,i,r,a){t.generateMipmap(e),n.get(i).__maxMipLevel=Math.log2(Math.max(r,a))}function y(i,n,r){if(!1===s)return n;if(null!==i){if(void 0!==t[i])return t[i];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+i+"'")}let a=n;return 6403===n&&(5126===r&&(a=33326),5131===r&&(a=33325),5121===r&&(a=33321)),6407===n&&(5126===r&&(a=34837),5131===r&&(a=34843),5121===r&&(a=32849)),6408===n&&(5126===r&&(a=34836),5131===r&&(a=34842),5121===r&&(a=32856)),33325!==a&&33326!==a&&34842!==a&&34836!==a||e.get("EXT_color_buffer_float"),a}function x(t){return t===mt||t===ft||t===_t?9728:9729}function w(e){const i=e.target;i.removeEventListener("dispose",w),function(e){const i=n.get(e);void 0!==i.__webglInit&&(t.deleteTexture(i.__webglTexture),n.remove(e))}(i),i.isVideoTexture&&d.delete(i),o.memory.textures--}function M(e){const i=e.target;i.removeEventListener("dispose",M),function(e){const i=e.texture,r=n.get(e),a=n.get(i);if(e){if(void 0!==a.__webglTexture&&t.deleteTexture(a.__webglTexture),e.depthTexture&&e.depthTexture.dispose(),e.isWebGLCubeRenderTarget)for(let e=0;e<6;e++)t.deleteFramebuffer(r.__webglFramebuffer[e]),r.__webglDepthbuffer&&t.deleteRenderbuffer(r.__webglDepthbuffer[e]);else t.deleteFramebuffer(r.__webglFramebuffer),r.__webglDepthbuffer&&t.deleteRenderbuffer(r.__webglDepthbuffer),r.__webglMultisampledFramebuffer&&t.deleteFramebuffer(r.__webglMultisampledFramebuffer),r.__webglColorRenderbuffer&&t.deleteRenderbuffer(r.__webglColorRenderbuffer),r.__webglDepthRenderbuffer&&t.deleteRenderbuffer(r.__webglDepthRenderbuffer);n.remove(i),n.remove(e)}}(i),o.memory.textures--}let E=0;function S(t,e){const r=n.get(t);if(t.isVideoTexture&&function(t){const e=o.render.frame;d.get(t)!==e&&(d.set(t,e),t.update())}(t),t.version>0&&r.__version!==t.version){const i=t.image;if(void 0===i)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==i.complete)return void R(r,t,e);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}i.activeTexture(33984+e),i.bindTexture(3553,r.__webglTexture)}function T(e,r){const o=n.get(e);e.version>0&&o.__version!==e.version?function(e,n,r){if(6!==n.image.length)return;L(e,n),i.activeTexture(33984+r),i.bindTexture(34067,e.__webglTexture),t.pixelStorei(37440,n.flipY),t.pixelStorei(37441,n.premultiplyAlpha),t.pixelStorei(3317,n.unpackAlignment),t.pixelStorei(37443,0);const o=n&&(n.isCompressedTexture||n.image[0].isCompressedTexture),l=n.image[0]&&n.image[0].isDataTexture,h=[];for(let t=0;t<6;t++)h[t]=o||l?l?n.image[t].image:n.image[t]:g(n.image[t],!1,!0,u);const c=h[0],d=_(c)||s,p=a.convert(n.format),m=a.convert(n.type),f=y(n.internalFormat,p,m);let x;if(z(34067,n,d),o){for(let t=0;t<6;t++){x=h[t].mipmaps;for(let e=0;e<x.length;e++){const r=x[e];n.format!==Ot&&n.format!==Bt?null!==p?i.compressedTexImage2D(34069+t,e,f,r.width,r.height,0,r.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):i.texImage2D(34069+t,e,f,r.width,r.height,0,p,m,r.data)}}e.__maxMipLevel=x.length-1}else{x=n.mipmaps;for(let t=0;t<6;t++)if(l){i.texImage2D(34069+t,0,f,h[t].width,h[t].height,0,p,m,h[t].data);for(let e=0;e<x.length;e++){const n=x[e].image[t].image;i.texImage2D(34069+t,e+1,f,n.width,n.height,0,p,m,n.data)}}else{i.texImage2D(34069+t,0,f,p,m,h[t]);for(let e=0;e<x.length;e++){const n=x[e];i.texImage2D(34069+t,e+1,f,p,m,n.image[t])}}e.__maxMipLevel=x.length}v(n,d)&&b(34067,n,c.width,c.height),e.__version=n.version,n.onUpdate&&n.onUpdate(n)}(o,e,r):(i.activeTexture(33984+r),i.bindTexture(34067,o.__webglTexture))}const k={[ct]:10497,[dt]:33071,[pt]:33648},A={[mt]:9728,[ft]:9984,[_t]:9986,[bt]:9729,[yt]:9985,[wt]:9987};function z(i,a,o){if(o?(t.texParameteri(i,10242,k[a.wrapS]),t.texParameteri(i,10243,k[a.wrapT]),32879!==i&&35866!==i||t.texParameteri(i,32882,k[a.wrapR]),t.texParameteri(i,10240,A[a.magFilter]),t.texParameteri(i,10241,A[a.minFilter])):(t.texParameteri(i,10242,33071),t.texParameteri(i,10243,33071),32879!==i&&35866!==i||t.texParameteri(i,32882,33071),a.wrapS===dt&&a.wrapT===dt||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),t.texParameteri(i,10240,x(a.magFilter)),t.texParameteri(i,10241,x(a.minFilter)),a.minFilter!==mt&&a.minFilter!==bt&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===e.has("EXT_texture_filter_anisotropic")){const o=e.get("EXT_texture_filter_anisotropic");if(a.type===Lt&&!1===e.has("OES_texture_float_linear"))return;if(!1===s&&a.type===Rt&&!1===e.has("OES_texture_half_float_linear"))return;(a.anisotropy>1||n.get(a).__currentAnisotropy)&&(t.texParameterf(i,o.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(a.anisotropy,r.getMaxAnisotropy())),n.get(a).__currentAnisotropy=a.anisotropy)}}function L(e,i){void 0===e.__webglInit&&(e.__webglInit=!0,i.addEventListener("dispose",w),e.__webglTexture=t.createTexture(),o.memory.textures++)}function R(e,n,r){let o=3553;n.isDataTexture2DArray&&(o=35866),n.isDataTexture3D&&(o=32879),L(e,n),i.activeTexture(33984+r),i.bindTexture(o,e.__webglTexture),t.pixelStorei(37440,n.flipY),t.pixelStorei(37441,n.premultiplyAlpha),t.pixelStorei(3317,n.unpackAlignment),t.pixelStorei(37443,0);const l=function(t){return!s&&(t.wrapS!==dt||t.wrapT!==dt||t.minFilter!==mt&&t.minFilter!==bt)}(n)&&!1===_(n.image),u=g(n.image,l,!1,h),c=_(u)||s,d=a.convert(n.format);let p,m=a.convert(n.type),f=y(n.internalFormat,d,m);z(o,n,c);const x=n.mipmaps;if(n.isDepthTexture)f=6402,s?f=n.type===Lt?36012:n.type===zt?33190:n.type===Dt?35056:33189:n.type===Lt&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),n.format===Ut&&6402===f&&n.type!==kt&&n.type!==zt&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),n.type=kt,m=a.convert(n.type)),n.format===Gt&&6402===f&&(f=34041,n.type!==Dt&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),n.type=Dt,m=a.convert(n.type))),i.texImage2D(3553,0,f,u.width,u.height,0,d,m,null);else if(n.isDataTexture)if(x.length>0&&c){for(let t=0,e=x.length;t<e;t++)p=x[t],i.texImage2D(3553,t,f,p.width,p.height,0,d,m,p.data);n.generateMipmaps=!1,e.__maxMipLevel=x.length-1}else i.texImage2D(3553,0,f,u.width,u.height,0,d,m,u.data),e.__maxMipLevel=0;else if(n.isCompressedTexture){for(let t=0,e=x.length;t<e;t++)p=x[t],n.format!==Ot&&n.format!==Bt?null!==d?i.compressedTexImage2D(3553,t,f,p.width,p.height,0,p.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):i.texImage2D(3553,t,f,p.width,p.height,0,d,m,p.data);e.__maxMipLevel=x.length-1}else if(n.isDataTexture2DArray)i.texImage3D(35866,0,f,u.width,u.height,u.depth,0,d,m,u.data),e.__maxMipLevel=0;else if(n.isDataTexture3D)i.texImage3D(32879,0,f,u.width,u.height,u.depth,0,d,m,u.data),e.__maxMipLevel=0;else if(x.length>0&&c){for(let t=0,e=x.length;t<e;t++)p=x[t],i.texImage2D(3553,t,f,d,m,p);n.generateMipmaps=!1,e.__maxMipLevel=x.length-1}else i.texImage2D(3553,0,f,d,m,u),e.__maxMipLevel=0;v(n,c)&&b(o,n,u.width,u.height),e.__version=n.version,n.onUpdate&&n.onUpdate(n)}function C(e,r,o,s){const l=r.texture,u=a.convert(l.format),h=a.convert(l.type),c=y(l.internalFormat,u,h);32879===s||35866===s?i.texImage3D(s,0,c,r.width,r.height,r.depth,0,u,h,null):i.texImage2D(s,0,c,r.width,r.height,0,u,h,null),i.bindFramebuffer(36160,e),t.framebufferTexture2D(36160,o,s,n.get(l).__webglTexture,0),i.bindFramebuffer(36160,null)}function P(e,i,n){if(t.bindRenderbuffer(36161,e),i.depthBuffer&&!i.stencilBuffer){let r=33189;if(n){const e=i.depthTexture;e&&e.isDepthTexture&&(e.type===Lt?r=36012:e.type===zt&&(r=33190));const n=q(i);t.renderbufferStorageMultisample(36161,n,r,i.width,i.height)}else t.renderbufferStorage(36161,r,i.width,i.height);t.framebufferRenderbuffer(36160,36096,36161,e)}else if(i.depthBuffer&&i.stencilBuffer){if(n){const e=q(i);t.renderbufferStorageMultisample(36161,e,35056,i.width,i.height)}else t.renderbufferStorage(36161,34041,i.width,i.height);t.framebufferRenderbuffer(36160,33306,36161,e)}else{const e=i.texture,r=a.convert(e.format),o=a.convert(e.type),s=y(e.internalFormat,r,o);if(n){const e=q(i);t.renderbufferStorageMultisample(36161,e,s,i.width,i.height)}else t.renderbufferStorage(36161,s,i.width,i.height)}t.bindRenderbuffer(36161,null)}function q(t){return s&&t.isWebGLMultisampleRenderTarget?Math.min(c,t.samples):0}let D=!1,I=!1;this.allocateTextureUnit=function(){const t=E;return t>=l&&console.warn("THREE.WebGLTextures: Trying to use "+t+" texture units while this GPU supports only "+l),E+=1,t},this.resetTextureUnits=function(){E=0},this.setTexture2D=S,this.setTexture2DArray=function(t,e){const r=n.get(t);t.version>0&&r.__version!==t.version?R(r,t,e):(i.activeTexture(33984+e),i.bindTexture(35866,r.__webglTexture))},this.setTexture3D=function(t,e){const r=n.get(t);t.version>0&&r.__version!==t.version?R(r,t,e):(i.activeTexture(33984+e),i.bindTexture(32879,r.__webglTexture))},this.setTextureCube=T,this.setupRenderTarget=function(e){const r=e.texture,l=n.get(e),u=n.get(r);e.addEventListener("dispose",M),u.__webglTexture=t.createTexture(),u.__version=r.version,o.memory.textures++;const h=!0===e.isWebGLCubeRenderTarget,c=!0===e.isWebGLMultisampleRenderTarget,d=r.isDataTexture3D||r.isDataTexture2DArray,p=_(e)||s;if(!s||r.format!==Bt||r.type!==Lt&&r.type!==Rt||(r.format=Ot,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),h){l.__webglFramebuffer=[];for(let e=0;e<6;e++)l.__webglFramebuffer[e]=t.createFramebuffer()}else if(l.__webglFramebuffer=t.createFramebuffer(),c)if(s){l.__webglMultisampledFramebuffer=t.createFramebuffer(),l.__webglColorRenderbuffer=t.createRenderbuffer(),t.bindRenderbuffer(36161,l.__webglColorRenderbuffer);const n=a.convert(r.format),o=a.convert(r.type),s=y(r.internalFormat,n,o),u=q(e);t.renderbufferStorageMultisample(36161,u,s,e.width,e.height),i.bindFramebuffer(36160,l.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(36160,36064,36161,l.__webglColorRenderbuffer),t.bindRenderbuffer(36161,null),e.depthBuffer&&(l.__webglDepthRenderbuffer=t.createRenderbuffer(),P(l.__webglDepthRenderbuffer,e,!0)),i.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(h){i.bindTexture(34067,u.__webglTexture),z(34067,r,p);for(let t=0;t<6;t++)C(l.__webglFramebuffer[t],e,36064,34069+t);v(r,p)&&b(34067,r,e.width,e.height),i.bindTexture(34067,null)}else{let t=3553;d&&(s?t=r.isDataTexture3D?32879:35866:console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.")),i.bindTexture(t,u.__webglTexture),z(t,r,p),C(l.__webglFramebuffer,e,36064,t),v(r,p)&&b(3553,r,e.width,e.height),i.bindTexture(3553,null)}e.depthBuffer&&function(e){const r=n.get(e),a=!0===e.isWebGLCubeRenderTarget;if(e.depthTexture){if(a)throw new Error("target.depthTexture not supported in Cube render targets");!function(e,r){if(r&&r.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(i.bindFramebuffer(36160,e),!r.depthTexture||!r.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");n.get(r.depthTexture).__webglTexture&&r.depthTexture.image.width===r.width&&r.depthTexture.image.height===r.height||(r.depthTexture.image.width=r.width,r.depthTexture.image.height=r.height,r.depthTexture.needsUpdate=!0),S(r.depthTexture,0);const a=n.get(r.depthTexture).__webglTexture;if(r.depthTexture.format===Ut)t.framebufferTexture2D(36160,36096,3553,a,0);else{if(r.depthTexture.format!==Gt)throw new Error("Unknown depthTexture format");t.framebufferTexture2D(36160,33306,3553,a,0)}}(r.__webglFramebuffer,e)}else if(a){r.__webglDepthbuffer=[];for(let n=0;n<6;n++)i.bindFramebuffer(36160,r.__webglFramebuffer[n]),r.__webglDepthbuffer[n]=t.createRenderbuffer(),P(r.__webglDepthbuffer[n],e,!1)}else i.bindFramebuffer(36160,r.__webglFramebuffer),r.__webglDepthbuffer=t.createRenderbuffer(),P(r.__webglDepthbuffer,e,!1);i.bindFramebuffer(36160,null)}(e)},this.updateRenderTargetMipmap=function(t){const e=t.texture;if(v(e,_(t)||s)){const r=t.isWebGLCubeRenderTarget?34067:3553,a=n.get(e).__webglTexture;i.bindTexture(r,a),b(r,e,t.width,t.height),i.bindTexture(r,null)}},this.updateMultisampleRenderTarget=function(e){if(e.isWebGLMultisampleRenderTarget)if(s){const r=e.width,a=e.height;let o=16384;e.depthBuffer&&(o|=256),e.stencilBuffer&&(o|=1024);const s=n.get(e);i.bindFramebuffer(36008,s.__webglMultisampledFramebuffer),i.bindFramebuffer(36009,s.__webglFramebuffer),t.blitFramebuffer(0,0,r,a,0,0,r,a,o,9728),i.bindFramebuffer(36008,null),i.bindFramebuffer(36009,s.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.safeSetTexture2D=function(t,e){t&&t.isWebGLRenderTarget&&(!1===D&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),D=!0),t=t.texture),S(t,e)},this.safeSetTextureCube=function(t,e){t&&t.isWebGLCubeRenderTarget&&(!1===I&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),I=!0),t=t.texture),T(t,e)}}function js(t,e,i){const n=i.isWebGL2;return{convert:function(t){let i;if(t===Et)return 5121;if(t===Ct)return 32819;if(t===Pt)return 32820;if(t===qt)return 33635;if(t===St)return 5120;if(t===Tt)return 5122;if(t===kt)return 5123;if(t===At)return 5124;if(t===zt)return 5125;if(t===Lt)return 5126;if(t===Rt)return n?5131:(i=e.get("OES_texture_half_float"),null!==i?i.HALF_FLOAT_OES:null);if(t===It)return 6406;if(t===Bt)return 6407;if(t===Ot)return 6408;if(t===Ft)return 6409;if(t===Nt)return 6410;if(t===Ut)return 6402;if(t===Gt)return 34041;if(t===Vt)return 6403;if(t===Wt)return 36244;if(t===jt)return 33319;if(t===Yt)return 33320;if(t===Xt)return 36248;if(t===Zt)return 36249;if(t===Jt||t===Kt||t===$t||t===Qt){if(i=e.get("WEBGL_compressed_texture_s3tc"),null===i)return null;if(t===Jt)return i.COMPRESSED_RGB_S3TC_DXT1_EXT;if(t===Kt)return i.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(t===$t)return i.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(t===Qt)return i.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(t===te||t===ee||t===ie||t===ne){if(i=e.get("WEBGL_compressed_texture_pvrtc"),null===i)return null;if(t===te)return i.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(t===ee)return i.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(t===ie)return i.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(t===ne)return i.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(t===re)return i=e.get("WEBGL_compressed_texture_etc1"),null!==i?i.COMPRESSED_RGB_ETC1_WEBGL:null;if((t===ae||t===oe)&&(i=e.get("WEBGL_compressed_texture_etc"),null!==i)){if(t===ae)return i.COMPRESSED_RGB8_ETC2;if(t===oe)return i.COMPRESSED_RGBA8_ETC2_EAC}return t===se||t===le||t===ue||t===he||t===ce||t===de||t===pe||t===me||t===fe||t===ge||t===_e||t===ve||t===be||t===ye||t===we||t===Me||t===Ee||t===Se||t===Te||t===ke||t===Ae||t===ze||t===Le||t===Re||t===Ce||t===Pe||t===qe||t===De?(i=e.get("WEBGL_compressed_texture_astc"),null!==i?t:null):t===xe?(i=e.get("EXT_texture_compression_bptc"),null!==i?t:null):t===Dt?n?34042:(i=e.get("WEBGL_depth_texture"),null!==i?i.UNSIGNED_INT_24_8_WEBGL:null):void 0}}}Us.prototype.isMeshDistanceMaterial=!0;class Ys extends za{constructor(t=[]){super(),this.cameras=t}}Ys.prototype.isArrayCamera=!0;class Xs extends lr{constructor(){super(),this.type="Group"}}Xs.prototype.isGroup=!0;const Zs={type:"move"};class Js{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new Xs,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new Xs,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new on,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new on),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new Xs,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new on,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new on),this._grip}dispatchEvent(t){return null!==this._targetRay&&this._targetRay.dispatchEvent(t),null!==this._grip&&this._grip.dispatchEvent(t),null!==this._hand&&this._hand.dispatchEvent(t),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(t,e,i){let n=null,r=null,a=null;const o=this._targetRay,s=this._grip,l=this._hand;if(t&&"visible-blurred"!==e.session.visibilityState)if(null!==o&&(n=e.getPose(t.targetRaySpace,i),null!==n&&(o.matrix.fromArray(n.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),n.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(n.linearVelocity)):o.hasLinearVelocity=!1,n.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(n.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(Zs))),l&&t.hand){a=!0;for(const n of t.hand.values()){const t=e.getJointPose(n,i);if(void 0===l.joints[n.jointName]){const t=new Xs;t.matrixAutoUpdate=!1,t.visible=!1,l.joints[n.jointName]=t,l.add(t)}const r=l.joints[n.jointName];null!==t&&(r.matrix.fromArray(t.transform.matrix),r.matrix.decompose(r.position,r.rotation,r.scale),r.jointRadius=t.radius),r.visible=null!==t}const n=l.joints["index-finger-tip"],r=l.joints["thumb-tip"],o=n.position.distanceTo(r.position),s=.02,u=.005;l.inputState.pinching&&o>s+u?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!l.inputState.pinching&&o<=s-u&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else null!==s&&t.gripSpace&&(r=e.getPose(t.gripSpace,i),null!==r&&(s.matrix.fromArray(r.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),r.linearVelocity?(s.hasLinearVelocity=!0,s.linearVelocity.copy(r.linearVelocity)):s.hasLinearVelocity=!1,r.angularVelocity?(s.hasAngularVelocity=!0,s.angularVelocity.copy(r.angularVelocity)):s.hasAngularVelocity=!1));return null!==o&&(o.visible=null!==n),null!==s&&(s.visible=null!==r),null!==l&&(l.visible=null!==a),this}}class Ks extends Di{constructor(t,e){super();const i=this,n=t.state;let r=null,a=1,o=null,s="local-floor",l=null;const u=[],h=new Map,c=new za;c.layers.enable(1),c.viewport=new en;const d=new za;d.layers.enable(2),d.viewport=new en;const p=[c,d],m=new Ys;m.layers.enable(1),m.layers.enable(2);let f=null,g=null;function _(t){const e=h.get(t.inputSource);e&&e.dispatchEvent({type:t.type,data:t.inputSource})}function v(){h.forEach((function(t,e){t.disconnect(e)})),h.clear(),f=null,g=null,n.bindXRFramebuffer(null),t.setRenderTarget(t.getRenderTarget()),E.stop(),i.isPresenting=!1,i.dispatchEvent({type:"sessionend"})}function b(t){const e=r.inputSources;for(let t=0;t<u.length;t++)h.set(e[t],u[t]);for(let e=0;e<t.removed.length;e++){const i=t.removed[e],n=h.get(i);n&&(n.dispatchEvent({type:"disconnected",data:i}),h.delete(i))}for(let e=0;e<t.added.length;e++){const i=t.added[e],n=h.get(i);n&&n.dispatchEvent({type:"connected",data:i})}}this.enabled=!1,this.isPresenting=!1,this.getController=function(t){let e=u[t];return void 0===e&&(e=new Js,u[t]=e),e.getTargetRaySpace()},this.getControllerGrip=function(t){let e=u[t];return void 0===e&&(e=new Js,u[t]=e),e.getGripSpace()},this.getHand=function(t){let e=u[t];return void 0===e&&(e=new Js,u[t]=e),e.getHandSpace()},this.setFramebufferScaleFactor=function(t){a=t,!0===i.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(t){s=t,!0===i.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return o},this.getSession=function(){return r},this.setSession=async function(t){if(r=t,null!==r){r.addEventListener("select",_),r.addEventListener("selectstart",_),r.addEventListener("selectend",_),r.addEventListener("squeeze",_),r.addEventListener("squeezestart",_),r.addEventListener("squeezeend",_),r.addEventListener("end",v),r.addEventListener("inputsourceschange",b);const t=e.getContextAttributes();!0!==t.xrCompatible&&await e.makeXRCompatible();const n={antialias:t.antialias,alpha:t.alpha,depth:t.depth,stencil:t.stencil,framebufferScaleFactor:a},l=new XRWebGLLayer(r,e,n);r.updateRenderState({baseLayer:l}),o=await r.requestReferenceSpace(s),E.setContext(r),E.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}};const y=new on,x=new on;function w(t,e){null===e?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(e.matrixWorld,t.matrix),t.matrixWorldInverse.copy(t.matrixWorld).invert()}this.getCamera=function(t){m.near=d.near=c.near=t.near,m.far=d.far=c.far=t.far,f===m.near&&g===m.far||(r.updateRenderState({depthNear:m.near,depthFar:m.far}),f=m.near,g=m.far);const e=t.parent,i=m.cameras;w(m,e);for(let t=0;t<i.length;t++)w(i[t],e);t.matrixWorld.copy(m.matrixWorld),t.matrix.copy(m.matrix),t.matrix.decompose(t.position,t.quaternion,t.scale);const n=t.children;for(let t=0,e=n.length;t<e;t++)n[t].updateMatrixWorld(!0);return 2===i.length?function(t,e,i){y.setFromMatrixPosition(e.matrixWorld),x.setFromMatrixPosition(i.matrixWorld);const n=y.distanceTo(x),r=e.projectionMatrix.elements,a=i.projectionMatrix.elements,o=r[14]/(r[10]-1),s=r[14]/(r[10]+1),l=(r[9]+1)/r[5],u=(r[9]-1)/r[5],h=(r[8]-1)/r[0],c=(a[8]+1)/a[0],d=o*h,p=o*c,m=n/(-h+c),f=m*-h;e.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(f),t.translateZ(m),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.copy(t.matrixWorld).invert();const g=o+m,_=s+m,v=d-f,b=p+(n-f),w=l*s/_*g,M=u*s/_*g;t.projectionMatrix.makePerspective(v,b,w,M,g,_)}(m,c,d):m.projectionMatrix.copy(c.projectionMatrix),m};let M=null;const E=new Oa;E.setAnimationLoop((function(t,e){if(l=e.getViewerPose(o),null!==l){const t=l.views,e=r.renderState.baseLayer;n.bindXRFramebuffer(e.framebuffer);let i=!1;t.length!==m.cameras.length&&(m.cameras.length=0,i=!0);for(let n=0;n<t.length;n++){const r=t[n],a=e.getViewport(r),o=p[n];o.matrix.fromArray(r.transform.matrix),o.projectionMatrix.fromArray(r.projectionMatrix),o.viewport.set(a.x,a.y,a.width,a.height),0===n&&m.matrix.copy(o.matrix),!0===i&&m.cameras.push(o)}}const i=r.inputSources;for(let t=0;t<u.length;t++){const n=u[t],r=i[t];n.update(r,e,o)}M&&M(t,e)})),this.setAnimationLoop=function(t){M=t},this.dispose=function(){}}}function $s(t){function e(e,i){e.opacity.value=i.opacity,i.color&&e.diffuse.value.copy(i.color),i.emissive&&e.emissive.value.copy(i.emissive).multiplyScalar(i.emissiveIntensity),i.map&&(e.map.value=i.map),i.alphaMap&&(e.alphaMap.value=i.alphaMap),i.specularMap&&(e.specularMap.value=i.specularMap);const n=t.get(i).envMap;if(n){e.envMap.value=n,e.flipEnvMap.value=n.isCubeTexture&&n._needsFlipEnvMap?-1:1,e.reflectivity.value=i.reflectivity,e.refractionRatio.value=i.refractionRatio;const r=t.get(n).__maxMipLevel;void 0!==r&&(e.maxMipLevel.value=r)}let r,a;i.lightMap&&(e.lightMap.value=i.lightMap,e.lightMapIntensity.value=i.lightMapIntensity),i.aoMap&&(e.aoMap.value=i.aoMap,e.aoMapIntensity.value=i.aoMapIntensity),i.map?r=i.map:i.specularMap?r=i.specularMap:i.displacementMap?r=i.displacementMap:i.normalMap?r=i.normalMap:i.bumpMap?r=i.bumpMap:i.roughnessMap?r=i.roughnessMap:i.metalnessMap?r=i.metalnessMap:i.alphaMap?r=i.alphaMap:i.emissiveMap?r=i.emissiveMap:i.clearcoatMap?r=i.clearcoatMap:i.clearcoatNormalMap?r=i.clearcoatNormalMap:i.clearcoatRoughnessMap&&(r=i.clearcoatRoughnessMap),void 0!==r&&(r.isWebGLRenderTarget&&(r=r.texture),!0===r.matrixAutoUpdate&&r.updateMatrix(),e.uvTransform.value.copy(r.matrix)),i.aoMap?a=i.aoMap:i.lightMap&&(a=i.lightMap),void 0!==a&&(a.isWebGLRenderTarget&&(a=a.texture),!0===a.matrixAutoUpdate&&a.updateMatrix(),e.uv2Transform.value.copy(a.matrix))}function i(e,i){e.roughness.value=i.roughness,e.metalness.value=i.metalness,i.roughnessMap&&(e.roughnessMap.value=i.roughnessMap),i.metalnessMap&&(e.metalnessMap.value=i.metalnessMap),i.emissiveMap&&(e.emissiveMap.value=i.emissiveMap),i.bumpMap&&(e.bumpMap.value=i.bumpMap,e.bumpScale.value=i.bumpScale,i.side===f&&(e.bumpScale.value*=-1)),i.normalMap&&(e.normalMap.value=i.normalMap,e.normalScale.value.copy(i.normalScale),i.side===f&&e.normalScale.value.negate()),i.displacementMap&&(e.displacementMap.value=i.displacementMap,e.displacementScale.value=i.displacementScale,e.displacementBias.value=i.displacementBias),t.get(i).envMap&&(e.envMapIntensity.value=i.envMapIntensity)}return{refreshFogUniforms:function(t,e){t.fogColor.value.copy(e.color),e.isFog?(t.fogNear.value=e.near,t.fogFar.value=e.far):e.isFogExp2&&(t.fogDensity.value=e.density)},refreshMaterialUniforms:function(t,n,r,a){n.isMeshBasicMaterial?e(t,n):n.isMeshLambertMaterial?(e(t,n),function(t,e){e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap)}(t,n)):n.isMeshToonMaterial?(e(t,n),function(t,e){e.gradientMap&&(t.gradientMap.value=e.gradientMap),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===f&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===f&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,n)):n.isMeshPhongMaterial?(e(t,n),function(t,e){t.specular.value.copy(e.specular),t.shininess.value=Math.max(e.shininess,1e-4),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===f&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===f&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,n)):n.isMeshStandardMaterial?(e(t,n),n.isMeshPhysicalMaterial?function(t,e){i(t,e),t.reflectivity.value=e.reflectivity,t.clearcoat.value=e.clearcoat,t.clearcoatRoughness.value=e.clearcoatRoughness,e.sheen&&t.sheen.value.copy(e.sheen),e.clearcoatMap&&(t.clearcoatMap.value=e.clearcoatMap),e.clearcoatRoughnessMap&&(t.clearcoatRoughnessMap.value=e.clearcoatRoughnessMap),e.clearcoatNormalMap&&(t.clearcoatNormalScale.value.copy(e.clearcoatNormalScale),t.clearcoatNormalMap.value=e.clearcoatNormalMap,e.side===f&&t.clearcoatNormalScale.value.negate()),t.transmission.value=e.transmission,e.transmissionMap&&(t.transmissionMap.value=e.transmissionMap)}(t,n):i(t,n)):n.isMeshMatcapMaterial?(e(t,n),function(t,e){e.matcap&&(t.matcap.value=e.matcap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===f&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===f&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,n)):n.isMeshDepthMaterial?(e(t,n),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,n)):n.isMeshDistanceMaterial?(e(t,n),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias),t.referencePosition.value.copy(e.referencePosition),t.nearDistance.value=e.nearDistance,t.farDistance.value=e.farDistance}(t,n)):n.isMeshNormalMaterial?(e(t,n),function(t,e){e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===f&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===f&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,n)):n.isLineBasicMaterial?(function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity}(t,n),n.isLineDashedMaterial&&function(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}(t,n)):n.isPointsMaterial?function(t,e,i,n){let r;t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.size.value=e.size*i,t.scale.value=.5*n,e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap),e.map?r=e.map:e.alphaMap&&(r=e.alphaMap),void 0!==r&&(!0===r.matrixAutoUpdate&&r.updateMatrix(),t.uvTransform.value.copy(r.matrix))}(t,n,r,a):n.isSpriteMaterial?function(t,e){let i;t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.rotation.value=e.rotation,e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap),e.map?i=e.map:e.alphaMap&&(i=e.alphaMap),void 0!==i&&(!0===i.matrixAutoUpdate&&i.updateMatrix(),t.uvTransform.value.copy(i.matrix))}(t,n):n.isShadowMaterial?(t.color.value.copy(n.color),t.opacity.value=n.opacity):n.isShaderMaterial&&(n.uniformsNeedUpdate=!1)}}}function Qs(t){const e=void 0!==(t=t||{}).canvas?t.canvas:function(){const t=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return t.style.display="block",t}(),i=void 0!==t.context?t.context:null,n=void 0!==t.alpha&&t.alpha,r=void 0===t.depth||t.depth,a=void 0===t.stencil||t.stencil,o=void 0!==t.antialias&&t.antialias,s=void 0===t.premultipliedAlpha||t.premultipliedAlpha,l=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,u=void 0!==t.powerPreference?t.powerPreference:"default",h=void 0!==t.failIfMajorPerformanceCaveat&&t.failIfMajorPerformanceCaveat;let c=null,d=null;const p=[],m=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=Je,this.physicallyCorrectLights=!1,this.toneMapping=$,this.toneMappingExposure=1;const f=this;let g=!1,_=0,v=0,b=null,y=-1,x=null;const w=new en,M=new en;let E=null,S=e.width,T=e.height,k=1,A=null,z=null;const L=new en(0,0,S,T),R=new en(0,0,S,T);let C=!1;const P=new Ba;let q=!1,D=!1;const I=new Bn,B=new on,O={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function F(){return null===b?k:1}let N,H,U,G,V,W,j,Y,X,Z,J,K,Q,tt,et,it,nt,rt,at,ot,st,lt,ut=i;function ht(t,i){for(let n=0;n<t.length;n++){const r=t[n],a=e.getContext(r,i);if(null!==a)return a}return null}try{const t={alpha:n,depth:r,stencil:a,antialias:o,premultipliedAlpha:s,preserveDrawingBuffer:l,powerPreference:u,failIfMajorPerformanceCaveat:h};if(e.addEventListener("webglcontextlost",pt,!1),e.addEventListener("webglcontextrestored",mt,!1),null===ut){const e=["webgl2","webgl","experimental-webgl"];if(!0===f.isWebGL1Renderer&&e.shift(),ut=ht(e,t),null===ut)throw ht(e)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===ut.getShaderPrecisionFormat&&(ut.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(t){throw console.error("THREE.WebGLRenderer: "+t.message),t}function ct(){N=new Ja(ut),H=new Ya(ut,N,t),N.init(H),st=new js(ut,N,H),U=new Vs(ut,N,H),G=new Qa(ut),V=new Ls,W=new Ws(ut,N,U,V,H,st,G),j=new Za(f),Y=new Fa(ut,H),lt=new Wa(ut,N,Y,H),X=new Ka(ut,Y,G,lt),Z=new no(ut,X,Y,G),rt=new io(ut),et=new Xa(V),J=new zs(f,j,N,H,lt,et),K=new $s(V),Q=new qs(V),tt=new Ns(N,H),nt=new Va(f,j,U,Z,s),it=new Gs(f,Z,H),at=new ja(ut,N,G,H),ot=new $a(ut,N,G,H),G.programs=J.programs,f.capabilities=H,f.extensions=N,f.properties=V,f.renderLists=Q,f.shadowMap=it,f.state=U,f.info=G}ct();const dt=new Ks(f,ut);function pt(t){t.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),g=!0}function mt(){console.log("THREE.WebGLRenderer: Context Restored."),g=!1;const t=G.autoReset,e=it.enabled,i=it.autoUpdate,n=it.needsUpdate,r=it.type;ct(),G.autoReset=t,it.enabled=e,it.autoUpdate=i,it.needsUpdate=n,it.type=r}function ft(t){const e=t.target;e.removeEventListener("dispose",ft),function(t){(function(t){const e=V.get(t).programs;void 0!==e&&e.forEach((function(t){J.releaseProgram(t)}))})(t),V.remove(t)}(e)}this.xr=dt,this.getContext=function(){return ut},this.getContextAttributes=function(){return ut.getContextAttributes()},this.forceContextLoss=function(){const t=N.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){const t=N.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return k},this.setPixelRatio=function(t){void 0!==t&&(k=t,this.setSize(S,T,!1))},this.getSize=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),t=new Xi),t.set(S,T)},this.setSize=function(t,i,n){dt.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(S=t,T=i,e.width=Math.floor(t*k),e.height=Math.floor(i*k),!1!==n&&(e.style.width=t+"px",e.style.height=i+"px"),this.setViewport(0,0,t,i))},this.getDrawingBufferSize=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),t=new Xi),t.set(S*k,T*k).floor()},this.setDrawingBufferSize=function(t,i,n){S=t,T=i,k=n,e.width=Math.floor(t*n),e.height=Math.floor(i*n),this.setViewport(0,0,t,i)},this.getCurrentViewport=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),t=new en),t.copy(w)},this.getViewport=function(t){return t.copy(L)},this.setViewport=function(t,e,i,n){t.isVector4?L.set(t.x,t.y,t.z,t.w):L.set(t,e,i,n),U.viewport(w.copy(L).multiplyScalar(k).floor())},this.getScissor=function(t){return t.copy(R)},this.setScissor=function(t,e,i,n){t.isVector4?R.set(t.x,t.y,t.z,t.w):R.set(t,e,i,n),U.scissor(M.copy(R).multiplyScalar(k).floor())},this.getScissorTest=function(){return C},this.setScissorTest=function(t){U.setScissorTest(C=t)},this.setOpaqueSort=function(t){A=t},this.setTransparentSort=function(t){z=t},this.getClearColor=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getClearColor() now requires a Color as an argument"),t=new Cr),t.copy(nt.getClearColor())},this.setClearColor=function(){nt.setClearColor.apply(nt,arguments)},this.getClearAlpha=function(){return nt.getClearAlpha()},this.setClearAlpha=function(){nt.setClearAlpha.apply(nt,arguments)},this.clear=function(t,e,i){let n=0;(void 0===t||t)&&(n|=16384),(void 0===e||e)&&(n|=256),(void 0===i||i)&&(n|=1024),ut.clear(n)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",pt,!1),e.removeEventListener("webglcontextrestored",mt,!1),Q.dispose(),tt.dispose(),V.dispose(),j.dispose(),Z.dispose(),lt.dispose(),dt.dispose(),dt.removeEventListener("sessionstart",_t),dt.removeEventListener("sessionend",vt),bt.stop()},this.renderBufferImmediate=function(t,e){lt.initAttributes();const i=V.get(t);t.hasPositions&&!i.position&&(i.position=ut.createBuffer()),t.hasNormals&&!i.normal&&(i.normal=ut.createBuffer()),t.hasUvs&&!i.uv&&(i.uv=ut.createBuffer()),t.hasColors&&!i.color&&(i.color=ut.createBuffer());const n=e.getAttributes();t.hasPositions&&(ut.bindBuffer(34962,i.position),ut.bufferData(34962,t.positionArray,35048),lt.enableAttribute(n.position),ut.vertexAttribPointer(n.position,3,5126,!1,0,0)),t.hasNormals&&(ut.bindBuffer(34962,i.normal),ut.bufferData(34962,t.normalArray,35048),lt.enableAttribute(n.normal),ut.vertexAttribPointer(n.normal,3,5126,!1,0,0)),t.hasUvs&&(ut.bindBuffer(34962,i.uv),ut.bufferData(34962,t.uvArray,35048),lt.enableAttribute(n.uv),ut.vertexAttribPointer(n.uv,2,5126,!1,0,0)),t.hasColors&&(ut.bindBuffer(34962,i.color),ut.bufferData(34962,t.colorArray,35048),lt.enableAttribute(n.color),ut.vertexAttribPointer(n.color,3,5126,!1,0,0)),lt.disableUnusedAttributes(),ut.drawArrays(4,0,t.count),t.count=0},this.renderBufferDirect=function(t,e,i,n,r,a){null===e&&(e=O);const o=r.isMesh&&r.matrixWorld.determinant()<0,s=Tt(t,e,n,r);U.setMaterial(n,o);let l=i.index;const u=i.attributes.position;if(null===l){if(void 0===u||0===u.count)return}else if(0===l.count)return;let h,c=1;!0===n.wireframe&&(l=X.getWireframeAttribute(i),c=2),(n.morphTargets||n.morphNormals)&&rt.update(r,i,n,s),lt.setup(r,n,s,i,l);let d=at;null!==l&&(h=Y.get(l),d=ot,d.setIndex(h));const p=null!==l?l.count:u.count,m=i.drawRange.start*c,f=i.drawRange.count*c,g=null!==a?a.start*c:0,_=null!==a?a.count*c:1/0,v=Math.max(m,g),b=Math.min(p,m+f,g+_)-1,y=Math.max(0,b-v+1);if(0!==y){if(r.isMesh)!0===n.wireframe?(U.setLineWidth(n.wireframeLinewidth*F()),d.setMode(1)):d.setMode(4);else if(r.isLine){let t=n.linewidth;void 0===t&&(t=1),U.setLineWidth(t*F()),r.isLineSegments?d.setMode(1):r.isLineLoop?d.setMode(2):d.setMode(3)}else r.isPoints?d.setMode(0):r.isSprite&&d.setMode(4);if(r.isInstancedMesh)d.renderInstances(v,y,r.count);else if(i.isInstancedBufferGeometry){const t=Math.min(i.instanceCount,i._maxInstanceCount);d.renderInstances(v,y,t)}else d.render(v,y)}},this.compile=function(t,e){d=tt.get(t),d.init(),t.traverseVisible((function(t){t.isLight&&t.layers.test(e.layers)&&(d.pushLight(t),t.castShadow&&d.pushShadow(t))})),d.setupLights(),t.traverse((function(e){const i=e.material;if(i)if(Array.isArray(i))for(let n=0;n<i.length;n++)Mt(i[n],t,e);else Mt(i,t,e)}))};let gt=null;function _t(){bt.stop()}function vt(){bt.start()}const bt=new Oa;function yt(t,e,i,n){if(!1===t.visible)return;if(t.layers.test(e.layers))if(t.isGroup)i=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(e);else if(t.isLight)d.pushLight(t),t.castShadow&&d.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||P.intersectsSprite(t)){n&&B.setFromMatrixPosition(t.matrixWorld).applyMatrix4(I);const e=Z.update(t),r=t.material;r.visible&&c.push(t,e,r,i,B.z,null)}}else if(t.isImmediateRenderObject)n&&B.setFromMatrixPosition(t.matrixWorld).applyMatrix4(I),c.push(t,null,t.material,i,B.z,null);else if((t.isMesh||t.isLine||t.isPoints)&&(t.isSkinnedMesh&&t.skeleton.frame!==G.render.frame&&(t.skeleton.update(),t.skeleton.frame=G.render.frame),!t.frustumCulled||P.intersectsObject(t))){n&&B.setFromMatrixPosition(t.matrixWorld).applyMatrix4(I);const e=Z.update(t),r=t.material;if(Array.isArray(r)){const n=e.groups;for(let a=0,o=n.length;a<o;a++){const o=n[a],s=r[o.materialIndex];s&&s.visible&&c.push(t,e,s,i,B.z,o)}}else r.visible&&c.push(t,e,r,i,B.z,null)}const r=t.children;for(let t=0,a=r.length;t<a;t++)yt(r[t],e,i,n)}function xt(t,e,i){const n=!0===e.isScene?e.overrideMaterial:null;for(let r=0,a=t.length;r<a;r++){const a=t[r],o=a.object,s=a.geometry,l=null===n?a.material:n,u=a.group;if(i.isArrayCamera){const t=i.cameras;for(let i=0,n=t.length;i<n;i++){const n=t[i];o.layers.test(n.layers)&&(U.viewport(w.copy(n.viewport)),d.setupLightsView(n),wt(o,e,n,s,l,u))}}else wt(o,e,i,s,l,u)}}function wt(t,e,i,n,r,a){if(t.onBeforeRender(f,e,i,n,r,a),t.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),t.isImmediateRenderObject){const n=Tt(i,e,r,t);U.setMaterial(r),lt.reset(),function(t,e){t.render((function(t){f.renderBufferImmediate(t,e)}))}(t,n)}else f.renderBufferDirect(i,e,n,r,t,a);t.onAfterRender(f,e,i,n,r,a)}function Mt(t,e,i){!0!==e.isScene&&(e=O);const n=V.get(t),r=d.state.lights,a=d.state.shadowsArray,o=r.state.version,s=J.getParameters(t,r.state,a,e,i),l=J.getProgramCacheKey(s);let u=n.programs;n.environment=t.isMeshStandardMaterial?e.environment:null,n.fog=e.fog,n.envMap=j.get(t.envMap||n.environment),void 0===u&&(t.addEventListener("dispose",ft),u=new Map,n.programs=u);let h=u.get(l);if(void 0!==h){if(n.currentProgram===h&&n.lightsStateVersion===o)return St(t,s),h}else s.uniforms=J.getUniforms(t),t.onBuild(s,f),t.onBeforeCompile(s,f),h=J.acquireProgram(s,l),u.set(l,h),n.uniforms=s.uniforms;const c=n.uniforms;(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(c.clippingPlanes=et.uniform),St(t,s),n.needsLights=function(t){return t.isMeshLambertMaterial||t.isMeshToonMaterial||t.isMeshPhongMaterial||t.isMeshStandardMaterial||t.isShadowMaterial||t.isShaderMaterial&&!0===t.lights}(t),n.lightsStateVersion=o,n.needsLights&&(c.ambientLightColor.value=r.state.ambient,c.lightProbe.value=r.state.probe,c.directionalLights.value=r.state.directional,c.directionalLightShadows.value=r.state.directionalShadow,c.spotLights.value=r.state.spot,c.spotLightShadows.value=r.state.spotShadow,c.rectAreaLights.value=r.state.rectArea,c.ltc_1.value=r.state.rectAreaLTC1,c.ltc_2.value=r.state.rectAreaLTC2,c.pointLights.value=r.state.point,c.pointLightShadows.value=r.state.pointShadow,c.hemisphereLights.value=r.state.hemi,c.directionalShadowMap.value=r.state.directionalShadowMap,c.directionalShadowMatrix.value=r.state.directionalShadowMatrix,c.spotShadowMap.value=r.state.spotShadowMap,c.spotShadowMatrix.value=r.state.spotShadowMatrix,c.pointShadowMap.value=r.state.pointShadowMap,c.pointShadowMatrix.value=r.state.pointShadowMatrix);const p=h.getUniforms(),m=ls.seqWithValue(p.seq,c);return n.currentProgram=h,n.uniformsList=m,h}function St(t,e){const i=V.get(t);i.outputEncoding=e.outputEncoding,i.instancing=e.instancing,i.numClippingPlanes=e.numClippingPlanes,i.numIntersection=e.numClipIntersection,i.vertexAlphas=e.vertexAlphas}function Tt(t,e,i,n){!0!==e.isScene&&(e=O),W.resetTextureUnits();const r=e.fog,a=i.isMeshStandardMaterial?e.environment:null,o=null===b?f.outputEncoding:b.texture.encoding,s=j.get(i.envMap||a),l=!0===i.vertexColors&&n.geometry&&n.geometry.attributes.color&&4===n.geometry.attributes.color.itemSize,u=V.get(i),h=d.state.lights;if(!0===q&&(!0===D||t!==x)){const e=t===x&&i.id===y;et.setState(i,t,e)}let c=!1;i.version===u.__version?u.needsLights&&u.lightsStateVersion!==h.state.version||u.outputEncoding!==o||n.isInstancedMesh&&!1===u.instancing?c=!0:n.isInstancedMesh||!0!==u.instancing?u.envMap!==s||i.fog&&u.fog!==r?c=!0:void 0===u.numClippingPlanes||u.numClippingPlanes===et.numPlanes&&u.numIntersection===et.numIntersection?u.vertexAlphas!==l&&(c=!0):c=!0:c=!0:(c=!0,u.__version=i.version);let p=u.currentProgram;!0===c&&(p=Mt(i,e,n));let m=!1,g=!1,_=!1;const v=p.getUniforms(),w=u.uniforms;if(U.useProgram(p.program)&&(m=!0,g=!0,_=!0),i.id!==y&&(y=i.id,g=!0),m||x!==t){if(v.setValue(ut,"projectionMatrix",t.projectionMatrix),H.logarithmicDepthBuffer&&v.setValue(ut,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),x!==t&&(x=t,g=!0,_=!0),i.isShaderMaterial||i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshStandardMaterial||i.envMap){const e=v.map.cameraPosition;void 0!==e&&e.setValue(ut,B.setFromMatrixPosition(t.matrixWorld))}(i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial)&&v.setValue(ut,"isOrthographic",!0===t.isOrthographicCamera),(i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial||i.isShadowMaterial||i.skinning)&&v.setValue(ut,"viewMatrix",t.matrixWorldInverse)}if(i.skinning){v.setOptional(ut,n,"bindMatrix"),v.setOptional(ut,n,"bindMatrixInverse");const t=n.skeleton;if(t){const e=t.bones;if(H.floatVertexTextures){if(null===t.boneTexture){let i=Math.sqrt(4*e.length);i=Wi(i),i=Math.max(i,4);const n=new Float32Array(i*i*4);n.set(t.boneMatrices);const r=new qa(n,i,i,Ot,Lt);t.boneMatrices=n,t.boneTexture=r,t.boneTextureSize=i}v.setValue(ut,"boneTexture",t.boneTexture,W),v.setValue(ut,"boneTextureSize",t.boneTextureSize)}else v.setOptional(ut,t,"boneMatrices")}}var M,E;return(g||u.receiveShadow!==n.receiveShadow)&&(u.receiveShadow=n.receiveShadow,v.setValue(ut,"receiveShadow",n.receiveShadow)),g&&(v.setValue(ut,"toneMappingExposure",f.toneMappingExposure),u.needsLights&&(E=_,(M=w).ambientLightColor.needsUpdate=E,M.lightProbe.needsUpdate=E,M.directionalLights.needsUpdate=E,M.directionalLightShadows.needsUpdate=E,M.pointLights.needsUpdate=E,M.pointLightShadows.needsUpdate=E,M.spotLights.needsUpdate=E,M.spotLightShadows.needsUpdate=E,M.rectAreaLights.needsUpdate=E,M.hemisphereLights.needsUpdate=E),r&&i.fog&&K.refreshFogUniforms(w,r),K.refreshMaterialUniforms(w,i,k,T),ls.upload(ut,u.uniformsList,w,W)),i.isShaderMaterial&&!0===i.uniformsNeedUpdate&&(ls.upload(ut,u.uniformsList,w,W),i.uniformsNeedUpdate=!1),i.isSpriteMaterial&&v.setValue(ut,"center",n.center),v.setValue(ut,"modelViewMatrix",n.modelViewMatrix),v.setValue(ut,"normalMatrix",n.normalMatrix),v.setValue(ut,"modelMatrix",n.matrixWorld),p}bt.setAnimationLoop((function(t){gt&&gt(t)})),"undefined"!=typeof window&&bt.setContext(window),this.setAnimationLoop=function(t){gt=t,dt.setAnimationLoop(t),null===t?bt.stop():bt.start()},dt.addEventListener("sessionstart",_t),dt.addEventListener("sessionend",vt),this.render=function(t,e){let i,n;if(void 0!==arguments[2]&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),i=arguments[2]),void 0!==arguments[3]&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),n=arguments[3]),void 0!==e&&!0!==e.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===g)return;!0===t.autoUpdate&&t.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),!0===dt.enabled&&!0===dt.isPresenting&&(e=dt.getCamera(e)),!0===t.isScene&&t.onBeforeRender(f,t,e,i||b),d=tt.get(t,m.length),d.init(),m.push(d),I.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),P.setFromProjectionMatrix(I),D=this.localClippingEnabled,q=et.init(this.clippingPlanes,D,e),c=Q.get(t,p.length),c.init(),p.push(c),yt(t,e,0,f.sortObjects),c.finish(),!0===f.sortObjects&&c.sort(A,z),!0===q&&et.beginShadows();const r=d.state.shadowsArray;it.render(r,t,e),d.setupLights(),d.setupLightsView(e),!0===q&&et.endShadows(),!0===this.info.autoReset&&this.info.reset(),void 0!==i&&this.setRenderTarget(i),nt.render(c,t,e,n);const a=c.opaque,o=c.transparent;a.length>0&&xt(a,t,e),o.length>0&&xt(o,t,e),null!==b&&(W.updateRenderTargetMipmap(b),W.updateMultisampleRenderTarget(b)),!0===t.isScene&&t.onAfterRender(f,t,e),U.buffers.depth.setTest(!0),U.buffers.depth.setMask(!0),U.buffers.color.setMask(!0),U.setPolygonOffset(!1),lt.resetDefaultState(),y=-1,x=null,m.pop(),d=m.length>0?m[m.length-1]:null,p.pop(),c=p.length>0?p[p.length-1]:null},this.getActiveCubeFace=function(){return _},this.getActiveMipmapLevel=function(){return v},this.getRenderTarget=function(){return b},this.setRenderTarget=function(t,e=0,i=0){b=t,_=e,v=i,t&&void 0===V.get(t).__webglFramebuffer&&W.setupRenderTarget(t);let n=null,r=!1,a=!1;if(t){const i=t.texture;(i.isDataTexture3D||i.isDataTexture2DArray)&&(a=!0);const o=V.get(t).__webglFramebuffer;t.isWebGLCubeRenderTarget?(n=o[e],r=!0):n=t.isWebGLMultisampleRenderTarget?V.get(t).__webglMultisampledFramebuffer:o,w.copy(t.viewport),M.copy(t.scissor),E=t.scissorTest}else w.copy(L).multiplyScalar(k).floor(),M.copy(R).multiplyScalar(k).floor(),E=C;if(U.bindFramebuffer(36160,n),U.viewport(w),U.scissor(M),U.setScissorTest(E),r){const n=V.get(t.texture);ut.framebufferTexture2D(36160,36064,34069+e,n.__webglTexture,i)}else if(a){const n=V.get(t.texture),r=e||0;ut.framebufferTextureLayer(36160,36064,n.__webglTexture,i||0,r)}},this.readRenderTargetPixels=function(t,e,i,n,r,a,o){if(!t||!t.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let s=V.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==o&&(s=s[o]),s){U.bindFramebuffer(36160,s);try{const o=t.texture,s=o.format,l=o.type;if(s!==Ot&&st.convert(s)!==ut.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const u=l===Rt&&(N.has("EXT_color_buffer_half_float")||H.isWebGL2&&N.has("EXT_color_buffer_float"));if(!(l===Et||st.convert(l)===ut.getParameter(35738)||l===Lt&&(H.isWebGL2||N.has("OES_texture_float")||N.has("WEBGL_color_buffer_float"))||u))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");36053===ut.checkFramebufferStatus(36160)?e>=0&&e<=t.width-n&&i>=0&&i<=t.height-r&&ut.readPixels(e,i,n,r,st.convert(s),st.convert(l),a):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{const t=null!==b?V.get(b).__webglFramebuffer:null;U.bindFramebuffer(36160,t)}}},this.copyFramebufferToTexture=function(t,e,i=0){const n=Math.pow(2,-i),r=Math.floor(e.image.width*n),a=Math.floor(e.image.height*n),o=st.convert(e.format);W.setTexture2D(e,0),ut.copyTexImage2D(3553,i,o,t.x,t.y,r,a,0),U.unbindTexture()},this.copyTextureToTexture=function(t,e,i,n=0){const r=e.image.width,a=e.image.height,o=st.convert(i.format),s=st.convert(i.type);W.setTexture2D(i,0),ut.pixelStorei(37440,i.flipY),ut.pixelStorei(37441,i.premultiplyAlpha),ut.pixelStorei(3317,i.unpackAlignment),e.isDataTexture?ut.texSubImage2D(3553,n,t.x,t.y,r,a,o,s,e.image.data):e.isCompressedTexture?ut.compressedTexSubImage2D(3553,n,t.x,t.y,e.mipmaps[0].width,e.mipmaps[0].height,o,e.mipmaps[0].data):ut.texSubImage2D(3553,n,t.x,t.y,o,s,e.image),0===n&&i.generateMipmaps&&ut.generateMipmap(3553),U.unbindTexture()},this.copyTextureToTexture3D=function(t,e,i,n,r=0){if(f.isWebGL1Renderer)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");const{width:a,height:o,data:s}=i.image,l=st.convert(n.format),u=st.convert(n.type);let h;if(n.isDataTexture3D)W.setTexture3D(n,0),h=32879;else{if(!n.isDataTexture2DArray)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");W.setTexture2DArray(n,0),h=35866}ut.pixelStorei(37440,n.flipY),ut.pixelStorei(37441,n.premultiplyAlpha),ut.pixelStorei(3317,n.unpackAlignment);const c=ut.getParameter(3314),d=ut.getParameter(32878),p=ut.getParameter(3316),m=ut.getParameter(3315),g=ut.getParameter(32877);ut.pixelStorei(3314,a),ut.pixelStorei(32878,o),ut.pixelStorei(3316,t.min.x),ut.pixelStorei(3315,t.min.y),ut.pixelStorei(32877,t.min.z),ut.texSubImage3D(h,r,e.x,e.y,e.z,t.max.x-t.min.x+1,t.max.y-t.min.y+1,t.max.z-t.min.z+1,l,u,s),ut.pixelStorei(3314,c),ut.pixelStorei(32878,d),ut.pixelStorei(3316,p),ut.pixelStorei(3315,m),ut.pixelStorei(32877,g),0===r&&n.generateMipmaps&&ut.generateMipmap(h),U.unbindTexture()},this.initTexture=function(t){W.setTexture2D(t,0),U.unbindTexture()},this.resetState=function(){_=0,v=0,b=null,U.reset(),lt.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class tl extends Qs{}tl.prototype.isWebGL1Renderer=!0;class el{constructor(t,e=25e-5){this.name="",this.color=new Cr(t),this.density=e}clone(){return new el(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}el.prototype.isFogExp2=!0;class il{constructor(t,e=1,i=1e3){this.name="",this.color=new Cr(t),this.near=e,this.far=i}clone(){return new il(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}il.prototype.isFog=!0;class nl extends lr{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.environment&&(this.environment=t.environment.clone()),null!==t.fog&&(this.fog=t.fog.clone()),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return null!==this.background&&(e.object.background=this.background.toJSON(t)),null!==this.environment&&(e.object.environment=this.environment.toJSON(t)),null!==this.fog&&(e.object.fog=this.fog.toJSON()),e}}nl.prototype.isScene=!0;class rl{constructor(t,e){this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.usage=Ei,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Ni(),this.onUploadCallback=function(){}}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this}copyAt(t,e,i){t*=this.stride,i*=e.stride;for(let n=0,r=this.stride;n<r;n++)this.array[t+n]=e.array[i+n];return this}set(t,e=0){return this.array.set(t,e),this}clone(t){void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Ni()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),i=new rl(e,this.stride);return i.setUsage(this.usage),i}onUpload(t){return this.onUploadCallback=t,this}toJSON(t){return void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Ni()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}rl.prototype.isInterleavedBuffer=!0;const al=new on;class ol{constructor(t,e,i,n){this.name="",this.data=t,this.itemSize=e,this.offset=i,this.normalized=!0===n}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(t){this.data.needsUpdate=t}applyMatrix4(t){for(let e=0,i=this.data.count;e<i;e++)al.x=this.getX(e),al.y=this.getY(e),al.z=this.getZ(e),al.applyMatrix4(t),this.setXYZ(e,al.x,al.y,al.z);return this}applyNormalMatrix(t){for(let e=0,i=this.count;e<i;e++)al.x=this.getX(e),al.y=this.getY(e),al.z=this.getZ(e),al.applyNormalMatrix(t),this.setXYZ(e,al.x,al.y,al.z);return this}transformDirection(t){for(let e=0,i=this.count;e<i;e++)al.x=this.getX(e),al.y=this.getY(e),al.z=this.getZ(e),al.transformDirection(t),this.setXYZ(e,al.x,al.y,al.z);return this}setX(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this}setY(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this}setZ(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this}setW(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this}getX(t){return this.data.array[t*this.data.stride+this.offset]}getY(t){return this.data.array[t*this.data.stride+this.offset+1]}getZ(t){return this.data.array[t*this.data.stride+this.offset+2]}getW(t){return this.data.array[t*this.data.stride+this.offset+3]}setXY(t,e,i){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=i,this}setXYZ(t,e,i,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=i,this.data.array[t+2]=n,this}setXYZW(t,e,i,n,r){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=i,this.data.array[t+2]=n,this.data.array[t+3]=r,this}clone(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const i=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[i+e])}return new Ir(new this.array.constructor(t),this.itemSize,this.normalized)}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new ol(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const i=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[i+e])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}ol.prototype.isInterleavedBufferAttribute=!0;class sl extends Sr{constructor(t){super(),this.type="SpriteMaterial",this.color=new Cr(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this}}let ll;sl.prototype.isSpriteMaterial=!0;const ul=new on,hl=new on,cl=new on,dl=new Xi,pl=new Xi,ml=new Bn,fl=new on,gl=new on,_l=new on,vl=new Xi,bl=new Xi,yl=new Xi;class xl extends lr{constructor(t){if(super(),this.type="Sprite",void 0===ll){ll=new na;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),e=new rl(t,5);ll.setIndex([0,1,2,0,2,3]),ll.setAttribute("position",new ol(e,3,0,!1)),ll.setAttribute("uv",new ol(e,2,3,!1))}this.geometry=ll,this.material=void 0!==t?t:new sl,this.center=new Xi(.5,.5)}raycast(t,e){null===t.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),hl.setFromMatrixScale(this.matrixWorld),ml.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),cl.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&hl.multiplyScalar(-cl.z);const i=this.material.rotation;let n,r;0!==i&&(r=Math.cos(i),n=Math.sin(i));const a=this.center;wl(fl.set(-.5,-.5,0),cl,a,hl,n,r),wl(gl.set(.5,-.5,0),cl,a,hl,n,r),wl(_l.set(.5,.5,0),cl,a,hl,n,r),vl.set(0,0),bl.set(1,0),yl.set(1,1);let o=t.ray.intersectTriangle(fl,gl,_l,!1,ul);if(null===o&&(wl(gl.set(-.5,.5,0),cl,a,hl,n,r),bl.set(0,1),o=t.ray.intersectTriangle(fl,_l,gl,!1,ul),null===o))return;const s=t.ray.origin.distanceTo(ul);s<t.near||s>t.far||e.push({distance:s,point:ul.clone(),uv:Mr.getUV(ul,fl,gl,_l,vl,bl,yl,new Xi),face:null,object:this})}copy(t){return super.copy(t),void 0!==t.center&&this.center.copy(t.center),this.material=t.material,this}}function wl(t,e,i,n,r,a){dl.subVectors(t,i).addScalar(.5).multiply(n),void 0!==r?(pl.x=a*dl.x-r*dl.y,pl.y=r*dl.x+a*dl.y):pl.copy(dl),t.copy(e),t.x+=pl.x,t.y+=pl.y,t.applyMatrix4(ml)}xl.prototype.isSprite=!0;const Ml=new on,El=new on;class Sl extends lr{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(t){super.copy(t,!1);const e=t.levels;for(let t=0,i=e.length;t<i;t++){const i=e[t];this.addLevel(i.object.clone(),i.distance)}return this.autoUpdate=t.autoUpdate,this}addLevel(t,e=0){e=Math.abs(e);const i=this.levels;let n;for(n=0;n<i.length&&!(e<i[n].distance);n++);return i.splice(n,0,{distance:e,object:t}),this.add(t),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(t){const e=this.levels;if(e.length>0){let i,n;for(i=1,n=e.length;i<n&&!(t<e[i].distance);i++);return e[i-1].object}return null}raycast(t,e){if(this.levels.length>0){Ml.setFromMatrixPosition(this.matrixWorld);const i=t.ray.origin.distanceTo(Ml);this.getObjectForDistance(i).raycast(t,e)}}update(t){const e=this.levels;if(e.length>1){Ml.setFromMatrixPosition(t.matrixWorld),El.setFromMatrixPosition(this.matrixWorld);const i=Ml.distanceTo(El)/t.zoom;let n,r;for(e[0].object.visible=!0,n=1,r=e.length;n<r&&i>=e[n].distance;n++)e[n-1].object.visible=!1,e[n].object.visible=!0;for(this._currentLevel=n-1;n<r;n++)e[n].object.visible=!1}}toJSON(t){const e=super.toJSON(t);!1===this.autoUpdate&&(e.object.autoUpdate=!1),e.object.levels=[];const i=this.levels;for(let t=0,n=i.length;t<n;t++){const n=i[t];e.object.levels.push({object:n.object.uuid,distance:n.distance})}return e}}const Tl=new on,kl=new en,Al=new en,zl=new on,Ll=new Bn;class Rl extends xa{constructor(t,e){super(t,e),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Bn,this.bindMatrixInverse=new Bn}copy(t){return super.copy(t),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,this}bind(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const t=new en,e=this.geometry.attributes.skinWeight;for(let i=0,n=e.count;i<n;i++){t.x=e.getX(i),t.y=e.getY(i),t.z=e.getZ(i),t.w=e.getW(i);const n=1/t.manhattanLength();n!==1/0?t.multiplyScalar(n):t.set(1,0,0,0),e.setXYZW(i,t.x,t.y,t.z,t.w)}}updateMatrixWorld(t){super.updateMatrixWorld(t),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(t,e){const i=this.skeleton,n=this.geometry;kl.fromBufferAttribute(n.attributes.skinIndex,t),Al.fromBufferAttribute(n.attributes.skinWeight,t),Tl.fromBufferAttribute(n.attributes.position,t).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let t=0;t<4;t++){const n=Al.getComponent(t);if(0!==n){const r=kl.getComponent(t);Ll.multiplyMatrices(i.bones[r].matrixWorld,i.boneInverses[r]),e.addScaledVector(zl.copy(Tl).applyMatrix4(Ll),n)}}return e.applyMatrix4(this.bindMatrixInverse)}}Rl.prototype.isSkinnedMesh=!0;class Cl extends lr{constructor(){super(),this.type="Bone"}}Cl.prototype.isBone=!0;const Pl=new Bn,ql=new Bn;class Dl{constructor(t=[],e=[]){this.uuid=Ni(),this.bones=t.slice(0),this.boneInverses=e,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){const t=this.bones,e=this.boneInverses;if(this.boneMatrices=new Float32Array(16*t.length),0===e.length)this.calculateInverses();else if(t.length!==e.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let t=0,e=this.bones.length;t<e;t++)this.boneInverses.push(new Bn)}}calculateInverses(){this.boneInverses.length=0;for(let t=0,e=this.bones.length;t<e;t++){const e=new Bn;this.bones[t]&&e.copy(this.bones[t].matrixWorld).invert(),this.boneInverses.push(e)}}pose(){for(let t=0,e=this.bones.length;t<e;t++){const e=this.bones[t];e&&e.matrixWorld.copy(this.boneInverses[t]).invert()}for(let t=0,e=this.bones.length;t<e;t++){const e=this.bones[t];e&&(e.parent&&e.parent.isBone?(e.matrix.copy(e.parent.matrixWorld).invert(),e.matrix.multiply(e.matrixWorld)):e.matrix.copy(e.matrixWorld),e.matrix.decompose(e.position,e.quaternion,e.scale))}}update(){const t=this.bones,e=this.boneInverses,i=this.boneMatrices,n=this.boneTexture;for(let n=0,r=t.length;n<r;n++){const r=t[n]?t[n].matrixWorld:ql;Pl.multiplyMatrices(r,e[n]),Pl.toArray(i,16*n)}null!==n&&(n.needsUpdate=!0)}clone(){return new Dl(this.bones,this.boneInverses)}getBoneByName(t){for(let e=0,i=this.bones.length;e<i;e++){const i=this.bones[e];if(i.name===t)return i}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(t,e){this.uuid=t.uuid;for(let i=0,n=t.bones.length;i<n;i++){const n=t.bones[i];let r=e[n];void 0===r&&(console.warn("THREE.Skeleton: No bone found with UUID:",n),r=new Cl),this.bones.push(r),this.boneInverses.push((new Bn).fromArray(t.boneInverses[i]))}return this.init(),this}toJSON(){const t={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};t.uuid=this.uuid;const e=this.bones,i=this.boneInverses;for(let n=0,r=e.length;n<r;n++){const r=e[n];t.bones.push(r.uuid);const a=i[n];t.boneInverses.push(a.toArray())}return t}}const Il=new Bn,Bl=new Bn,Ol=[],Fl=new xa;class Nl extends xa{constructor(t,e,i){super(t,e),this.instanceMatrix=new Ir(new Float32Array(16*i),16),this.instanceColor=null,this.count=i,this.frustumCulled=!1}copy(t){return super.copy(t),this.instanceMatrix.copy(t.instanceMatrix),null!==t.instanceColor&&(this.instanceColor=t.instanceColor.clone()),this.count=t.count,this}getColorAt(t,e){e.fromArray(this.instanceColor.array,3*t)}getMatrixAt(t,e){e.fromArray(this.instanceMatrix.array,16*t)}raycast(t,e){const i=this.matrixWorld,n=this.count;if(Fl.geometry=this.geometry,Fl.material=this.material,void 0!==Fl.material)for(let r=0;r<n;r++){this.getMatrixAt(r,Il),Bl.multiplyMatrices(i,Il),Fl.matrixWorld=Bl,Fl.raycast(t,Ol);for(let t=0,i=Ol.length;t<i;t++){const i=Ol[t];i.instanceId=r,i.object=this,e.push(i)}Ol.length=0}}setColorAt(t,e){null===this.instanceColor&&(this.instanceColor=new Ir(new Float32Array(3*this.count),3)),e.toArray(this.instanceColor.array,3*t)}setMatrixAt(t,e){e.toArray(this.instanceMatrix.array,16*t)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}Nl.prototype.isInstancedMesh=!0;class Hl extends Sr{constructor(t){super(),this.type="LineBasicMaterial",this.color=new Cr(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.morphTargets=t.morphTargets,this}}Hl.prototype.isLineBasicMaterial=!0;const Ul=new on,Gl=new on,Vl=new Bn,Wl=new In,jl=new An;class Yl extends lr{constructor(t=new na,e=new Hl){super(),this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t){return super.copy(t),this.material=t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const e=t.attributes.position,i=[0];for(let t=1,n=e.count;t<n;t++)Ul.fromBufferAttribute(e,t-1),Gl.fromBufferAttribute(e,t),i[t]=i[t-1],i[t]+=Ul.distanceTo(Gl);t.setAttribute("lineDistance",new Wr(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else t.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(t,e){const i=this.geometry,n=this.matrixWorld,r=t.params.Line.threshold,a=i.drawRange;if(null===i.boundingSphere&&i.computeBoundingSphere(),jl.copy(i.boundingSphere),jl.applyMatrix4(n),jl.radius+=r,!1===t.ray.intersectsSphere(jl))return;Vl.copy(n).invert(),Wl.copy(t.ray).applyMatrix4(Vl);const o=r/((this.scale.x+this.scale.y+this.scale.z)/3),s=o*o,l=new on,u=new on,h=new on,c=new on,d=this.isLineSegments?2:1;if(i.isBufferGeometry){const n=i.index,r=i.attributes.position;if(null!==n)for(let i=Math.max(0,a.start),o=Math.min(n.count,a.start+a.count)-1;i<o;i+=d){const a=n.getX(i),o=n.getX(i+1);if(l.fromBufferAttribute(r,a),u.fromBufferAttribute(r,o),Wl.distanceSqToSegment(l,u,c,h)>s)continue;c.applyMatrix4(this.matrixWorld);const d=t.ray.origin.distanceTo(c);d<t.near||d>t.far||e.push({distance:d,point:h.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this})}else for(let i=Math.max(0,a.start),n=Math.min(r.count,a.start+a.count)-1;i<n;i+=d){if(l.fromBufferAttribute(r,i),u.fromBufferAttribute(r,i+1),Wl.distanceSqToSegment(l,u,c,h)>s)continue;c.applyMatrix4(this.matrixWorld);const n=t.ray.origin.distanceTo(c);n<t.near||n>t.far||e.push({distance:n,point:h.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this})}}else i.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,i=Object.keys(e);if(i.length>0){const t=e[i[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,i=t.length;e<i;e++){const i=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}Yl.prototype.isLine=!0;const Xl=new on,Zl=new on;class Jl extends Yl{constructor(t,e){super(t,e),this.type="LineSegments"}computeLineDistances(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const e=t.attributes.position,i=[];for(let t=0,n=e.count;t<n;t+=2)Xl.fromBufferAttribute(e,t),Zl.fromBufferAttribute(e,t+1),i[t]=0===t?0:i[t-1],i[t+1]=i[t]+Xl.distanceTo(Zl);t.setAttribute("lineDistance",new Wr(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else t.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}Jl.prototype.isLineSegments=!0;class Kl extends Yl{constructor(t,e){super(t,e),this.type="LineLoop"}}Kl.prototype.isLineLoop=!0;class $l extends Sr{constructor(t){super(),this.type="PointsMaterial",this.color=new Cr(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.morphTargets=t.morphTargets,this}}$l.prototype.isPointsMaterial=!0;const Ql=new Bn,tu=new In,eu=new An,iu=new on;class nu extends lr{constructor(t=new na,e=new $l){super(),this.type="Points",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t){return super.copy(t),this.material=t.material,this.geometry=t.geometry,this}raycast(t,e){const i=this.geometry,n=this.matrixWorld,r=t.params.Points.threshold,a=i.drawRange;if(null===i.boundingSphere&&i.computeBoundingSphere(),eu.copy(i.boundingSphere),eu.applyMatrix4(n),eu.radius+=r,!1===t.ray.intersectsSphere(eu))return;Ql.copy(n).invert(),tu.copy(t.ray).applyMatrix4(Ql);const o=r/((this.scale.x+this.scale.y+this.scale.z)/3),s=o*o;if(i.isBufferGeometry){const r=i.index,o=i.attributes.position;if(null!==r)for(let i=Math.max(0,a.start),l=Math.min(r.count,a.start+a.count);i<l;i++){const a=r.getX(i);iu.fromBufferAttribute(o,a),ru(iu,a,s,n,t,e,this)}else for(let i=Math.max(0,a.start),r=Math.min(o.count,a.start+a.count);i<r;i++)iu.fromBufferAttribute(o,i),ru(iu,i,s,n,t,e,this)}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,i=Object.keys(e);if(i.length>0){const t=e[i[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,i=t.length;e<i;e++){const i=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}function ru(t,e,i,n,r,a,o){const s=tu.distanceSqToPoint(t);if(s<i){const i=new on;tu.closestPointToPoint(t,i),i.applyMatrix4(n);const l=r.ray.origin.distanceTo(i);if(l<r.near||l>r.far)return;a.push({distance:l,distanceToRay:Math.sqrt(s),point:i,index:e,face:null,object:o})}}nu.prototype.isPoints=!0;class au extends Qi{constructor(t,e,i,n,r,a,o,s,l){super(t,e,i,n,r,a,o,s,l),this.format=void 0!==o?o:Bt,this.minFilter=void 0!==a?a:bt,this.magFilter=void 0!==r?r:bt,this.generateMipmaps=!1;const u=this;"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback((function e(){u.needsUpdate=!0,t.requestVideoFrameCallback(e)}))}clone(){return new this.constructor(this.image).copy(this)}update(){const t=this.image;!1=="requestVideoFrameCallback"in t&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}au.prototype.isVideoTexture=!0;class ou extends Qi{constructor(t,e,i,n,r,a,o,s,l,u,h,c){super(null,a,o,s,l,u,n,r,h,c),this.image={width:e,height:i},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}}ou.prototype.isCompressedTexture=!0;class su extends Qi{constructor(t,e,i,n,r,a,o,s,l){super(t,e,i,n,r,a,o,s,l),this.needsUpdate=!0}}su.prototype.isCanvasTexture=!0;class lu extends Qi{constructor(t,e,i,n,r,a,o,s,l,u){if((u=void 0!==u?u:Ut)!==Ut&&u!==Gt)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===i&&u===Ut&&(i=kt),void 0===i&&u===Gt&&(i=Dt),super(null,n,r,a,o,s,u,i,l),this.image={width:t,height:e},this.magFilter=void 0!==o?o:mt,this.minFilter=void 0!==s?s:mt,this.flipY=!1,this.generateMipmaps=!1}}lu.prototype.isDepthTexture=!0;class uu extends na{constructor(t=1,e=8,i=0,n=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:i,thetaLength:n},e=Math.max(3,e);const r=[],a=[],o=[],s=[],l=new on,u=new Xi;a.push(0,0,0),o.push(0,0,1),s.push(.5,.5);for(let r=0,h=3;r<=e;r++,h+=3){const c=i+r/e*n;l.x=t*Math.cos(c),l.y=t*Math.sin(c),a.push(l.x,l.y,l.z),o.push(0,0,1),u.x=(a[h]/t+1)/2,u.y=(a[h+1]/t+1)/2,s.push(u.x,u.y)}for(let t=1;t<=e;t++)r.push(t,t+1,0);this.setIndex(r),this.setAttribute("position",new Wr(a,3)),this.setAttribute("normal",new Wr(o,3)),this.setAttribute("uv",new Wr(s,2))}}class hu extends na{constructor(t=1,e=1,i=1,n=8,r=1,a=!1,o=0,s=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:i,radialSegments:n,heightSegments:r,openEnded:a,thetaStart:o,thetaLength:s};const l=this;n=Math.floor(n),r=Math.floor(r);const u=[],h=[],c=[],d=[];let p=0;const m=[],f=i/2;let g=0;function _(i){const r=p,a=new Xi,m=new on;let _=0;const v=!0===i?t:e,b=!0===i?1:-1;for(let t=1;t<=n;t++)h.push(0,f*b,0),c.push(0,b,0),d.push(.5,.5),p++;const y=p;for(let t=0;t<=n;t++){const e=t/n*s+o,i=Math.cos(e),r=Math.sin(e);m.x=v*r,m.y=f*b,m.z=v*i,h.push(m.x,m.y,m.z),c.push(0,b,0),a.x=.5*i+.5,a.y=.5*r*b+.5,d.push(a.x,a.y),p++}for(let t=0;t<n;t++){const e=r+t,n=y+t;!0===i?u.push(n,n+1,e):u.push(n+1,n,e),_+=3}l.addGroup(g,_,!0===i?1:2),g+=_}!function(){const a=new on,_=new on;let v=0;const b=(e-t)/i;for(let l=0;l<=r;l++){const u=[],g=l/r,v=g*(e-t)+t;for(let t=0;t<=n;t++){const e=t/n,r=e*s+o,l=Math.sin(r),m=Math.cos(r);_.x=v*l,_.y=-g*i+f,_.z=v*m,h.push(_.x,_.y,_.z),a.set(l,b,m).normalize(),c.push(a.x,a.y,a.z),d.push(e,1-g),u.push(p++)}m.push(u)}for(let t=0;t<n;t++)for(let e=0;e<r;e++){const i=m[e][t],n=m[e+1][t],r=m[e+1][t+1],a=m[e][t+1];u.push(i,n,a),u.push(n,r,a),v+=6}l.addGroup(g,v,0),g+=v}(),!1===a&&(t>0&&_(!0),e>0&&_(!1)),this.setIndex(u),this.setAttribute("position",new Wr(h,3)),this.setAttribute("normal",new Wr(c,3)),this.setAttribute("uv",new Wr(d,2))}}class cu extends hu{constructor(t=1,e=1,i=8,n=1,r=!1,a=0,o=2*Math.PI){super(0,t,e,i,n,r,a,o),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:i,heightSegments:n,openEnded:r,thetaStart:a,thetaLength:o}}}class du extends na{constructor(t,e,i=1,n=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:i,detail:n};const r=[],a=[];function o(t,e,i,n){const r=n+1,a=[];for(let n=0;n<=r;n++){a[n]=[];const o=t.clone().lerp(i,n/r),s=e.clone().lerp(i,n/r),l=r-n;for(let t=0;t<=l;t++)a[n][t]=0===t&&n===r?o:o.clone().lerp(s,t/l)}for(let t=0;t<r;t++)for(let e=0;e<2*(r-t)-1;e++){const i=Math.floor(e/2);e%2==0?(s(a[t][i+1]),s(a[t+1][i]),s(a[t][i])):(s(a[t][i+1]),s(a[t+1][i+1]),s(a[t+1][i]))}}function s(t){r.push(t.x,t.y,t.z)}function l(e,i){const n=3*e;i.x=t[n+0],i.y=t[n+1],i.z=t[n+2]}function u(t,e,i,n){n<0&&1===t.x&&(a[e]=t.x-1),0===i.x&&0===i.z&&(a[e]=n/2/Math.PI+.5)}function h(t){return Math.atan2(t.z,-t.x)}!function(t){const i=new on,n=new on,r=new on;for(let a=0;a<e.length;a+=3)l(e[a+0],i),l(e[a+1],n),l(e[a+2],r),o(i,n,r,t)}(n),function(t){const e=new on;for(let i=0;i<r.length;i+=3)e.x=r[i+0],e.y=r[i+1],e.z=r[i+2],e.normalize().multiplyScalar(t),r[i+0]=e.x,r[i+1]=e.y,r[i+2]=e.z}(i),function(){const t=new on;for(let i=0;i<r.length;i+=3){t.x=r[i+0],t.y=r[i+1],t.z=r[i+2];const n=h(t)/2/Math.PI+.5,o=(e=t,Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))/Math.PI+.5);a.push(n,1-o)}var e;(function(){const t=new on,e=new on,i=new on,n=new on,o=new Xi,s=new Xi,l=new Xi;for(let c=0,d=0;c<r.length;c+=9,d+=6){t.set(r[c+0],r[c+1],r[c+2]),e.set(r[c+3],r[c+4],r[c+5]),i.set(r[c+6],r[c+7],r[c+8]),o.set(a[d+0],a[d+1]),s.set(a[d+2],a[d+3]),l.set(a[d+4],a[d+5]),n.copy(t).add(e).add(i).divideScalar(3);const p=h(n);u(o,d+0,t,p),u(s,d+2,e,p),u(l,d+4,i,p)}})(),function(){for(let t=0;t<a.length;t+=6){const e=a[t+0],i=a[t+2],n=a[t+4],r=Math.max(e,i,n),o=Math.min(e,i,n);r>.9&&o<.1&&(e<.2&&(a[t+0]+=1),i<.2&&(a[t+2]+=1),n<.2&&(a[t+4]+=1))}}()}(),this.setAttribute("position",new Wr(r,3)),this.setAttribute("normal",new Wr(r.slice(),3)),this.setAttribute("uv",new Wr(a,2)),0===n?this.computeVertexNormals():this.normalizeNormals()}}class pu extends du{constructor(t=1,e=0){const i=(1+Math.sqrt(5))/2,n=1/i;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-n,-i,0,-n,i,0,n,-i,0,n,i,-n,-i,0,-n,i,0,n,-i,0,n,i,0,-i,0,-n,i,0,-n,-i,0,n,i,0,n],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],t,e),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e}}}const mu=new on,fu=new on,gu=new on,_u=new Mr;class vu extends na{constructor(t,e){if(super(),this.type="EdgesGeometry",this.parameters={thresholdAngle:e},e=void 0!==e?e:1,!0===t.isGeometry)return void console.error("THREE.EdgesGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");const i=Math.pow(10,4),n=Math.cos(Oi*e),r=t.getIndex(),a=t.getAttribute("position"),o=r?r.count:a.count,s=[0,0,0],l=["a","b","c"],u=new Array(3),h={},c=[];for(let t=0;t<o;t+=3){r?(s[0]=r.getX(t),s[1]=r.getX(t+1),s[2]=r.getX(t+2)):(s[0]=t,s[1]=t+1,s[2]=t+2);const{a:e,b:o,c:d}=_u;if(e.fromBufferAttribute(a,s[0]),o.fromBufferAttribute(a,s[1]),d.fromBufferAttribute(a,s[2]),_u.getNormal(gu),u[0]=`${Math.round(e.x*i)},${Math.round(e.y*i)},${Math.round(e.z*i)}`,u[1]=`${Math.round(o.x*i)},${Math.round(o.y*i)},${Math.round(o.z*i)}`,u[2]=`${Math.round(d.x*i)},${Math.round(d.y*i)},${Math.round(d.z*i)}`,u[0]!==u[1]&&u[1]!==u[2]&&u[2]!==u[0])for(let t=0;t<3;t++){const e=(t+1)%3,i=u[t],r=u[e],a=_u[l[t]],o=_u[l[e]],d=`${i}_${r}`,p=`${r}_${i}`;p in h&&h[p]?(gu.dot(h[p].normal)<=n&&(c.push(a.x,a.y,a.z),c.push(o.x,o.y,o.z)),h[p]=null):d in h||(h[d]={index0:s[t],index1:s[e],normal:gu.clone()})}}for(const t in h)if(h[t]){const{index0:e,index1:i}=h[t];mu.fromBufferAttribute(a,e),fu.fromBufferAttribute(a,i),c.push(mu.x,mu.y,mu.z),c.push(fu.x,fu.y,fu.z)}this.setAttribute("position",new Wr(c,3))}}function bu(t,e,i,n,r){let a,o;if(r===function(t,e,i,n){let r=0;for(let a=e,o=i-n;a<i;a+=n)r+=(t[o]-t[a])*(t[a+1]+t[o+1]),o=a;return r}(t,e,i,n)>0)for(a=e;a<i;a+=n)o=Nu(a,t[a],t[a+1],o);else for(a=i-n;a>=e;a-=n)o=Nu(a,t[a],t[a+1],o);return o&&qu(o,o.next)&&(Hu(o),o=o.next),o}function yu(t,e){if(!t)return t;e||(e=t);let i,n=t;do{if(i=!1,n.steiner||!qu(n,n.next)&&0!==Pu(n.prev,n,n.next))n=n.next;else{if(Hu(n),n=e=n.prev,n===n.next)break;i=!0}}while(i||n!==e);return e}function xu(t,e,i,n,r,a,o){if(!t)return;!o&&a&&function(t,e,i,n){let r=t;do{null===r.z&&(r.z=zu(r.x,r.y,e,i,n)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next}while(r!==t);r.prevZ.nextZ=null,r.prevZ=null,function(t){let e,i,n,r,a,o,s,l,u=1;do{for(i=t,t=null,a=null,o=0;i;){for(o++,n=i,s=0,e=0;e<u&&(s++,n=n.nextZ,n);e++);for(l=u;s>0||l>0&&n;)0!==s&&(0===l||!n||i.z<=n.z)?(r=i,i=i.nextZ,s--):(r=n,n=n.nextZ,l--),a?a.nextZ=r:t=r,r.prevZ=a,a=r;i=n}a.nextZ=null,u*=2}while(o>1)}(r)}(t,n,r,a);let s,l,u=t;for(;t.prev!==t.next;)if(s=t.prev,l=t.next,a?Mu(t,n,r,a):wu(t))e.push(s.i/i),e.push(t.i/i),e.push(l.i/i),Hu(t),t=l.next,u=l.next;else if((t=l)===u){o?1===o?xu(t=Eu(yu(t),e,i),e,i,n,r,a,2):2===o&&Su(t,e,i,n,r,a):xu(yu(t),e,i,n,r,a,1);break}}function wu(t){const e=t.prev,i=t,n=t.next;if(Pu(e,i,n)>=0)return!1;let r=t.next.next;for(;r!==t.prev;){if(Ru(e.x,e.y,i.x,i.y,n.x,n.y,r.x,r.y)&&Pu(r.prev,r,r.next)>=0)return!1;r=r.next}return!0}function Mu(t,e,i,n){const r=t.prev,a=t,o=t.next;if(Pu(r,a,o)>=0)return!1;const s=r.x<a.x?r.x<o.x?r.x:o.x:a.x<o.x?a.x:o.x,l=r.y<a.y?r.y<o.y?r.y:o.y:a.y<o.y?a.y:o.y,u=r.x>a.x?r.x>o.x?r.x:o.x:a.x>o.x?a.x:o.x,h=r.y>a.y?r.y>o.y?r.y:o.y:a.y>o.y?a.y:o.y,c=zu(s,l,e,i,n),d=zu(u,h,e,i,n);let p=t.prevZ,m=t.nextZ;for(;p&&p.z>=c&&m&&m.z<=d;){if(p!==t.prev&&p!==t.next&&Ru(r.x,r.y,a.x,a.y,o.x,o.y,p.x,p.y)&&Pu(p.prev,p,p.next)>=0)return!1;if(p=p.prevZ,m!==t.prev&&m!==t.next&&Ru(r.x,r.y,a.x,a.y,o.x,o.y,m.x,m.y)&&Pu(m.prev,m,m.next)>=0)return!1;m=m.nextZ}for(;p&&p.z>=c;){if(p!==t.prev&&p!==t.next&&Ru(r.x,r.y,a.x,a.y,o.x,o.y,p.x,p.y)&&Pu(p.prev,p,p.next)>=0)return!1;p=p.prevZ}for(;m&&m.z<=d;){if(m!==t.prev&&m!==t.next&&Ru(r.x,r.y,a.x,a.y,o.x,o.y,m.x,m.y)&&Pu(m.prev,m,m.next)>=0)return!1;m=m.nextZ}return!0}function Eu(t,e,i){let n=t;do{const r=n.prev,a=n.next.next;!qu(r,a)&&Du(r,n,n.next,a)&&Ou(r,a)&&Ou(a,r)&&(e.push(r.i/i),e.push(n.i/i),e.push(a.i/i),Hu(n),Hu(n.next),n=t=a),n=n.next}while(n!==t);return yu(n)}function Su(t,e,i,n,r,a){let o=t;do{let t=o.next.next;for(;t!==o.prev;){if(o.i!==t.i&&Cu(o,t)){let s=Fu(o,t);return o=yu(o,o.next),s=yu(s,s.next),xu(o,e,i,n,r,a),void xu(s,e,i,n,r,a)}t=t.next}o=o.next}while(o!==t)}function Tu(t,e){return t.x-e.x}function ku(t,e){if(e=function(t,e){let i=e;const n=t.x,r=t.y;let a,o=-1/0;do{if(r<=i.y&&r>=i.next.y&&i.next.y!==i.y){const t=i.x+(r-i.y)*(i.next.x-i.x)/(i.next.y-i.y);if(t<=n&&t>o){if(o=t,t===n){if(r===i.y)return i;if(r===i.next.y)return i.next}a=i.x<i.next.x?i:i.next}}i=i.next}while(i!==e);if(!a)return null;if(n===o)return a;const s=a,l=a.x,u=a.y;let h,c=1/0;i=a;do{n>=i.x&&i.x>=l&&n!==i.x&&Ru(r<u?n:o,r,l,u,r<u?o:n,r,i.x,i.y)&&(h=Math.abs(r-i.y)/(n-i.x),Ou(i,t)&&(h<c||h===c&&(i.x>a.x||i.x===a.x&&Au(a,i)))&&(a=i,c=h)),i=i.next}while(i!==s);return a}(t,e),e){const i=Fu(e,t);yu(e,e.next),yu(i,i.next)}}function Au(t,e){return Pu(t.prev,t,e.prev)<0&&Pu(e.next,t,t.next)<0}function zu(t,e,i,n,r){return(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-i)*r)|t<<8))|t<<4))|t<<2))|t<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-n)*r)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function Lu(t){let e=t,i=t;do{(e.x<i.x||e.x===i.x&&e.y<i.y)&&(i=e),e=e.next}while(e!==t);return i}function Ru(t,e,i,n,r,a,o,s){return(r-o)*(e-s)-(t-o)*(a-s)>=0&&(t-o)*(n-s)-(i-o)*(e-s)>=0&&(i-o)*(a-s)-(r-o)*(n-s)>=0}function Cu(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!function(t,e){let i=t;do{if(i.i!==t.i&&i.next.i!==t.i&&i.i!==e.i&&i.next.i!==e.i&&Du(i,i.next,t,e))return!0;i=i.next}while(i!==t);return!1}(t,e)&&(Ou(t,e)&&Ou(e,t)&&function(t,e){let i=t,n=!1;const r=(t.x+e.x)/2,a=(t.y+e.y)/2;do{i.y>a!=i.next.y>a&&i.next.y!==i.y&&r<(i.next.x-i.x)*(a-i.y)/(i.next.y-i.y)+i.x&&(n=!n),i=i.next}while(i!==t);return n}(t,e)&&(Pu(t.prev,t,e.prev)||Pu(t,e.prev,e))||qu(t,e)&&Pu(t.prev,t,t.next)>0&&Pu(e.prev,e,e.next)>0)}function Pu(t,e,i){return(e.y-t.y)*(i.x-e.x)-(e.x-t.x)*(i.y-e.y)}function qu(t,e){return t.x===e.x&&t.y===e.y}function Du(t,e,i,n){const r=Bu(Pu(t,e,i)),a=Bu(Pu(t,e,n)),o=Bu(Pu(i,n,t)),s=Bu(Pu(i,n,e));return r!==a&&o!==s||!(0!==r||!Iu(t,i,e))||!(0!==a||!Iu(t,n,e))||!(0!==o||!Iu(i,t,n))||!(0!==s||!Iu(i,e,n))}function Iu(t,e,i){return e.x<=Math.max(t.x,i.x)&&e.x>=Math.min(t.x,i.x)&&e.y<=Math.max(t.y,i.y)&&e.y>=Math.min(t.y,i.y)}function Bu(t){return t>0?1:t<0?-1:0}function Ou(t,e){return Pu(t.prev,t,t.next)<0?Pu(t,e,t.next)>=0&&Pu(t,t.prev,e)>=0:Pu(t,e,t.prev)<0||Pu(t,t.next,e)<0}function Fu(t,e){const i=new Uu(t.i,t.x,t.y),n=new Uu(e.i,e.x,e.y),r=t.next,a=e.prev;return t.next=e,e.prev=t,i.next=r,r.prev=i,n.next=i,i.prev=n,a.next=n,n.prev=a,n}function Nu(t,e,i,n){const r=new Uu(t,e,i);return n?(r.next=n.next,r.prev=n,n.next.prev=r,n.next=r):(r.prev=r,r.next=r),r}function Hu(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function Uu(t,e,i){this.i=t,this.x=e,this.y=i,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}class Gu{static area(t){const e=t.length;let i=0;for(let n=e-1,r=0;r<e;n=r++)i+=t[n].x*t[r].y-t[r].x*t[n].y;return.5*i}static isClockWise(t){return Gu.area(t)<0}static triangulateShape(t,e){const i=[],n=[],r=[];Vu(t),Wu(i,t);let a=t.length;e.forEach(Vu);for(let t=0;t<e.length;t++)n.push(a),a+=e[t].length,Wu(i,e[t]);const o=function(t,e,i){i=i||2;const n=e&&e.length,r=n?e[0]*i:t.length;let a=bu(t,0,r,i,!0);const o=[];if(!a||a.next===a.prev)return o;let s,l,u,h,c,d,p;if(n&&(a=function(t,e,i,n){const r=[];let a,o,s,l,u;for(a=0,o=e.length;a<o;a++)s=e[a]*n,l=a<o-1?e[a+1]*n:t.length,u=bu(t,s,l,n,!1),u===u.next&&(u.steiner=!0),r.push(Lu(u));for(r.sort(Tu),a=0;a<r.length;a++)ku(r[a],i),i=yu(i,i.next);return i}(t,e,a,i)),t.length>80*i){s=u=t[0],l=h=t[1];for(let e=i;e<r;e+=i)c=t[e],d=t[e+1],c<s&&(s=c),d<l&&(l=d),c>u&&(u=c),d>h&&(h=d);p=Math.max(u-s,h-l),p=0!==p?1/p:0}return xu(a,o,i,s,l,p),o}(i,n);for(let t=0;t<o.length;t+=3)r.push(o.slice(t,t+3));return r}}function Vu(t){const e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function Wu(t,e){for(let i=0;i<e.length;i++)t.push(e[i].x),t.push(e[i].y)}class ju extends na{constructor(t,e){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const i=this,n=[],r=[];for(let e=0,i=t.length;e<i;e++)a(t[e]);function a(t){const a=[],o=void 0!==e.curveSegments?e.curveSegments:12,s=void 0!==e.steps?e.steps:1;let l=void 0!==e.depth?e.depth:100,u=void 0===e.bevelEnabled||e.bevelEnabled,h=void 0!==e.bevelThickness?e.bevelThickness:6,c=void 0!==e.bevelSize?e.bevelSize:h-2,d=void 0!==e.bevelOffset?e.bevelOffset:0,p=void 0!==e.bevelSegments?e.bevelSegments:3;const m=e.extrudePath,f=void 0!==e.UVGenerator?e.UVGenerator:Yu;void 0!==e.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),l=e.amount);let g,_,v,b,y,x=!1;m&&(g=m.getSpacedPoints(s),x=!0,u=!1,_=m.computeFrenetFrames(s,!1),v=new on,b=new on,y=new on),u||(p=0,h=0,c=0,d=0);const w=t.extractPoints(o);let M=w.shape;const E=w.holes;if(!Gu.isClockWise(M)){M=M.reverse();for(let t=0,e=E.length;t<e;t++){const e=E[t];Gu.isClockWise(e)&&(E[t]=e.reverse())}}const S=Gu.triangulateShape(M,E),T=M;for(let t=0,e=E.length;t<e;t++){const e=E[t];M=M.concat(e)}function k(t,e,i){return e||console.error("THREE.ExtrudeGeometry: vec does not exist"),e.clone().multiplyScalar(i).add(t)}const A=M.length,z=S.length;function L(t,e,i){let n,r,a;const o=t.x-e.x,s=t.y-e.y,l=i.x-t.x,u=i.y-t.y,h=o*o+s*s,c=o*u-s*l;if(Math.abs(c)>Number.EPSILON){const c=Math.sqrt(h),d=Math.sqrt(l*l+u*u),p=e.x-s/c,m=e.y+o/c,f=((i.x-u/d-p)*u-(i.y+l/d-m)*l)/(o*u-s*l);n=p+o*f-t.x,r=m+s*f-t.y;const g=n*n+r*r;if(g<=2)return new Xi(n,r);a=Math.sqrt(g/2)}else{let t=!1;o>Number.EPSILON?l>Number.EPSILON&&(t=!0):o<-Number.EPSILON?l<-Number.EPSILON&&(t=!0):Math.sign(s)===Math.sign(u)&&(t=!0),t?(n=-s,r=o,a=Math.sqrt(h)):(n=o,r=s,a=Math.sqrt(h/2))}return new Xi(n/a,r/a)}const R=[];for(let t=0,e=T.length,i=e-1,n=t+1;t<e;t++,i++,n++)i===e&&(i=0),n===e&&(n=0),R[t]=L(T[t],T[i],T[n]);const C=[];let P,q=R.concat();for(let t=0,e=E.length;t<e;t++){const e=E[t];P=[];for(let t=0,i=e.length,n=i-1,r=t+1;t<i;t++,n++,r++)n===i&&(n=0),r===i&&(r=0),P[t]=L(e[t],e[n],e[r]);C.push(P),q=q.concat(P)}for(let t=0;t<p;t++){const e=t/p,i=h*Math.cos(e*Math.PI/2),n=c*Math.sin(e*Math.PI/2)+d;for(let t=0,e=T.length;t<e;t++){const e=k(T[t],R[t],n);B(e.x,e.y,-i)}for(let t=0,e=E.length;t<e;t++){const e=E[t];P=C[t];for(let t=0,r=e.length;t<r;t++){const r=k(e[t],P[t],n);B(r.x,r.y,-i)}}}const D=c+d;for(let t=0;t<A;t++){const e=u?k(M[t],q[t],D):M[t];x?(b.copy(_.normals[0]).multiplyScalar(e.x),v.copy(_.binormals[0]).multiplyScalar(e.y),y.copy(g[0]).add(b).add(v),B(y.x,y.y,y.z)):B(e.x,e.y,0)}for(let t=1;t<=s;t++)for(let e=0;e<A;e++){const i=u?k(M[e],q[e],D):M[e];x?(b.copy(_.normals[t]).multiplyScalar(i.x),v.copy(_.binormals[t]).multiplyScalar(i.y),y.copy(g[t]).add(b).add(v),B(y.x,y.y,y.z)):B(i.x,i.y,l/s*t)}for(let t=p-1;t>=0;t--){const e=t/p,i=h*Math.cos(e*Math.PI/2),n=c*Math.sin(e*Math.PI/2)+d;for(let t=0,e=T.length;t<e;t++){const e=k(T[t],R[t],n);B(e.x,e.y,l+i)}for(let t=0,e=E.length;t<e;t++){const e=E[t];P=C[t];for(let t=0,r=e.length;t<r;t++){const r=k(e[t],P[t],n);x?B(r.x,r.y+g[s-1].y,g[s-1].x+i):B(r.x,r.y,l+i)}}}function I(t,e){let i=t.length;for(;--i>=0;){const n=i;let r=i-1;r<0&&(r=t.length-1);for(let t=0,i=s+2*p;t<i;t++){const i=A*t,a=A*(t+1);F(e+n+i,e+r+i,e+r+a,e+n+a)}}}function B(t,e,i){a.push(t),a.push(e),a.push(i)}function O(t,e,r){N(t),N(e),N(r);const a=n.length/3,o=f.generateTopUV(i,n,a-3,a-2,a-1);H(o[0]),H(o[1]),H(o[2])}function F(t,e,r,a){N(t),N(e),N(a),N(e),N(r),N(a);const o=n.length/3,s=f.generateSideWallUV(i,n,o-6,o-3,o-2,o-1);H(s[0]),H(s[1]),H(s[3]),H(s[1]),H(s[2]),H(s[3])}function N(t){n.push(a[3*t+0]),n.push(a[3*t+1]),n.push(a[3*t+2])}function H(t){r.push(t.x),r.push(t.y)}!function(){const t=n.length/3;if(u){let t=0,e=A*t;for(let t=0;t<z;t++){const i=S[t];O(i[2]+e,i[1]+e,i[0]+e)}t=s+2*p,e=A*t;for(let t=0;t<z;t++){const i=S[t];O(i[0]+e,i[1]+e,i[2]+e)}}else{for(let t=0;t<z;t++){const e=S[t];O(e[2],e[1],e[0])}for(let t=0;t<z;t++){const e=S[t];O(e[0]+A*s,e[1]+A*s,e[2]+A*s)}}i.addGroup(t,n.length/3-t,0)}(),function(){const t=n.length/3;let e=0;I(T,e),e+=T.length;for(let t=0,i=E.length;t<i;t++){const i=E[t];I(i,e),e+=i.length}i.addGroup(t,n.length/3-t,1)}()}this.setAttribute("position",new Wr(n,3)),this.setAttribute("uv",new Wr(r,2)),this.computeVertexNormals()}toJSON(){const t=na.prototype.toJSON.call(this);return function(t,e,i){if(i.shapes=[],Array.isArray(t))for(let e=0,n=t.length;e<n;e++){const n=t[e];i.shapes.push(n.uuid)}else i.shapes.push(t.uuid);return void 0!==e.extrudePath&&(i.options.extrudePath=e.extrudePath.toJSON()),i}(this.parameters.shapes,this.parameters.options,t)}}const Yu={generateTopUV:function(t,e,i,n,r){const a=e[3*i],o=e[3*i+1],s=e[3*n],l=e[3*n+1],u=e[3*r],h=e[3*r+1];return[new Xi(a,o),new Xi(s,l),new Xi(u,h)]},generateSideWallUV:function(t,e,i,n,r,a){const o=e[3*i],s=e[3*i+1],l=e[3*i+2],u=e[3*n],h=e[3*n+1],c=e[3*n+2],d=e[3*r],p=e[3*r+1],m=e[3*r+2],f=e[3*a],g=e[3*a+1],_=e[3*a+2];return Math.abs(s-h)<.01?[new Xi(o,1-l),new Xi(u,1-c),new Xi(d,1-m),new Xi(f,1-_)]:[new Xi(s,1-l),new Xi(h,1-c),new Xi(p,1-m),new Xi(g,1-_)]}};class Xu extends du{constructor(t=1,e=0){const i=(1+Math.sqrt(5))/2;super([-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],t,e),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e}}}class Zu extends na{constructor(t,e=12,i=0,n=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:i,phiLength:n},e=Math.floor(e),n=Hi(n,0,2*Math.PI);const r=[],a=[],o=[],s=1/e,l=new on,u=new Xi;for(let r=0;r<=e;r++){const h=i+r*s*n,c=Math.sin(h),d=Math.cos(h);for(let i=0;i<=t.length-1;i++)l.x=t[i].x*c,l.y=t[i].y,l.z=t[i].x*d,a.push(l.x,l.y,l.z),u.x=r/e,u.y=i/(t.length-1),o.push(u.x,u.y)}for(let i=0;i<e;i++)for(let e=0;e<t.length-1;e++){const n=e+i*t.length,a=n,o=n+t.length,s=n+t.length+1,l=n+1;r.push(a,o,l),r.push(o,s,l)}if(this.setIndex(r),this.setAttribute("position",new Wr(a,3)),this.setAttribute("uv",new Wr(o,2)),this.computeVertexNormals(),n===2*Math.PI){const i=this.attributes.normal.array,n=new on,r=new on,a=new on,o=e*t.length*3;for(let e=0,s=0;e<t.length;e++,s+=3)n.x=i[s+0],n.y=i[s+1],n.z=i[s+2],r.x=i[o+s+0],r.y=i[o+s+1],r.z=i[o+s+2],a.addVectors(n,r).normalize(),i[s+0]=i[o+s+0]=a.x,i[s+1]=i[o+s+1]=a.y,i[s+2]=i[o+s+2]=a.z}}}class Ju extends du{constructor(t=1,e=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],t,e),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e}}}class Ku extends na{constructor(t,e,i){super(),this.type="ParametricGeometry",this.parameters={func:t,slices:e,stacks:i};const n=[],r=[],a=[],o=[],s=1e-5,l=new on,u=new on,h=new on,c=new on,d=new on;t.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");const p=e+1;for(let n=0;n<=i;n++){const p=n/i;for(let i=0;i<=e;i++){const n=i/e;t(n,p,u),r.push(u.x,u.y,u.z),n-s>=0?(t(n-s,p,h),c.subVectors(u,h)):(t(n+s,p,h),c.subVectors(h,u)),p-s>=0?(t(n,p-s,h),d.subVectors(u,h)):(t(n,p+s,h),d.subVectors(h,u)),l.crossVectors(c,d).normalize(),a.push(l.x,l.y,l.z),o.push(n,p)}}for(let t=0;t<i;t++)for(let i=0;i<e;i++){const e=t*p+i,r=t*p+i+1,a=(t+1)*p+i+1,o=(t+1)*p+i;n.push(e,r,o),n.push(r,a,o)}this.setIndex(n),this.setAttribute("position",new Wr(r,3)),this.setAttribute("normal",new Wr(a,3)),this.setAttribute("uv",new Wr(o,2))}}class $u extends na{constructor(t=.5,e=1,i=8,n=1,r=0,a=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:i,phiSegments:n,thetaStart:r,thetaLength:a},i=Math.max(3,i);const o=[],s=[],l=[],u=[];let h=t;const c=(e-t)/(n=Math.max(1,n)),d=new on,p=new Xi;for(let t=0;t<=n;t++){for(let t=0;t<=i;t++){const n=r+t/i*a;d.x=h*Math.cos(n),d.y=h*Math.sin(n),s.push(d.x,d.y,d.z),l.push(0,0,1),p.x=(d.x/e+1)/2,p.y=(d.y/e+1)/2,u.push(p.x,p.y)}h+=c}for(let t=0;t<n;t++){const e=t*(i+1);for(let t=0;t<i;t++){const n=t+e,r=n,a=n+i+1,s=n+i+2,l=n+1;o.push(r,a,l),o.push(a,s,l)}}this.setIndex(o),this.setAttribute("position",new Wr(s,3)),this.setAttribute("normal",new Wr(l,3)),this.setAttribute("uv",new Wr(u,2))}}class Qu extends na{constructor(t,e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const i=[],n=[],r=[],a=[];let o=0,s=0;if(!1===Array.isArray(t))l(t);else for(let e=0;e<t.length;e++)l(t[e]),this.addGroup(o,s,e),o+=s,s=0;function l(t){const o=n.length/3,l=t.extractPoints(e);let u=l.shape;const h=l.holes;!1===Gu.isClockWise(u)&&(u=u.reverse());for(let t=0,e=h.length;t<e;t++){const e=h[t];!0===Gu.isClockWise(e)&&(h[t]=e.reverse())}const c=Gu.triangulateShape(u,h);for(let t=0,e=h.length;t<e;t++){const e=h[t];u=u.concat(e)}for(let t=0,e=u.length;t<e;t++){const e=u[t];n.push(e.x,e.y,0),r.push(0,0,1),a.push(e.x,e.y)}for(let t=0,e=c.length;t<e;t++){const e=c[t],n=e[0]+o,r=e[1]+o,a=e[2]+o;i.push(n,r,a),s+=3}}this.setIndex(i),this.setAttribute("position",new Wr(n,3)),this.setAttribute("normal",new Wr(r,3)),this.setAttribute("uv",new Wr(a,2))}toJSON(){const t=na.prototype.toJSON.call(this);return function(t,e){if(e.shapes=[],Array.isArray(t))for(let i=0,n=t.length;i<n;i++){const n=t[i];e.shapes.push(n.uuid)}else e.shapes.push(t.uuid);return e}(this.parameters.shapes,t)}}class th extends na{constructor(t=1,e=8,i=6,n=0,r=2*Math.PI,a=0,o=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:i,phiStart:n,phiLength:r,thetaStart:a,thetaLength:o},e=Math.max(3,Math.floor(e)),i=Math.max(2,Math.floor(i));const s=Math.min(a+o,Math.PI);let l=0;const u=[],h=new on,c=new on,d=[],p=[],m=[],f=[];for(let d=0;d<=i;d++){const g=[],_=d/i;let v=0;0==d&&0==a?v=.5/e:d==i&&s==Math.PI&&(v=-.5/e);for(let i=0;i<=e;i++){const s=i/e;h.x=-t*Math.cos(n+s*r)*Math.sin(a+_*o),h.y=t*Math.cos(a+_*o),h.z=t*Math.sin(n+s*r)*Math.sin(a+_*o),p.push(h.x,h.y,h.z),c.copy(h).normalize(),m.push(c.x,c.y,c.z),f.push(s+v,1-_),g.push(l++)}u.push(g)}for(let t=0;t<i;t++)for(let n=0;n<e;n++){const e=u[t][n+1],r=u[t][n],o=u[t+1][n],l=u[t+1][n+1];(0!==t||a>0)&&d.push(e,r,l),(t!==i-1||s<Math.PI)&&d.push(r,o,l)}this.setIndex(d),this.setAttribute("position",new Wr(p,3)),this.setAttribute("normal",new Wr(m,3)),this.setAttribute("uv",new Wr(f,2))}}class eh extends du{constructor(t=1,e=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],t,e),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e}}}class ih extends ju{constructor(t,e={}){const i=e.font;if(!i||!i.isFont)return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new na;const n=i.generateShapes(t,e.size);e.depth=void 0!==e.height?e.height:50,void 0===e.bevelThickness&&(e.bevelThickness=10),void 0===e.bevelSize&&(e.bevelSize=8),void 0===e.bevelEnabled&&(e.bevelEnabled=!1),super(n,e),this.type="TextGeometry"}}class nh extends na{constructor(t=1,e=.4,i=8,n=6,r=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:i,tubularSegments:n,arc:r},i=Math.floor(i),n=Math.floor(n);const a=[],o=[],s=[],l=[],u=new on,h=new on,c=new on;for(let a=0;a<=i;a++)for(let d=0;d<=n;d++){const p=d/n*r,m=a/i*Math.PI*2;h.x=(t+e*Math.cos(m))*Math.cos(p),h.y=(t+e*Math.cos(m))*Math.sin(p),h.z=e*Math.sin(m),o.push(h.x,h.y,h.z),u.x=t*Math.cos(p),u.y=t*Math.sin(p),c.subVectors(h,u).normalize(),s.push(c.x,c.y,c.z),l.push(d/n),l.push(a/i)}for(let t=1;t<=i;t++)for(let e=1;e<=n;e++){const i=(n+1)*t+e-1,r=(n+1)*(t-1)+e-1,o=(n+1)*(t-1)+e,s=(n+1)*t+e;a.push(i,r,s),a.push(r,o,s)}this.setIndex(a),this.setAttribute("position",new Wr(o,3)),this.setAttribute("normal",new Wr(s,3)),this.setAttribute("uv",new Wr(l,2))}}class rh extends na{constructor(t=1,e=.4,i=64,n=8,r=2,a=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:i,radialSegments:n,p:r,q:a},i=Math.floor(i),n=Math.floor(n);const o=[],s=[],l=[],u=[],h=new on,c=new on,d=new on,p=new on,m=new on,f=new on,g=new on;for(let o=0;o<=i;++o){const v=o/i*r*Math.PI*2;_(v,r,a,t,d),_(v+.01,r,a,t,p),f.subVectors(p,d),g.addVectors(p,d),m.crossVectors(f,g),g.crossVectors(m,f),m.normalize(),g.normalize();for(let t=0;t<=n;++t){const r=t/n*Math.PI*2,a=-e*Math.cos(r),p=e*Math.sin(r);h.x=d.x+(a*g.x+p*m.x),h.y=d.y+(a*g.y+p*m.y),h.z=d.z+(a*g.z+p*m.z),s.push(h.x,h.y,h.z),c.subVectors(h,d).normalize(),l.push(c.x,c.y,c.z),u.push(o/i),u.push(t/n)}}for(let t=1;t<=i;t++)for(let e=1;e<=n;e++){const i=(n+1)*(t-1)+(e-1),r=(n+1)*t+(e-1),a=(n+1)*t+e,s=(n+1)*(t-1)+e;o.push(i,r,s),o.push(r,a,s)}function _(t,e,i,n,r){const a=Math.cos(t),o=Math.sin(t),s=i/e*t,l=Math.cos(s);r.x=n*(2+l)*.5*a,r.y=n*(2+l)*o*.5,r.z=n*Math.sin(s)*.5}this.setIndex(o),this.setAttribute("position",new Wr(s,3)),this.setAttribute("normal",new Wr(l,3)),this.setAttribute("uv",new Wr(u,2))}}class ah extends na{constructor(t,e=64,i=1,n=8,r=!1){super(),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:i,radialSegments:n,closed:r};const a=t.computeFrenetFrames(e,r);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;const o=new on,s=new on,l=new Xi;let u=new on;const h=[],c=[],d=[],p=[];function m(r){u=t.getPointAt(r/e,u);const l=a.normals[r],d=a.binormals[r];for(let t=0;t<=n;t++){const e=t/n*Math.PI*2,r=Math.sin(e),a=-Math.cos(e);s.x=a*l.x+r*d.x,s.y=a*l.y+r*d.y,s.z=a*l.z+r*d.z,s.normalize(),c.push(s.x,s.y,s.z),o.x=u.x+i*s.x,o.y=u.y+i*s.y,o.z=u.z+i*s.z,h.push(o.x,o.y,o.z)}}!function(){for(let t=0;t<e;t++)m(t);m(!1===r?e:0),function(){for(let t=0;t<=e;t++)for(let i=0;i<=n;i++)l.x=t/e,l.y=i/n,d.push(l.x,l.y)}(),function(){for(let t=1;t<=e;t++)for(let e=1;e<=n;e++){const i=(n+1)*(t-1)+(e-1),r=(n+1)*t+(e-1),a=(n+1)*t+e,o=(n+1)*(t-1)+e;p.push(i,r,o),p.push(r,a,o)}}()}(),this.setIndex(p),this.setAttribute("position",new Wr(h,3)),this.setAttribute("normal",new Wr(c,3)),this.setAttribute("uv",new Wr(d,2))}toJSON(){const t=na.prototype.toJSON.call(this);return t.path=this.parameters.path.toJSON(),t}}class oh extends na{constructor(t){if(super(),this.type="WireframeGeometry",!0===t.isGeometry)return void console.error("THREE.WireframeGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");const e=[],i=[0,0],n={},r=new on;if(null!==t.index){const a=t.attributes.position,o=t.index;let s=t.groups;0===s.length&&(s=[{start:0,count:o.count,materialIndex:0}]);for(let t=0,e=s.length;t<e;++t){const e=s[t],r=e.start;for(let t=r,a=r+e.count;t<a;t+=3)for(let e=0;e<3;e++){const r=o.getX(t+e),a=o.getX(t+(e+1)%3);i[0]=Math.min(r,a),i[1]=Math.max(r,a);const s=i[0]+","+i[1];void 0===n[s]&&(n[s]={index1:i[0],index2:i[1]})}}for(const t in n){const i=n[t];r.fromBufferAttribute(a,i.index1),e.push(r.x,r.y,r.z),r.fromBufferAttribute(a,i.index2),e.push(r.x,r.y,r.z)}}else{const i=t.attributes.position;for(let t=0,n=i.count/3;t<n;t++)for(let n=0;n<3;n++){const a=3*t+n;r.fromBufferAttribute(i,a),e.push(r.x,r.y,r.z);const o=3*t+(n+1)%3;r.fromBufferAttribute(i,o),e.push(r.x,r.y,r.z)}}this.setAttribute("position",new Wr(e,3))}}var sh=Object.freeze({__proto__:null,BoxGeometry:Ma,BoxBufferGeometry:Ma,CircleGeometry:uu,CircleBufferGeometry:uu,ConeGeometry:cu,ConeBufferGeometry:cu,CylinderGeometry:hu,CylinderBufferGeometry:hu,DodecahedronGeometry:pu,DodecahedronBufferGeometry:pu,EdgesGeometry:vu,ExtrudeGeometry:ju,ExtrudeBufferGeometry:ju,IcosahedronGeometry:Xu,IcosahedronBufferGeometry:Xu,LatheGeometry:Zu,LatheBufferGeometry:Zu,OctahedronGeometry:Ju,OctahedronBufferGeometry:Ju,ParametricGeometry:Ku,ParametricBufferGeometry:Ku,PlaneGeometry:Na,PlaneBufferGeometry:Na,PolyhedronGeometry:du,PolyhedronBufferGeometry:du,RingGeometry:$u,RingBufferGeometry:$u,ShapeGeometry:Qu,ShapeBufferGeometry:Qu,SphereGeometry:th,SphereBufferGeometry:th,TetrahedronGeometry:eh,TetrahedronBufferGeometry:eh,TextGeometry:ih,TextBufferGeometry:ih,TorusGeometry:nh,TorusBufferGeometry:nh,TorusKnotGeometry:rh,TorusKnotBufferGeometry:rh,TubeGeometry:ah,TubeBufferGeometry:ah,WireframeGeometry:oh});class lh extends Sr{constructor(t){super(),this.type="ShadowMaterial",this.color=new Cr(0),this.transparent=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this}}lh.prototype.isShadowMaterial=!0;class uh extends ka{constructor(t){super(t),this.type="RawShaderMaterial"}}uh.prototype.isRawShaderMaterial=!0;class hh extends Sr{constructor(t){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Cr(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Cr(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=oi,this.normalScale=new Xi(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.vertexTangents=!1,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.flatShading=t.flatShading,this.vertexTangents=t.vertexTangents,this}}hh.prototype.isMeshStandardMaterial=!0;class ch extends hh{constructor(t){super(),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Xi(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,Object.defineProperty(this,"ior",{get:function(){return(1+.4*this.reflectivity)/(1-.4*this.reflectivity)},set:function(t){this.reflectivity=Hi(2.5*(t-1)/(t+1),0,1)}}),this.sheen=null,this.transmission=0,this.transmissionMap=null,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.reflectivity=t.reflectivity,t.sheen?this.sheen=(this.sheen||new Cr).copy(t.sheen):this.sheen=null,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this}}ch.prototype.isMeshPhysicalMaterial=!0;class dh extends Sr{constructor(t){super(),this.type="MeshPhongMaterial",this.color=new Cr(16777215),this.specular=new Cr(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Cr(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=oi,this.normalScale=new Xi(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Z,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.flatShading=t.flatShading,this}}dh.prototype.isMeshPhongMaterial=!0;class ph extends Sr{constructor(t){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Cr(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Cr(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=oi,this.normalScale=new Xi(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this}}ph.prototype.isMeshToonMaterial=!0;class mh extends Sr{constructor(t){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=oi,this.normalScale=new Xi(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.flatShading=t.flatShading,this}}mh.prototype.isMeshNormalMaterial=!0;class fh extends Sr{constructor(t){super(),this.type="MeshLambertMaterial",this.color=new Cr(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Cr(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Z,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this}}fh.prototype.isMeshLambertMaterial=!0;class gh extends Sr{constructor(t){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Cr(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=oi,this.normalScale=new Xi(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.flatShading=t.flatShading,this}}gh.prototype.isMeshMatcapMaterial=!0;class _h extends Hl{constructor(t){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(t){return super.copy(t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this}}_h.prototype.isLineDashedMaterial=!0;var vh=Object.freeze({__proto__:null,ShadowMaterial:lh,SpriteMaterial:sl,RawShaderMaterial:uh,ShaderMaterial:ka,PointsMaterial:$l,MeshPhysicalMaterial:ch,MeshStandardMaterial:hh,MeshPhongMaterial:dh,MeshToonMaterial:ph,MeshNormalMaterial:mh,MeshLambertMaterial:fh,MeshDepthMaterial:Hs,MeshDistanceMaterial:Us,MeshBasicMaterial:Pr,MeshMatcapMaterial:gh,LineDashedMaterial:_h,LineBasicMaterial:Hl,Material:Sr});const bh={arraySlice:function(t,e,i){return bh.isTypedArray(t)?new t.constructor(t.subarray(e,void 0!==i?i:t.length)):t.slice(e,i)},convertArray:function(t,e,i){return!t||!i&&t.constructor===e?t:"number"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)},getKeyframeOrder:function(t){const e=t.length,i=new Array(e);for(let t=0;t!==e;++t)i[t]=t;return i.sort((function(e,i){return t[e]-t[i]})),i},sortedArray:function(t,e,i){const n=t.length,r=new t.constructor(n);for(let a=0,o=0;o!==n;++a){const n=i[a]*e;for(let i=0;i!==e;++i)r[o++]=t[n+i]}return r},flattenJSON:function(t,e,i,n){let r=1,a=t[0];for(;void 0!==a&&void 0===a[n];)a=t[r++];if(void 0===a)return;let o=a[n];if(void 0!==o)if(Array.isArray(o))do{o=a[n],void 0!==o&&(e.push(a.time),i.push.apply(i,o)),a=t[r++]}while(void 0!==a);else if(void 0!==o.toArray)do{o=a[n],void 0!==o&&(e.push(a.time),o.toArray(i,i.length)),a=t[r++]}while(void 0!==a);else do{o=a[n],void 0!==o&&(e.push(a.time),i.push(o)),a=t[r++]}while(void 0!==a)},subclip:function(t,e,i,n,r=30){const a=t.clone();a.name=e;const o=[];for(let t=0;t<a.tracks.length;++t){const e=a.tracks[t],s=e.getValueSize(),l=[],u=[];for(let t=0;t<e.times.length;++t){const a=e.times[t]*r;if(!(a<i||a>=n)){l.push(e.times[t]);for(let i=0;i<s;++i)u.push(e.values[t*s+i])}}0!==l.length&&(e.times=bh.convertArray(l,e.times.constructor),e.values=bh.convertArray(u,e.values.constructor),o.push(e))}a.tracks=o;let s=1/0;for(let t=0;t<a.tracks.length;++t)s>a.tracks[t].times[0]&&(s=a.tracks[t].times[0]);for(let t=0;t<a.tracks.length;++t)a.tracks[t].shift(-1*s);return a.resetDuration(),a},makeClipAdditive:function(t,e=0,i=t,n=30){n<=0&&(n=30);const r=i.tracks.length,a=e/n;for(let e=0;e<r;++e){const n=i.tracks[e],r=n.ValueTypeName;if("bool"===r||"string"===r)continue;const o=t.tracks.find((function(t){return t.name===n.name&&t.ValueTypeName===r}));if(void 0===o)continue;let s=0;const l=n.getValueSize();n.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(s=l/3);let u=0;const h=o.getValueSize();o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(u=h/3);const c=n.times.length-1;let d;if(a<=n.times[0]){const t=s,e=l-s;d=bh.arraySlice(n.values,t,e)}else if(a>=n.times[c]){const t=c*l+s,e=t+l-s;d=bh.arraySlice(n.values,t,e)}else{const t=n.createInterpolant(),e=s,i=l-s;t.evaluate(a),d=bh.arraySlice(t.resultBuffer,e,i)}"quaternion"===r&&(new an).fromArray(d).normalize().conjugate().toArray(d);const p=o.times.length;for(let t=0;t<p;++t){const e=t*h+u;if("quaternion"===r)an.multiplyQuaternionsFlat(o.values,e,d,0,o.values,e);else{const t=h-2*u;for(let i=0;i<t;++i)o.values[e+i]-=d[i]}}}return t.blendMode=je,t}};class yh{constructor(t,e,i,n){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==n?n:new e.constructor(i),this.sampleValues=e,this.valueSize=i,this.settings=null,this.DefaultSettings_={}}evaluate(t){const e=this.parameterPositions;let i=this._cachedIndex,n=e[i],r=e[i-1];t:{e:{let a;i:{n:if(!(t<n)){for(let a=i+2;;){if(void 0===n){if(t<r)break n;return i=e.length,this._cachedIndex=i,this.afterEnd_(i-1,t,r)}if(i===a)break;if(r=n,n=e[++i],t<n)break e}a=e.length;break i}if(t>=r)break t;{const o=e[1];t<o&&(i=2,r=o);for(let a=i-2;;){if(void 0===r)return this._cachedIndex=0,this.beforeStart_(0,t,n);if(i===a)break;if(n=r,r=e[--i-1],t>=r)break e}a=i,i=0}}for(;i<a;){const n=i+a>>>1;t<e[n]?a=n:i=n+1}if(n=e[i],r=e[i-1],void 0===r)return this._cachedIndex=0,this.beforeStart_(0,t,n);if(void 0===n)return i=e.length,this._cachedIndex=i,this.afterEnd_(i-1,r,t)}this._cachedIndex=i,this.intervalChanged_(i,r,n)}return this.interpolate_(i,r,t,n)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){const e=this.resultBuffer,i=this.sampleValues,n=this.valueSize,r=t*n;for(let t=0;t!==n;++t)e[t]=i[r+t];return e}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}yh.prototype.beforeStart_=yh.prototype.copySampleValue_,yh.prototype.afterEnd_=yh.prototype.copySampleValue_;class xh extends yh{constructor(t,e,i,n){super(t,e,i,n),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Ue,endingEnd:Ue}}intervalChanged_(t,e,i){const n=this.parameterPositions;let r=t-2,a=t+1,o=n[r],s=n[a];if(void 0===o)switch(this.getSettings_().endingStart){case Ge:r=t,o=2*e-i;break;case Ve:r=n.length-2,o=e+n[r]-n[r+1];break;default:r=t,o=i}if(void 0===s)switch(this.getSettings_().endingEnd){case Ge:a=t,s=2*i-e;break;case Ve:a=1,s=i+n[1]-n[0];break;default:a=t-1,s=e}const l=.5*(i-e),u=this.valueSize;this._weightPrev=l/(e-o),this._weightNext=l/(s-i),this._offsetPrev=r*u,this._offsetNext=a*u}interpolate_(t,e,i,n){const r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=t*o,l=s-o,u=this._offsetPrev,h=this._offsetNext,c=this._weightPrev,d=this._weightNext,p=(i-e)/(n-e),m=p*p,f=m*p,g=-c*f+2*c*m-c*p,_=(1+c)*f+(-1.5-2*c)*m+(-.5+c)*p+1,v=(-1-d)*f+(1.5+d)*m+.5*p,b=d*f-d*m;for(let t=0;t!==o;++t)r[t]=g*a[u+t]+_*a[l+t]+v*a[s+t]+b*a[h+t];return r}}class wh extends yh{constructor(t,e,i,n){super(t,e,i,n)}interpolate_(t,e,i,n){const r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=t*o,l=s-o,u=(i-e)/(n-e),h=1-u;for(let t=0;t!==o;++t)r[t]=a[l+t]*h+a[s+t]*u;return r}}class Mh extends yh{constructor(t,e,i,n){super(t,e,i,n)}interpolate_(t){return this.copySampleValue_(t-1)}}class Eh{constructor(t,e,i,n){if(void 0===t)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===e||0===e.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=bh.convertArray(e,this.TimeBufferType),this.values=bh.convertArray(i,this.ValueBufferType),this.setInterpolation(n||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let i;if(e.toJSON!==this.toJSON)i=e.toJSON(t);else{i={name:t.name,times:bh.convertArray(t.times,Array),values:bh.convertArray(t.values,Array)};const e=t.getInterpolation();e!==t.DefaultInterpolation&&(i.interpolation=e)}return i.type=t.ValueTypeName,i}InterpolantFactoryMethodDiscrete(t){return new Mh(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new wh(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new xh(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case Fe:e=this.InterpolantFactoryMethodDiscrete;break;case Ne:e=this.InterpolantFactoryMethodLinear;break;case He:e=this.InterpolantFactoryMethodSmooth}if(void 0===e){const e="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(e);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",e),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Fe;case this.InterpolantFactoryMethodLinear:return Ne;case this.InterpolantFactoryMethodSmooth:return He}}getValueSize(){return this.values.length/this.times.length}shift(t){if(0!==t){const e=this.times;for(let i=0,n=e.length;i!==n;++i)e[i]+=t}return this}scale(t){if(1!==t){const e=this.times;for(let i=0,n=e.length;i!==n;++i)e[i]*=t}return this}trim(t,e){const i=this.times,n=i.length;let r=0,a=n-1;for(;r!==n&&i[r]<t;)++r;for(;-1!==a&&i[a]>e;)--a;if(++a,0!==r||a!==n){r>=a&&(a=Math.max(a,1),r=a-1);const t=this.getValueSize();this.times=bh.arraySlice(i,r,a),this.values=bh.arraySlice(this.values,r*t,a*t)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const i=this.times,n=this.values,r=i.length;0===r&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let a=null;for(let e=0;e!==r;e++){const n=i[e];if("number"==typeof n&&isNaN(n)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,e,n),t=!1;break}if(null!==a&&a>n){console.error("THREE.KeyframeTrack: Out of order keys.",this,e,n,a),t=!1;break}a=n}if(void 0!==n&&bh.isTypedArray(n))for(let e=0,i=n.length;e!==i;++e){const i=n[e];if(isNaN(i)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,e,i),t=!1;break}}return t}optimize(){const t=bh.arraySlice(this.times),e=bh.arraySlice(this.values),i=this.getValueSize(),n=this.getInterpolation()===He,r=t.length-1;let a=1;for(let o=1;o<r;++o){let r=!1;const s=t[o];if(s!==t[o+1]&&(1!==o||s!==t[0]))if(n)r=!0;else{const t=o*i,n=t-i,a=t+i;for(let o=0;o!==i;++o){const i=e[t+o];if(i!==e[n+o]||i!==e[a+o]){r=!0;break}}}if(r){if(o!==a){t[a]=t[o];const n=o*i,r=a*i;for(let t=0;t!==i;++t)e[r+t]=e[n+t]}++a}}if(r>0){t[a]=t[r];for(let t=r*i,n=a*i,o=0;o!==i;++o)e[n+o]=e[t+o];++a}return a!==t.length?(this.times=bh.arraySlice(t,0,a),this.values=bh.arraySlice(e,0,a*i)):(this.times=t,this.values=e),this}clone(){const t=bh.arraySlice(this.times,0),e=bh.arraySlice(this.values,0),i=new(0,this.constructor)(this.name,t,e);return i.createInterpolant=this.createInterpolant,i}}Eh.prototype.TimeBufferType=Float32Array,Eh.prototype.ValueBufferType=Float32Array,Eh.prototype.DefaultInterpolation=Ne;class Sh extends Eh{}Sh.prototype.ValueTypeName="bool",Sh.prototype.ValueBufferType=Array,Sh.prototype.DefaultInterpolation=Fe,Sh.prototype.InterpolantFactoryMethodLinear=void 0,Sh.prototype.InterpolantFactoryMethodSmooth=void 0;class Th extends Eh{}Th.prototype.ValueTypeName="color";class kh extends Eh{}kh.prototype.ValueTypeName="number";class Ah extends yh{constructor(t,e,i,n){super(t,e,i,n)}interpolate_(t,e,i,n){const r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=(i-e)/(n-e);let l=t*o;for(let t=l+o;l!==t;l+=4)an.slerpFlat(r,0,a,l-o,a,l,s);return r}}class zh extends Eh{InterpolantFactoryMethodLinear(t){return new Ah(this.times,this.values,this.getValueSize(),t)}}zh.prototype.ValueTypeName="quaternion",zh.prototype.DefaultInterpolation=Ne,zh.prototype.InterpolantFactoryMethodSmooth=void 0;class Lh extends Eh{}Lh.prototype.ValueTypeName="string",Lh.prototype.ValueBufferType=Array,Lh.prototype.DefaultInterpolation=Fe,Lh.prototype.InterpolantFactoryMethodLinear=void 0,Lh.prototype.InterpolantFactoryMethodSmooth=void 0;class Rh extends Eh{}Rh.prototype.ValueTypeName="vector";class Ch{constructor(t,e=-1,i,n=We){this.name=t,this.tracks=i,this.duration=e,this.blendMode=n,this.uuid=Ni(),this.duration<0&&this.resetDuration()}static parse(t){const e=[],i=t.tracks,n=1/(t.fps||1);for(let t=0,r=i.length;t!==r;++t)e.push(Ph(i[t]).scale(n));const r=new this(t.name,t.duration,e,t.blendMode);return r.uuid=t.uuid,r}static toJSON(t){const e=[],i=t.tracks,n={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let t=0,n=i.length;t!==n;++t)e.push(Eh.toJSON(i[t]));return n}static CreateFromMorphTargetSequence(t,e,i,n){const r=e.length,a=[];for(let t=0;t<r;t++){let o=[],s=[];o.push((t+r-1)%r,t,(t+1)%r),s.push(0,1,0);const l=bh.getKeyframeOrder(o);o=bh.sortedArray(o,1,l),s=bh.sortedArray(s,1,l),n||0!==o[0]||(o.push(r),s.push(s[0])),a.push(new kh(".morphTargetInfluences["+e[t].name+"]",o,s).scale(1/i))}return new this(t,-1,a)}static findByName(t,e){let i=t;if(!Array.isArray(t)){const e=t;i=e.geometry&&e.geometry.animations||e.animations}for(let t=0;t<i.length;t++)if(i[t].name===e)return i[t];return null}static CreateClipsFromMorphTargetSequences(t,e,i){const n={},r=/^([\w-]*?)([\d]+)$/;for(let e=0,i=t.length;e<i;e++){const i=t[e],a=i.name.match(r);if(a&&a.length>1){const t=a[1];let e=n[t];e||(n[t]=e=[]),e.push(i)}}const a=[];for(const t in n)a.push(this.CreateFromMorphTargetSequence(t,n[t],e,i));return a}static parseAnimation(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const i=function(t,e,i,n,r){if(0!==i.length){const a=[],o=[];bh.flattenJSON(i,a,o,n),0!==a.length&&r.push(new t(e,a,o))}},n=[],r=t.name||"default",a=t.fps||30,o=t.blendMode;let s=t.length||-1;const l=t.hierarchy||[];for(let t=0;t<l.length;t++){const r=l[t].keys;if(r&&0!==r.length)if(r[0].morphTargets){const t={};let e;for(e=0;e<r.length;e++)if(r[e].morphTargets)for(let i=0;i<r[e].morphTargets.length;i++)t[r[e].morphTargets[i]]=-1;for(const i in t){const t=[],a=[];for(let n=0;n!==r[e].morphTargets.length;++n){const n=r[e];t.push(n.time),a.push(n.morphTarget===i?1:0)}n.push(new kh(".morphTargetInfluence["+i+"]",t,a))}s=t.length*(a||1)}else{const a=".bones["+e[t].name+"]";i(Rh,a+".position",r,"pos",n),i(zh,a+".quaternion",r,"rot",n),i(Rh,a+".scale",r,"scl",n)}}return 0===n.length?null:new this(r,s,n,o)}resetDuration(){let t=0;for(let e=0,i=this.tracks.length;e!==i;++e){const i=this.tracks[e];t=Math.max(t,i.times[i.times.length-1])}return this.duration=t,this}trim(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}clone(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function Ph(t){if(void 0===t.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=function(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return kh;case"vector":case"vector2":case"vector3":case"vector4":return Rh;case"color":return Th;case"quaternion":return zh;case"bool":case"boolean":return Sh;case"string":return Lh}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}(t.type);if(void 0===t.times){const e=[],i=[];bh.flattenJSON(t.keys,e,i,"value"),t.times=e,t.values=i}return void 0!==e.parse?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)}const qh={enabled:!1,files:{},add:function(t,e){!1!==this.enabled&&(this.files[t]=e)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};class Dh{constructor(t,e,i){const n=this;let r,a=!1,o=0,s=0;const l=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=i,this.itemStart=function(t){s++,!1===a&&void 0!==n.onStart&&n.onStart(t,o,s),a=!0},this.itemEnd=function(t){o++,void 0!==n.onProgress&&n.onProgress(t,o,s),o===s&&(a=!1,void 0!==n.onLoad&&n.onLoad())},this.itemError=function(t){void 0!==n.onError&&n.onError(t)},this.resolveURL=function(t){return r?r(t):t},this.setURLModifier=function(t){return r=t,this},this.addHandler=function(t,e){return l.push(t,e),this},this.removeHandler=function(t){const e=l.indexOf(t);return-1!==e&&l.splice(e,2),this},this.getHandler=function(t){for(let e=0,i=l.length;e<i;e+=2){const i=l[e],n=l[e+1];if(i.global&&(i.lastIndex=0),i.test(t))return n}return null}}}const Ih=new Dh;class Bh{constructor(t){this.manager=void 0!==t?t:Ih,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const i=this;return new Promise((function(n,r){i.load(t,n,e,r)}))}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}}const Oh={};class Fh extends Bh{constructor(t){super(t)}load(t,e,i,n){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,a=qh.get(t);if(void 0!==a)return r.manager.itemStart(t),setTimeout((function(){e&&e(a),r.manager.itemEnd(t)}),0),a;if(void 0!==Oh[t])return void Oh[t].push({onLoad:e,onProgress:i,onError:n});const o=t.match(/^data:(.*?)(;base64)?,(.*)$/);let s;if(o){const i=o[1],a=!!o[2];let s=o[3];s=decodeURIComponent(s),a&&(s=atob(s));try{let n;const a=(this.responseType||"").toLowerCase();switch(a){case"arraybuffer":case"blob":const t=new Uint8Array(s.length);for(let e=0;e<s.length;e++)t[e]=s.charCodeAt(e);n="blob"===a?new Blob([t.buffer],{type:i}):t.buffer;break;case"document":const e=new DOMParser;n=e.parseFromString(s,i);break;case"json":n=JSON.parse(s);break;default:n=s}setTimeout((function(){e&&e(n),r.manager.itemEnd(t)}),0)}catch(e){setTimeout((function(){n&&n(e),r.manager.itemError(t),r.manager.itemEnd(t)}),0)}}else{Oh[t]=[],Oh[t].push({onLoad:e,onProgress:i,onError:n}),s=new XMLHttpRequest,s.open("GET",t,!0),s.addEventListener("load",(function(e){const i=this.response,n=Oh[t];if(delete Oh[t],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),qh.add(t,i);for(let t=0,e=n.length;t<e;t++){const e=n[t];e.onLoad&&e.onLoad(i)}r.manager.itemEnd(t)}else{for(let t=0,i=n.length;t<i;t++){const i=n[t];i.onError&&i.onError(e)}r.manager.itemError(t),r.manager.itemEnd(t)}}),!1),s.addEventListener("progress",(function(e){const i=Oh[t];for(let t=0,n=i.length;t<n;t++){const n=i[t];n.onProgress&&n.onProgress(e)}}),!1),s.addEventListener("error",(function(e){const i=Oh[t];delete Oh[t];for(let t=0,n=i.length;t<n;t++){const n=i[t];n.onError&&n.onError(e)}r.manager.itemError(t),r.manager.itemEnd(t)}),!1),s.addEventListener("abort",(function(e){const i=Oh[t];delete Oh[t];for(let t=0,n=i.length;t<n;t++){const n=i[t];n.onError&&n.onError(e)}r.manager.itemError(t),r.manager.itemEnd(t)}),!1),void 0!==this.responseType&&(s.responseType=this.responseType),void 0!==this.withCredentials&&(s.withCredentials=this.withCredentials),s.overrideMimeType&&s.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain");for(const t in this.requestHeader)s.setRequestHeader(t,this.requestHeader[t]);s.send(null)}return r.manager.itemStart(t),s}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}}class Nh extends Bh{constructor(t){super(t)}load(t,e,i,n){const r=this,a=new Fh(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(t,(function(i){try{e(r.parse(JSON.parse(i)))}catch(e){n?n(e):console.error(e),r.manager.itemError(t)}}),i,n)}parse(t){const e=[];for(let i=0;i<t.length;i++){const n=Ch.parse(t[i]);e.push(n)}return e}}class Hh extends Bh{constructor(t){super(t)}load(t,e,i,n){const r=this,a=[],o=new ou,s=new Fh(this.manager);s.setPath(this.path),s.setResponseType("arraybuffer"),s.setRequestHeader(this.requestHeader),s.setWithCredentials(r.withCredentials);let l=0;function u(u){s.load(t[u],(function(t){const i=r.parse(t,!0);a[u]={width:i.width,height:i.height,format:i.format,mipmaps:i.mipmaps},l+=1,6===l&&(1===i.mipmapCount&&(o.minFilter=bt),o.image=a,o.format=i.format,o.needsUpdate=!0,e&&e(o))}),i,n)}if(Array.isArray(t))for(let e=0,i=t.length;e<i;++e)u(e);else s.load(t,(function(t){const i=r.parse(t,!0);if(i.isCubemap){const t=i.mipmaps.length/i.mipmapCount;for(let e=0;e<t;e++){a[e]={mipmaps:[]};for(let t=0;t<i.mipmapCount;t++)a[e].mipmaps.push(i.mipmaps[e*i.mipmapCount+t]),a[e].format=i.format,a[e].width=i.width,a[e].height=i.height}o.image=a}else o.image.width=i.width,o.image.height=i.height,o.mipmaps=i.mipmaps;1===i.mipmapCount&&(o.minFilter=bt),o.format=i.format,o.needsUpdate=!0,e&&e(o)}),i,n);return o}}class Uh extends Bh{constructor(t){super(t)}load(t,e,i,n){void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,a=qh.get(t);if(void 0!==a)return r.manager.itemStart(t),setTimeout((function(){e&&e(a),r.manager.itemEnd(t)}),0),a;const o=document.createElementNS("http://www.w3.org/1999/xhtml","img");function s(){o.removeEventListener("load",s,!1),o.removeEventListener("error",l,!1),qh.add(t,this),e&&e(this),r.manager.itemEnd(t)}function l(e){o.removeEventListener("load",s,!1),o.removeEventListener("error",l,!1),n&&n(e),r.manager.itemError(t),r.manager.itemEnd(t)}return o.addEventListener("load",s,!1),o.addEventListener("error",l,!1),"data:"!==t.substr(0,5)&&void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),r.manager.itemStart(t),o.src=t,o}}class Gh extends Bh{constructor(t){super(t)}load(t,e,i,n){const r=new Ca,a=new Uh(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);let o=0;function s(i){a.load(t[i],(function(t){r.images[i]=t,o++,6===o&&(r.needsUpdate=!0,e&&e(r))}),void 0,n)}for(let e=0;e<t.length;++e)s(e);return r}}class Vh extends Bh{constructor(t){super(t)}load(t,e,i,n){const r=this,a=new qa,o=new Fh(this.manager);return o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setPath(this.path),o.setWithCredentials(r.withCredentials),o.load(t,(function(t){const i=r.parse(t);i&&(void 0!==i.image?a.image=i.image:void 0!==i.data&&(a.image.width=i.width,a.image.height=i.height,a.image.data=i.data),a.wrapS=void 0!==i.wrapS?i.wrapS:dt,a.wrapT=void 0!==i.wrapT?i.wrapT:dt,a.magFilter=void 0!==i.magFilter?i.magFilter:bt,a.minFilter=void 0!==i.minFilter?i.minFilter:bt,a.anisotropy=void 0!==i.anisotropy?i.anisotropy:1,void 0!==i.encoding&&(a.encoding=i.encoding),void 0!==i.flipY&&(a.flipY=i.flipY),void 0!==i.format&&(a.format=i.format),void 0!==i.type&&(a.type=i.type),void 0!==i.mipmaps&&(a.mipmaps=i.mipmaps,a.minFilter=wt),1===i.mipmapCount&&(a.minFilter=bt),void 0!==i.generateMipmaps&&(a.generateMipmaps=i.generateMipmaps),a.needsUpdate=!0,e&&e(a,i))}),i,n),a}}class Wh extends Bh{constructor(t){super(t)}load(t,e,i,n){const r=new Qi,a=new Uh(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(t,(function(i){r.image=i;const n=t.search(/\.jpe?g($|\?)/i)>0||0===t.search(/^data\:image\/jpeg/);r.format=n?Bt:Ot,r.needsUpdate=!0,void 0!==e&&e(r)}),i,n),r}}class jh{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(t,e){const i=this.getUtoTmapping(t);return this.getPoint(i,e)}getPoints(t=5){const e=[];for(let i=0;i<=t;i++)e.push(this.getPoint(i/t));return e}getSpacedPoints(t=5){const e=[];for(let i=0;i<=t;i++)e.push(this.getPointAt(i/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let i,n=this.getPoint(0),r=0;e.push(0);for(let a=1;a<=t;a++)i=this.getPoint(a/t),r+=i.distanceTo(n),e.push(r),n=i;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e){const i=this.getLengths();let n=0;const r=i.length;let a;a=e||t*i[r-1];let o,s=0,l=r-1;for(;s<=l;)if(n=Math.floor(s+(l-s)/2),o=i[n]-a,o<0)s=n+1;else{if(!(o>0)){l=n;break}l=n-1}if(n=l,i[n]===a)return n/(r-1);const u=i[n];return(n+(a-u)/(i[n+1]-u))/(r-1)}getTangent(t,e){const i=1e-4;let n=t-i,r=t+i;n<0&&(n=0),r>1&&(r=1);const a=this.getPoint(n),o=this.getPoint(r),s=e||(a.isVector2?new Xi:new on);return s.copy(o).sub(a).normalize(),s}getTangentAt(t,e){const i=this.getUtoTmapping(t);return this.getTangent(i,e)}computeFrenetFrames(t,e){const i=new on,n=[],r=[],a=[],o=new on,s=new Bn;for(let e=0;e<=t;e++){const i=e/t;n[e]=this.getTangentAt(i,new on),n[e].normalize()}r[0]=new on,a[0]=new on;let l=Number.MAX_VALUE;const u=Math.abs(n[0].x),h=Math.abs(n[0].y),c=Math.abs(n[0].z);u<=l&&(l=u,i.set(1,0,0)),h<=l&&(l=h,i.set(0,1,0)),c<=l&&i.set(0,0,1),o.crossVectors(n[0],i).normalize(),r[0].crossVectors(n[0],o),a[0].crossVectors(n[0],r[0]);for(let e=1;e<=t;e++){if(r[e]=r[e-1].clone(),a[e]=a[e-1].clone(),o.crossVectors(n[e-1],n[e]),o.length()>Number.EPSILON){o.normalize();const t=Math.acos(Hi(n[e-1].dot(n[e]),-1,1));r[e].applyMatrix4(s.makeRotationAxis(o,t))}a[e].crossVectors(n[e],r[e])}if(!0===e){let e=Math.acos(Hi(r[0].dot(r[t]),-1,1));e/=t,n[0].dot(o.crossVectors(r[0],r[t]))>0&&(e=-e);for(let i=1;i<=t;i++)r[i].applyMatrix4(s.makeRotationAxis(n[i],e*i)),a[i].crossVectors(n[i],r[i])}return{tangents:n,normals:r,binormals:a}}clone(){return(new this.constructor).copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class Yh extends jh{constructor(t=0,e=0,i=1,n=1,r=0,a=2*Math.PI,o=!1,s=0){super(),this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=i,this.yRadius=n,this.aStartAngle=r,this.aEndAngle=a,this.aClockwise=o,this.aRotation=s}getPoint(t,e){const i=e||new Xi,n=2*Math.PI;let r=this.aEndAngle-this.aStartAngle;const a=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=n;for(;r>n;)r-=n;r<Number.EPSILON&&(r=a?0:n),!0!==this.aClockwise||a||(r===n?r=-n:r-=n);const o=this.aStartAngle+t*r;let s=this.aX+this.xRadius*Math.cos(o),l=this.aY+this.yRadius*Math.sin(o);if(0!==this.aRotation){const t=Math.cos(this.aRotation),e=Math.sin(this.aRotation),i=s-this.aX,n=l-this.aY;s=i*t-n*e+this.aX,l=i*e+n*t+this.aY}return i.set(s,l)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}Yh.prototype.isEllipseCurve=!0;class Xh extends Yh{constructor(t,e,i,n,r,a){super(t,e,i,i,n,r,a),this.type="ArcCurve"}}function Zh(){let t=0,e=0,i=0,n=0;function r(r,a,o,s){t=r,e=o,i=-3*r+3*a-2*o-s,n=2*r-2*a+o+s}return{initCatmullRom:function(t,e,i,n,a){r(e,i,a*(i-t),a*(n-e))},initNonuniformCatmullRom:function(t,e,i,n,a,o,s){let l=(e-t)/a-(i-t)/(a+o)+(i-e)/o,u=(i-e)/o-(n-e)/(o+s)+(n-i)/s;l*=o,u*=o,r(e,i,l,u)},calc:function(r){const a=r*r;return t+e*r+i*a+n*(a*r)}}}Xh.prototype.isArcCurve=!0;const Jh=new on,Kh=new Zh,$h=new Zh,Qh=new Zh;class tc extends jh{constructor(t=[],e=!1,i="centripetal",n=.5){super(),this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=i,this.tension=n}getPoint(t,e=new on){const i=e,n=this.points,r=n.length,a=(r-(this.closed?0:1))*t;let o,s,l=Math.floor(a),u=a-l;this.closed?l+=l>0?0:(Math.floor(Math.abs(l)/r)+1)*r:0===u&&l===r-1&&(l=r-2,u=1),this.closed||l>0?o=n[(l-1)%r]:(Jh.subVectors(n[0],n[1]).add(n[0]),o=Jh);const h=n[l%r],c=n[(l+1)%r];if(this.closed||l+2<r?s=n[(l+2)%r]:(Jh.subVectors(n[r-1],n[r-2]).add(n[r-1]),s=Jh),"centripetal"===this.curveType||"chordal"===this.curveType){const t="chordal"===this.curveType?.5:.25;let e=Math.pow(o.distanceToSquared(h),t),i=Math.pow(h.distanceToSquared(c),t),n=Math.pow(c.distanceToSquared(s),t);i<1e-4&&(i=1),e<1e-4&&(e=i),n<1e-4&&(n=i),Kh.initNonuniformCatmullRom(o.x,h.x,c.x,s.x,e,i,n),$h.initNonuniformCatmullRom(o.y,h.y,c.y,s.y,e,i,n),Qh.initNonuniformCatmullRom(o.z,h.z,c.z,s.z,e,i,n)}else"catmullrom"===this.curveType&&(Kh.initCatmullRom(o.x,h.x,c.x,s.x,this.tension),$h.initCatmullRom(o.y,h.y,c.y,s.y,this.tension),Qh.initCatmullRom(o.z,h.z,c.z,s.z,this.tension));return i.set(Kh.calc(u),$h.calc(u),Qh.calc(u)),i}copy(t){super.copy(t),this.points=[];for(let e=0,i=t.points.length;e<i;e++){const i=t.points[e];this.points.push(i.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,i=this.points.length;e<i;e++){const i=this.points[e];t.points.push(i.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,i=t.points.length;e<i;e++){const i=t.points[e];this.points.push((new on).fromArray(i))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function ec(t,e,i,n,r){const a=.5*(n-e),o=.5*(r-i),s=t*t;return(2*i-2*n+a+o)*(t*s)+(-3*i+3*n-2*a-o)*s+a*t+i}function ic(t,e,i,n){return function(t,e){const i=1-t;return i*i*e}(t,e)+function(t,e){return 2*(1-t)*t*e}(t,i)+function(t,e){return t*t*e}(t,n)}function nc(t,e,i,n,r){return function(t,e){const i=1-t;return i*i*i*e}(t,e)+function(t,e){const i=1-t;return 3*i*i*t*e}(t,i)+function(t,e){return 3*(1-t)*t*t*e}(t,n)+function(t,e){return t*t*t*e}(t,r)}tc.prototype.isCatmullRomCurve3=!0;class rc extends jh{constructor(t=new Xi,e=new Xi,i=new Xi,n=new Xi){super(),this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=i,this.v3=n}getPoint(t,e=new Xi){const i=e,n=this.v0,r=this.v1,a=this.v2,o=this.v3;return i.set(nc(t,n.x,r.x,a.x,o.x),nc(t,n.y,r.y,a.y,o.y)),i}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}rc.prototype.isCubicBezierCurve=!0;class ac extends jh{constructor(t=new on,e=new on,i=new on,n=new on){super(),this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=i,this.v3=n}getPoint(t,e=new on){const i=e,n=this.v0,r=this.v1,a=this.v2,o=this.v3;return i.set(nc(t,n.x,r.x,a.x,o.x),nc(t,n.y,r.y,a.y,o.y),nc(t,n.z,r.z,a.z,o.z)),i}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}ac.prototype.isCubicBezierCurve3=!0;class oc extends jh{constructor(t=new Xi,e=new Xi){super(),this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new Xi){const i=e;return 1===t?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(t).add(this.v1)),i}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e){const i=e||new Xi;return i.copy(this.v2).sub(this.v1).normalize(),i}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}oc.prototype.isLineCurve=!0;class sc extends jh{constructor(t=new on,e=new on){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=t,this.v2=e}getPoint(t,e=new on){const i=e;return 1===t?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(t).add(this.v1)),i}getPointAt(t,e){return this.getPoint(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class lc extends jh{constructor(t=new Xi,e=new Xi,i=new Xi){super(),this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=i}getPoint(t,e=new Xi){const i=e,n=this.v0,r=this.v1,a=this.v2;return i.set(ic(t,n.x,r.x,a.x),ic(t,n.y,r.y,a.y)),i}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}lc.prototype.isQuadraticBezierCurve=!0;class uc extends jh{constructor(t=new on,e=new on,i=new on){super(),this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=i}getPoint(t,e=new on){const i=e,n=this.v0,r=this.v1,a=this.v2;return i.set(ic(t,n.x,r.x,a.x),ic(t,n.y,r.y,a.y),ic(t,n.z,r.z,a.z)),i}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}uc.prototype.isQuadraticBezierCurve3=!0;class hc extends jh{constructor(t=[]){super(),this.type="SplineCurve",this.points=t}getPoint(t,e=new Xi){const i=e,n=this.points,r=(n.length-1)*t,a=Math.floor(r),o=r-a,s=n[0===a?a:a-1],l=n[a],u=n[a>n.length-2?n.length-1:a+1],h=n[a>n.length-3?n.length-1:a+2];return i.set(ec(o,s.x,l.x,u.x,h.x),ec(o,s.y,l.y,u.y,h.y)),i}copy(t){super.copy(t),this.points=[];for(let e=0,i=t.points.length;e<i;e++){const i=t.points[e];this.points.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,i=this.points.length;e<i;e++){const i=this.points[e];t.points.push(i.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,i=t.points.length;e<i;e++){const i=t.points[e];this.points.push((new Xi).fromArray(i))}return this}}hc.prototype.isSplineCurve=!0;var cc=Object.freeze({__proto__:null,ArcCurve:Xh,CatmullRomCurve3:tc,CubicBezierCurve:rc,CubicBezierCurve3:ac,EllipseCurve:Yh,LineCurve:oc,LineCurve3:sc,QuadraticBezierCurve:lc,QuadraticBezierCurve3:uc,SplineCurve:hc});class dc extends jh{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new oc(e,t))}getPoint(t){const e=t*this.getLength(),i=this.getCurveLengths();let n=0;for(;n<i.length;){if(i[n]>=e){const t=i[n]-e,r=this.curves[n],a=r.getLength(),o=0===a?0:1-t/a;return r.getPointAt(o)}n++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let i=0,n=this.curves.length;i<n;i++)e+=this.curves[i].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let i=0;i<=t;i++)e.push(this.getPoint(i/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let i;for(let n=0,r=this.curves;n<r.length;n++){const a=r[n],o=a&&a.isEllipseCurve?2*t:a&&(a.isLineCurve||a.isLineCurve3)?1:a&&a.isSplineCurve?t*a.points.length:t,s=a.getPoints(o);for(let t=0;t<s.length;t++){const n=s[t];i&&i.equals(n)||(e.push(n),i=n)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,i=t.curves.length;e<i;e++){const i=t.curves[e];this.curves.push(i.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,i=this.curves.length;e<i;e++){const i=this.curves[e];t.curves.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,i=t.curves.length;e<i;e++){const i=t.curves[e];this.curves.push((new cc[i.type]).fromJSON(i))}return this}}class pc extends dc{constructor(t){super(),this.type="Path",this.currentPoint=new Xi,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,i=t.length;e<i;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const i=new oc(this.currentPoint.clone(),new Xi(t,e));return this.curves.push(i),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,i,n){const r=new lc(this.currentPoint.clone(),new Xi(t,e),new Xi(i,n));return this.curves.push(r),this.currentPoint.set(i,n),this}bezierCurveTo(t,e,i,n,r,a){const o=new rc(this.currentPoint.clone(),new Xi(t,e),new Xi(i,n),new Xi(r,a));return this.curves.push(o),this.currentPoint.set(r,a),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),i=new hc(e);return this.curves.push(i),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,i,n,r,a){const o=this.currentPoint.x,s=this.currentPoint.y;return this.absarc(t+o,e+s,i,n,r,a),this}absarc(t,e,i,n,r,a){return this.absellipse(t,e,i,i,n,r,a),this}ellipse(t,e,i,n,r,a,o,s){const l=this.currentPoint.x,u=this.currentPoint.y;return this.absellipse(t+l,e+u,i,n,r,a,o,s),this}absellipse(t,e,i,n,r,a,o,s){const l=new Yh(t,e,i,n,r,a,o,s);if(this.curves.length>0){const t=l.getPoint(0);t.equals(this.currentPoint)||this.lineTo(t.x,t.y)}this.curves.push(l);const u=l.getPoint(1);return this.currentPoint.copy(u),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class mc extends pc{constructor(t){super(t),this.uuid=Ni(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let i=0,n=this.holes.length;i<n;i++)e[i]=this.holes[i].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,i=t.holes.length;e<i;e++){const i=t.holes[e];this.holes.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,i=this.holes.length;e<i;e++){const i=this.holes[e];t.holes.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,i=t.holes.length;e<i;e++){const i=t.holes[e];this.holes.push((new pc).fromJSON(i))}return this}}class fc extends lr{constructor(t,e=1){super(),this.type="Light",this.color=new Cr(t),this.intensity=e}dispose(){}copy(t){return super.copy(t),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),e}}fc.prototype.isLight=!0;class gc extends fc{constructor(t,e,i){super(t,i),this.type="HemisphereLight",this.position.copy(lr.DefaultUp),this.updateMatrix(),this.groundColor=new Cr(e)}copy(t){return fc.prototype.copy.call(this,t),this.groundColor.copy(t.groundColor),this}}gc.prototype.isHemisphereLight=!0;const _c=new Bn,vc=new on,bc=new on;class yc{constructor(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.mapSize=new Xi(512,512),this.map=null,this.mapPass=null,this.matrix=new Bn,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Ba,this._frameExtents=new Xi(1,1),this._viewportCount=1,this._viewports=[new en(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,i=this.matrix;vc.setFromMatrixPosition(t.matrixWorld),e.position.copy(vc),bc.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(bc),e.updateMatrixWorld(),_c.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(_c),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(e.projectionMatrix),i.multiply(e.matrixWorldInverse)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const t={};return 0!==this.bias&&(t.bias=this.bias),0!==this.normalBias&&(t.normalBias=this.normalBias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class xc extends yc{constructor(){super(new za(50,1,.5,500)),this.focus=1}updateMatrices(t){const e=this.camera,i=2*Fi*t.angle*this.focus,n=this.mapSize.width/this.mapSize.height,r=t.distance||e.far;i===e.fov&&n===e.aspect&&r===e.far||(e.fov=i,e.aspect=n,e.far=r,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(t){return super.copy(t),this.focus=t.focus,this}}xc.prototype.isSpotLightShadow=!0;class wc extends fc{constructor(t,e,i=0,n=Math.PI/3,r=0,a=1){super(t,e),this.type="SpotLight",this.position.copy(lr.DefaultUp),this.updateMatrix(),this.target=new lr,this.distance=i,this.angle=n,this.penumbra=r,this.decay=a,this.shadow=new xc}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}wc.prototype.isSpotLight=!0;const Mc=new Bn,Ec=new on,Sc=new on;class Tc extends yc{constructor(){super(new za(90,1,.5,500)),this._frameExtents=new Xi(4,2),this._viewportCount=6,this._viewports=[new en(2,1,1,1),new en(0,1,1,1),new en(3,1,1,1),new en(1,1,1,1),new en(3,0,1,1),new en(1,0,1,1)],this._cubeDirections=[new on(1,0,0),new on(-1,0,0),new on(0,0,1),new on(0,0,-1),new on(0,1,0),new on(0,-1,0)],this._cubeUps=[new on(0,1,0),new on(0,1,0),new on(0,1,0),new on(0,1,0),new on(0,0,1),new on(0,0,-1)]}updateMatrices(t,e=0){const i=this.camera,n=this.matrix,r=t.distance||i.far;r!==i.far&&(i.far=r,i.updateProjectionMatrix()),Ec.setFromMatrixPosition(t.matrixWorld),i.position.copy(Ec),Sc.copy(i.position),Sc.add(this._cubeDirections[e]),i.up.copy(this._cubeUps[e]),i.lookAt(Sc),i.updateMatrixWorld(),n.makeTranslation(-Ec.x,-Ec.y,-Ec.z),Mc.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Mc)}}Tc.prototype.isPointLightShadow=!0;class kc extends fc{constructor(t,e,i=0,n=1){super(t,e),this.type="PointLight",this.distance=i,this.decay=n,this.shadow=new Tc}get power(){return 4*this.intensity*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}kc.prototype.isPointLight=!0;class Ac extends Aa{constructor(t=-1,e=1,i=1,n=-1,r=.1,a=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=i,this.bottom=n,this.near=r,this.far=a,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this}setViewOffset(t,e,i,n,r,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=i,this.view.offsetY=n,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,n=(this.top+this.bottom)/2;let r=i-t,a=i+t,o=n+e,s=n-e;if(null!==this.view&&this.view.enabled){const t=(this.right-this.left)/this.view.fullWidth/this.zoom,e=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=t*this.view.offsetX,a=r+t*this.view.width,o-=e*this.view.offsetY,s=o-e*this.view.height}this.projectionMatrix.makeOrthographic(r,a,o,s,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}Ac.prototype.isOrthographicCamera=!0;class zc extends yc{constructor(){super(new Ac(-5,5,5,-5,.5,500))}}zc.prototype.isDirectionalLightShadow=!0;class Lc extends fc{constructor(t,e){super(t,e),this.type="DirectionalLight",this.position.copy(lr.DefaultUp),this.updateMatrix(),this.target=new lr,this.shadow=new zc}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}Lc.prototype.isDirectionalLight=!0;class Rc extends fc{constructor(t,e){super(t,e),this.type="AmbientLight"}}Rc.prototype.isAmbientLight=!0;class Cc extends fc{constructor(t,e,i=10,n=10){super(t,e),this.type="RectAreaLight",this.width=i,this.height=n}copy(t){return super.copy(t),this.width=t.width,this.height=t.height,this}toJSON(t){const e=super.toJSON(t);return e.object.width=this.width,e.object.height=this.height,e}}Cc.prototype.isRectAreaLight=!0;class Pc{constructor(){this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new on)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){const i=t.x,n=t.y,r=t.z,a=this.coefficients;return e.copy(a[0]).multiplyScalar(.282095),e.addScaledVector(a[1],.488603*n),e.addScaledVector(a[2],.488603*r),e.addScaledVector(a[3],.488603*i),e.addScaledVector(a[4],i*n*1.092548),e.addScaledVector(a[5],n*r*1.092548),e.addScaledVector(a[6],.315392*(3*r*r-1)),e.addScaledVector(a[7],i*r*1.092548),e.addScaledVector(a[8],.546274*(i*i-n*n)),e}getIrradianceAt(t,e){const i=t.x,n=t.y,r=t.z,a=this.coefficients;return e.copy(a[0]).multiplyScalar(.886227),e.addScaledVector(a[1],1.023328*n),e.addScaledVector(a[2],1.023328*r),e.addScaledVector(a[3],1.023328*i),e.addScaledVector(a[4],.858086*i*n),e.addScaledVector(a[5],.858086*n*r),e.addScaledVector(a[6],.743125*r*r-.247708),e.addScaledVector(a[7],.858086*i*r),e.addScaledVector(a[8],.429043*(i*i-n*n)),e}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,e){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(t.coefficients[i],e);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,e){for(let i=0;i<9;i++)this.coefficients[i].lerp(t.coefficients[i],e);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(t,e=0){const i=this.coefficients;for(let n=0;n<9;n++)i[n].fromArray(t,e+3*n);return this}toArray(t=[],e=0){const i=this.coefficients;for(let n=0;n<9;n++)i[n].toArray(t,e+3*n);return t}static getBasisAt(t,e){const i=t.x,n=t.y,r=t.z;e[0]=.282095,e[1]=.488603*n,e[2]=.488603*r,e[3]=.488603*i,e[4]=1.092548*i*n,e[5]=1.092548*n*r,e[6]=.315392*(3*r*r-1),e[7]=1.092548*i*r,e[8]=.546274*(i*i-n*n)}}Pc.prototype.isSphericalHarmonics3=!0;class qc extends fc{constructor(t=new Pc,e=1){super(void 0,e),this.sh=t}copy(t){return super.copy(t),this.sh.copy(t.sh),this}fromJSON(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this}toJSON(t){const e=super.toJSON(t);return e.object.sh=this.sh.toArray(),e}}qc.prototype.isLightProbe=!0;class Dc extends Bh{constructor(t){super(t),this.textures={}}load(t,e,i,n){const r=this,a=new Fh(r.manager);a.setPath(r.path),a.setRequestHeader(r.requestHeader),a.setWithCredentials(r.withCredentials),a.load(t,(function(i){try{e(r.parse(JSON.parse(i)))}catch(e){n?n(e):console.error(e),r.manager.itemError(t)}}),i,n)}parse(t){const e=this.textures;function i(t){return void 0===e[t]&&console.warn("THREE.MaterialLoader: Undefined texture",t),e[t]}const n=new vh[t.type];if(void 0!==t.uuid&&(n.uuid=t.uuid),void 0!==t.name&&(n.name=t.name),void 0!==t.color&&void 0!==n.color&&n.color.setHex(t.color),void 0!==t.roughness&&(n.roughness=t.roughness),void 0!==t.metalness&&(n.metalness=t.metalness),void 0!==t.sheen&&(n.sheen=(new Cr).setHex(t.sheen)),void 0!==t.emissive&&void 0!==n.emissive&&n.emissive.setHex(t.emissive),void 0!==t.specular&&void 0!==n.specular&&n.specular.setHex(t.specular),void 0!==t.shininess&&(n.shininess=t.shininess),void 0!==t.clearcoat&&(n.clearcoat=t.clearcoat),void 0!==t.clearcoatRoughness&&(n.clearcoatRoughness=t.clearcoatRoughness),void 0!==t.fog&&(n.fog=t.fog),void 0!==t.flatShading&&(n.flatShading=t.flatShading),void 0!==t.blending&&(n.blending=t.blending),void 0!==t.combine&&(n.combine=t.combine),void 0!==t.side&&(n.side=t.side),void 0!==t.shadowSide&&(n.shadowSide=t.shadowSide),void 0!==t.opacity&&(n.opacity=t.opacity),void 0!==t.transparent&&(n.transparent=t.transparent),void 0!==t.alphaTest&&(n.alphaTest=t.alphaTest),void 0!==t.depthTest&&(n.depthTest=t.depthTest),void 0!==t.depthWrite&&(n.depthWrite=t.depthWrite),void 0!==t.colorWrite&&(n.colorWrite=t.colorWrite),void 0!==t.stencilWrite&&(n.stencilWrite=t.stencilWrite),void 0!==t.stencilWriteMask&&(n.stencilWriteMask=t.stencilWriteMask),void 0!==t.stencilFunc&&(n.stencilFunc=t.stencilFunc),void 0!==t.stencilRef&&(n.stencilRef=t.stencilRef),void 0!==t.stencilFuncMask&&(n.stencilFuncMask=t.stencilFuncMask),void 0!==t.stencilFail&&(n.stencilFail=t.stencilFail),void 0!==t.stencilZFail&&(n.stencilZFail=t.stencilZFail),void 0!==t.stencilZPass&&(n.stencilZPass=t.stencilZPass),void 0!==t.wireframe&&(n.wireframe=t.wireframe),void 0!==t.wireframeLinewidth&&(n.wireframeLinewidth=t.wireframeLinewidth),void 0!==t.wireframeLinecap&&(n.wireframeLinecap=t.wireframeLinecap),void 0!==t.wireframeLinejoin&&(n.wireframeLinejoin=t.wireframeLinejoin),void 0!==t.rotation&&(n.rotation=t.rotation),1!==t.linewidth&&(n.linewidth=t.linewidth),void 0!==t.dashSize&&(n.dashSize=t.dashSize),void 0!==t.gapSize&&(n.gapSize=t.gapSize),void 0!==t.scale&&(n.scale=t.scale),void 0!==t.polygonOffset&&(n.polygonOffset=t.polygonOffset),void 0!==t.polygonOffsetFactor&&(n.polygonOffsetFactor=t.polygonOffsetFactor),void 0!==t.polygonOffsetUnits&&(n.polygonOffsetUnits=t.polygonOffsetUnits),void 0!==t.skinning&&(n.skinning=t.skinning),void 0!==t.morphTargets&&(n.morphTargets=t.morphTargets),void 0!==t.morphNormals&&(n.morphNormals=t.morphNormals),void 0!==t.dithering&&(n.dithering=t.dithering),void 0!==t.alphaToCoverage&&(n.alphaToCoverage=t.alphaToCoverage),void 0!==t.premultipliedAlpha&&(n.premultipliedAlpha=t.premultipliedAlpha),void 0!==t.vertexTangents&&(n.vertexTangents=t.vertexTangents),void 0!==t.visible&&(n.visible=t.visible),void 0!==t.toneMapped&&(n.toneMapped=t.toneMapped),void 0!==t.userData&&(n.userData=t.userData),void 0!==t.vertexColors&&("number"==typeof t.vertexColors?n.vertexColors=t.vertexColors>0:n.vertexColors=t.vertexColors),void 0!==t.uniforms)for(const e in t.uniforms){const r=t.uniforms[e];switch(n.uniforms[e]={},r.type){case"t":n.uniforms[e].value=i(r.value);break;case"c":n.uniforms[e].value=(new Cr).setHex(r.value);break;case"v2":n.uniforms[e].value=(new Xi).fromArray(r.value);break;case"v3":n.uniforms[e].value=(new on).fromArray(r.value);break;case"v4":n.uniforms[e].value=(new en).fromArray(r.value);break;case"m3":n.uniforms[e].value=(new Zi).fromArray(r.value);break;case"m4":n.uniforms[e].value=(new Bn).fromArray(r.value);break;default:n.uniforms[e].value=r.value}}if(void 0!==t.defines&&(n.defines=t.defines),void 0!==t.vertexShader&&(n.vertexShader=t.vertexShader),void 0!==t.fragmentShader&&(n.fragmentShader=t.fragmentShader),void 0!==t.extensions)for(const e in t.extensions)n.extensions[e]=t.extensions[e];if(void 0!==t.shading&&(n.flatShading=1===t.shading),void 0!==t.size&&(n.size=t.size),void 0!==t.sizeAttenuation&&(n.sizeAttenuation=t.sizeAttenuation),void 0!==t.map&&(n.map=i(t.map)),void 0!==t.matcap&&(n.matcap=i(t.matcap)),void 0!==t.alphaMap&&(n.alphaMap=i(t.alphaMap)),void 0!==t.bumpMap&&(n.bumpMap=i(t.bumpMap)),void 0!==t.bumpScale&&(n.bumpScale=t.bumpScale),void 0!==t.normalMap&&(n.normalMap=i(t.normalMap)),void 0!==t.normalMapType&&(n.normalMapType=t.normalMapType),void 0!==t.normalScale){let e=t.normalScale;!1===Array.isArray(e)&&(e=[e,e]),n.normalScale=(new Xi).fromArray(e)}return void 0!==t.displacementMap&&(n.displacementMap=i(t.displacementMap)),void 0!==t.displacementScale&&(n.displacementScale=t.displacementScale),void 0!==t.displacementBias&&(n.displacementBias=t.displacementBias),void 0!==t.roughnessMap&&(n.roughnessMap=i(t.roughnessMap)),void 0!==t.metalnessMap&&(n.metalnessMap=i(t.metalnessMap)),void 0!==t.emissiveMap&&(n.emissiveMap=i(t.emissiveMap)),void 0!==t.emissiveIntensity&&(n.emissiveIntensity=t.emissiveIntensity),void 0!==t.specularMap&&(n.specularMap=i(t.specularMap)),void 0!==t.envMap&&(n.envMap=i(t.envMap)),void 0!==t.envMapIntensity&&(n.envMapIntensity=t.envMapIntensity),void 0!==t.reflectivity&&(n.reflectivity=t.reflectivity),void 0!==t.refractionRatio&&(n.refractionRatio=t.refractionRatio),void 0!==t.lightMap&&(n.lightMap=i(t.lightMap)),void 0!==t.lightMapIntensity&&(n.lightMapIntensity=t.lightMapIntensity),void 0!==t.aoMap&&(n.aoMap=i(t.aoMap)),void 0!==t.aoMapIntensity&&(n.aoMapIntensity=t.aoMapIntensity),void 0!==t.gradientMap&&(n.gradientMap=i(t.gradientMap)),void 0!==t.clearcoatMap&&(n.clearcoatMap=i(t.clearcoatMap)),void 0!==t.clearcoatRoughnessMap&&(n.clearcoatRoughnessMap=i(t.clearcoatRoughnessMap)),void 0!==t.clearcoatNormalMap&&(n.clearcoatNormalMap=i(t.clearcoatNormalMap)),void 0!==t.clearcoatNormalScale&&(n.clearcoatNormalScale=(new Xi).fromArray(t.clearcoatNormalScale)),void 0!==t.transmission&&(n.transmission=t.transmission),void 0!==t.transmissionMap&&(n.transmissionMap=i(t.transmissionMap)),n}setTextures(t){return this.textures=t,this}}class Ic{static decodeText(t){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(t);let e="";for(let i=0,n=t.length;i<n;i++)e+=String.fromCharCode(t[i]);try{return decodeURIComponent(escape(e))}catch(t){return e}}static extractUrlBase(t){const e=t.lastIndexOf("/");return-1===e?"./":t.substr(0,e+1)}}class Bc extends na{constructor(){super(),this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(t){return super.copy(t),this.instanceCount=t.instanceCount,this}clone(){return(new this.constructor).copy(this)}toJSON(){const t=super.toJSON(this);return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}}Bc.prototype.isInstancedBufferGeometry=!0;class Oc extends Ir{constructor(t,e,i,n){"number"==typeof i&&(n=i,i=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(t,e,i),this.meshPerAttribute=n||1}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}toJSON(){const t=super.toJSON();return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}Oc.prototype.isInstancedBufferAttribute=!0;class Fc extends Bh{constructor(t){super(t)}load(t,e,i,n){const r=this,a=new Fh(r.manager);a.setPath(r.path),a.setRequestHeader(r.requestHeader),a.setWithCredentials(r.withCredentials),a.load(t,(function(i){try{e(r.parse(JSON.parse(i)))}catch(e){n?n(e):console.error(e),r.manager.itemError(t)}}),i,n)}parse(t){const e={},i={};function n(t,n){if(void 0!==e[n])return e[n];const r=t.interleavedBuffers[n],a=function(t,e){if(void 0!==i[e])return i[e];const n=t.arrayBuffers[e],r=new Uint32Array(n).buffer;return i[e]=r,r}(t,r.buffer),o=Zr(r.type,a),s=new rl(o,r.stride);return s.uuid=r.uuid,e[n]=s,s}const r=t.isInstancedBufferGeometry?new Bc:new na,a=t.data.index;if(void 0!==a){const t=Zr(a.type,a.array);r.setIndex(new Ir(t,1))}const o=t.data.attributes;for(const e in o){const i=o[e];let a;if(i.isInterleavedBufferAttribute){const e=n(t.data,i.data);a=new ol(e,i.itemSize,i.offset,i.normalized)}else{const t=Zr(i.type,i.array);a=new(i.isInstancedBufferAttribute?Oc:Ir)(t,i.itemSize,i.normalized)}void 0!==i.name&&(a.name=i.name),void 0!==i.usage&&a.setUsage(i.usage),void 0!==i.updateRange&&(a.updateRange.offset=i.updateRange.offset,a.updateRange.count=i.updateRange.count),r.setAttribute(e,a)}const s=t.data.morphAttributes;if(s)for(const e in s){const i=s[e],a=[];for(let e=0,r=i.length;e<r;e++){const r=i[e];let o;if(r.isInterleavedBufferAttribute){const e=n(t.data,r.data);o=new ol(e,r.itemSize,r.offset,r.normalized)}else{const t=Zr(r.type,r.array);o=new Ir(t,r.itemSize,r.normalized)}void 0!==r.name&&(o.name=r.name),a.push(o)}r.morphAttributes[e]=a}t.data.morphTargetsRelative&&(r.morphTargetsRelative=!0);const l=t.data.groups||t.data.drawcalls||t.data.offsets;if(void 0!==l)for(let t=0,e=l.length;t!==e;++t){const e=l[t];r.addGroup(e.start,e.count,e.materialIndex)}const u=t.data.boundingSphere;if(void 0!==u){const t=new on;void 0!==u.center&&t.fromArray(u.center),r.boundingSphere=new An(t,u.radius)}return t.name&&(r.name=t.name),t.userData&&(r.userData=t.userData),r}}class Nc extends Bh{constructor(t){super(t)}load(t,e,i,n){const r=this,a=""===this.path?Ic.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||a;const o=new Fh(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(t,(function(i){let a=null;try{a=JSON.parse(i)}catch(e){return void 0!==n&&n(e),void console.error("THREE:ObjectLoader: Can't parse "+t+".",e.message)}const o=a.metadata;void 0!==o&&void 0!==o.type&&"geometry"!==o.type.toLowerCase()?r.parse(a,e):console.error("THREE.ObjectLoader: Can't load "+t)}),i,n)}parse(t,e){const i=this.parseAnimations(t.animations),n=this.parseShapes(t.shapes),r=this.parseGeometries(t.geometries,n),a=this.parseImages(t.images,(function(){void 0!==e&&e(l)})),o=this.parseTextures(t.textures,a),s=this.parseMaterials(t.materials,o),l=this.parseObject(t.object,r,s,i),u=this.parseSkeletons(t.skeletons,l);if(this.bindSkeletons(l,u),void 0!==e){let t=!1;for(const e in a)if(a[e]instanceof HTMLImageElement){t=!0;break}!1===t&&e(l)}return l}parseShapes(t){const e={};if(void 0!==t)for(let i=0,n=t.length;i<n;i++){const n=(new mc).fromJSON(t[i]);e[n.uuid]=n}return e}parseSkeletons(t,e){const i={},n={};if(e.traverse((function(t){t.isBone&&(n[t.uuid]=t)})),void 0!==t)for(let e=0,r=t.length;e<r;e++){const r=(new Dl).fromJSON(t[e],n);i[r.uuid]=r}return i}parseGeometries(t,e){const i={};let n;if(void 0!==t){const r=new Fc;for(let a=0,o=t.length;a<o;a++){let o;const s=t[a];switch(s.type){case"PlaneGeometry":case"PlaneBufferGeometry":o=new sh[s.type](s.width,s.height,s.widthSegments,s.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":o=new sh[s.type](s.width,s.height,s.depth,s.widthSegments,s.heightSegments,s.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":o=new sh[s.type](s.radius,s.segments,s.thetaStart,s.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":o=new sh[s.type](s.radiusTop,s.radiusBottom,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":o=new sh[s.type](s.radius,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":o=new sh[s.type](s.radius,s.widthSegments,s.heightSegments,s.phiStart,s.phiLength,s.thetaStart,s.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":o=new sh[s.type](s.radius,s.detail);break;case"RingGeometry":case"RingBufferGeometry":o=new sh[s.type](s.innerRadius,s.outerRadius,s.thetaSegments,s.phiSegments,s.thetaStart,s.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":o=new sh[s.type](s.radius,s.tube,s.radialSegments,s.tubularSegments,s.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":o=new sh[s.type](s.radius,s.tube,s.tubularSegments,s.radialSegments,s.p,s.q);break;case"TubeGeometry":case"TubeBufferGeometry":o=new sh[s.type]((new cc[s.path.type]).fromJSON(s.path),s.tubularSegments,s.radius,s.radialSegments,s.closed);break;case"LatheGeometry":case"LatheBufferGeometry":o=new sh[s.type](s.points,s.segments,s.phiStart,s.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":o=new sh[s.type](s.vertices,s.indices,s.radius,s.details);break;case"ShapeGeometry":case"ShapeBufferGeometry":n=[];for(let t=0,i=s.shapes.length;t<i;t++){const i=e[s.shapes[t]];n.push(i)}o=new sh[s.type](n,s.curveSegments);break;case"ExtrudeGeometry":case"ExtrudeBufferGeometry":n=[];for(let t=0,i=s.shapes.length;t<i;t++){const i=e[s.shapes[t]];n.push(i)}const t=s.options.extrudePath;void 0!==t&&(s.options.extrudePath=(new cc[t.type]).fromJSON(t)),o=new sh[s.type](n,s.options);break;case"BufferGeometry":case"InstancedBufferGeometry":o=r.parse(s);break;case"Geometry":console.error('THREE.ObjectLoader: Loading "Geometry" is not supported anymore.');break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+s.type+'"');continue}o.uuid=s.uuid,void 0!==s.name&&(o.name=s.name),!0===o.isBufferGeometry&&void 0!==s.userData&&(o.userData=s.userData),i[s.uuid]=o}}return i}parseMaterials(t,e){const i={},n={};if(void 0!==t){const r=new Dc;r.setTextures(e);for(let e=0,a=t.length;e<a;e++){const a=t[e];if("MultiMaterial"===a.type){const t=[];for(let e=0;e<a.materials.length;e++){const n=a.materials[e];void 0===i[n.uuid]&&(i[n.uuid]=r.parse(n)),t.push(i[n.uuid])}n[a.uuid]=t}else void 0===i[a.uuid]&&(i[a.uuid]=r.parse(a)),n[a.uuid]=i[a.uuid]}}return n}parseAnimations(t){const e={};if(void 0!==t)for(let i=0;i<t.length;i++){const n=t[i],r=Ch.parse(n);e[r.uuid]=r}return e}parseImages(t,e){const i=this,n={};let r;function a(t){if("string"==typeof t){const e=t;return function(t){return i.manager.itemStart(t),r.load(t,(function(){i.manager.itemEnd(t)}),void 0,(function(){i.manager.itemError(t),i.manager.itemEnd(t)}))}(/^(\/\/)|([a-z]+:(\/\/)?)/i.test(e)?e:i.resourcePath+e)}return t.data?{data:Zr(t.type,t.data),width:t.width,height:t.height}:null}if(void 0!==t&&t.length>0){const i=new Dh(e);r=new Uh(i),r.setCrossOrigin(this.crossOrigin);for(let e=0,i=t.length;e<i;e++){const i=t[e],r=i.url;if(Array.isArray(r)){n[i.uuid]=[];for(let t=0,e=r.length;t<e;t++){const e=a(r[t]);null!==e&&(e instanceof HTMLImageElement?n[i.uuid].push(e):n[i.uuid].push(new qa(e.data,e.width,e.height)))}}else{const t=a(i.url);null!==t&&(n[i.uuid]=t)}}}return n}parseTextures(t,e){function i(t,e){return"number"==typeof t?t:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",t),e[t])}const n={};if(void 0!==t)for(let r=0,a=t.length;r<a;r++){const a=t[r];let o;void 0===a.image&&console.warn('THREE.ObjectLoader: No "image" specified for',a.uuid),void 0===e[a.image]&&console.warn("THREE.ObjectLoader: Undefined image",a.image);const s=e[a.image];Array.isArray(s)?(o=new Ca(s),6===s.length&&(o.needsUpdate=!0)):(o=s&&s.data?new qa(s.data,s.width,s.height):new Qi(s),s&&(o.needsUpdate=!0)),o.uuid=a.uuid,void 0!==a.name&&(o.name=a.name),void 0!==a.mapping&&(o.mapping=i(a.mapping,Hc)),void 0!==a.offset&&o.offset.fromArray(a.offset),void 0!==a.repeat&&o.repeat.fromArray(a.repeat),void 0!==a.center&&o.center.fromArray(a.center),void 0!==a.rotation&&(o.rotation=a.rotation),void 0!==a.wrap&&(o.wrapS=i(a.wrap[0],Uc),o.wrapT=i(a.wrap[1],Uc)),void 0!==a.format&&(o.format=a.format),void 0!==a.type&&(o.type=a.type),void 0!==a.encoding&&(o.encoding=a.encoding),void 0!==a.minFilter&&(o.minFilter=i(a.minFilter,Gc)),void 0!==a.magFilter&&(o.magFilter=i(a.magFilter,Gc)),void 0!==a.anisotropy&&(o.anisotropy=a.anisotropy),void 0!==a.flipY&&(o.flipY=a.flipY),void 0!==a.premultiplyAlpha&&(o.premultiplyAlpha=a.premultiplyAlpha),void 0!==a.unpackAlignment&&(o.unpackAlignment=a.unpackAlignment),n[a.uuid]=o}return n}parseObject(t,e,i,n){let r,a,o;function s(t){return void 0===e[t]&&console.warn("THREE.ObjectLoader: Undefined geometry",t),e[t]}function l(t){if(void 0!==t){if(Array.isArray(t)){const e=[];for(let n=0,r=t.length;n<r;n++){const r=t[n];void 0===i[r]&&console.warn("THREE.ObjectLoader: Undefined material",r),e.push(i[r])}return e}return void 0===i[t]&&console.warn("THREE.ObjectLoader: Undefined material",t),i[t]}}switch(t.type){case"Scene":r=new nl,void 0!==t.background&&Number.isInteger(t.background)&&(r.background=new Cr(t.background)),void 0!==t.fog&&("Fog"===t.fog.type?r.fog=new il(t.fog.color,t.fog.near,t.fog.far):"FogExp2"===t.fog.type&&(r.fog=new el(t.fog.color,t.fog.density)));break;case"PerspectiveCamera":r=new za(t.fov,t.aspect,t.near,t.far),void 0!==t.focus&&(r.focus=t.focus),void 0!==t.zoom&&(r.zoom=t.zoom),void 0!==t.filmGauge&&(r.filmGauge=t.filmGauge),void 0!==t.filmOffset&&(r.filmOffset=t.filmOffset),void 0!==t.view&&(r.view=Object.assign({},t.view));break;case"OrthographicCamera":r=new Ac(t.left,t.right,t.top,t.bottom,t.near,t.far),void 0!==t.zoom&&(r.zoom=t.zoom),void 0!==t.view&&(r.view=Object.assign({},t.view));break;case"AmbientLight":r=new Rc(t.color,t.intensity);break;case"DirectionalLight":r=new Lc(t.color,t.intensity);break;case"PointLight":r=new kc(t.color,t.intensity,t.distance,t.decay);break;case"RectAreaLight":r=new Cc(t.color,t.intensity,t.width,t.height);break;case"SpotLight":r=new wc(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay);break;case"HemisphereLight":r=new gc(t.color,t.groundColor,t.intensity);break;case"LightProbe":r=(new qc).fromJSON(t);break;case"SkinnedMesh":a=s(t.geometry),o=l(t.material),r=new Rl(a,o),void 0!==t.bindMode&&(r.bindMode=t.bindMode),void 0!==t.bindMatrix&&r.bindMatrix.fromArray(t.bindMatrix),void 0!==t.skeleton&&(r.skeleton=t.skeleton);break;case"Mesh":a=s(t.geometry),o=l(t.material),r=new xa(a,o);break;case"InstancedMesh":a=s(t.geometry),o=l(t.material);const e=t.count,i=t.instanceMatrix,n=t.instanceColor;r=new Nl(a,o,e),r.instanceMatrix=new Ir(new Float32Array(i.array),16),void 0!==n&&(r.instanceColor=new Ir(new Float32Array(n.array),n.itemSize));break;case"LOD":r=new Sl;break;case"Line":r=new Yl(s(t.geometry),l(t.material));break;case"LineLoop":r=new Kl(s(t.geometry),l(t.material));break;case"LineSegments":r=new Jl(s(t.geometry),l(t.material));break;case"PointCloud":case"Points":r=new nu(s(t.geometry),l(t.material));break;case"Sprite":r=new xl(l(t.material));break;case"Group":r=new Xs;break;case"Bone":r=new Cl;break;default:r=new lr}if(r.uuid=t.uuid,void 0!==t.name&&(r.name=t.name),void 0!==t.matrix?(r.matrix.fromArray(t.matrix),void 0!==t.matrixAutoUpdate&&(r.matrixAutoUpdate=t.matrixAutoUpdate),r.matrixAutoUpdate&&r.matrix.decompose(r.position,r.quaternion,r.scale)):(void 0!==t.position&&r.position.fromArray(t.position),void 0!==t.rotation&&r.rotation.fromArray(t.rotation),void 0!==t.quaternion&&r.quaternion.fromArray(t.quaternion),void 0!==t.scale&&r.scale.fromArray(t.scale)),void 0!==t.castShadow&&(r.castShadow=t.castShadow),void 0!==t.receiveShadow&&(r.receiveShadow=t.receiveShadow),t.shadow&&(void 0!==t.shadow.bias&&(r.shadow.bias=t.shadow.bias),void 0!==t.shadow.normalBias&&(r.shadow.normalBias=t.shadow.normalBias),void 0!==t.shadow.radius&&(r.shadow.radius=t.shadow.radius),void 0!==t.shadow.mapSize&&r.shadow.mapSize.fromArray(t.shadow.mapSize),void 0!==t.shadow.camera&&(r.shadow.camera=this.parseObject(t.shadow.camera))),void 0!==t.visible&&(r.visible=t.visible),void 0!==t.frustumCulled&&(r.frustumCulled=t.frustumCulled),void 0!==t.renderOrder&&(r.renderOrder=t.renderOrder),void 0!==t.userData&&(r.userData=t.userData),void 0!==t.layers&&(r.layers.mask=t.layers),void 0!==t.children){const a=t.children;for(let t=0;t<a.length;t++)r.add(this.parseObject(a[t],e,i,n))}if(void 0!==t.animations){const e=t.animations;for(let t=0;t<e.length;t++){const i=e[t];r.animations.push(n[i])}}if("LOD"===t.type){void 0!==t.autoUpdate&&(r.autoUpdate=t.autoUpdate);const e=t.levels;for(let t=0;t<e.length;t++){const i=e[t],n=r.getObjectByProperty("uuid",i.object);void 0!==n&&r.addLevel(n,i.distance)}}return r}bindSkeletons(t,e){0!==Object.keys(e).length&&t.traverse((function(t){if(!0===t.isSkinnedMesh&&void 0!==t.skeleton){const i=e[t.skeleton];void 0===i?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",t.skeleton):t.bind(i,t.bindMatrix)}}))}setTexturePath(t){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(t)}}const Hc={UVMapping:rt,CubeReflectionMapping:at,CubeRefractionMapping:ot,EquirectangularReflectionMapping:st,EquirectangularRefractionMapping:lt,CubeUVReflectionMapping:ut,CubeUVRefractionMapping:ht},Uc={RepeatWrapping:ct,ClampToEdgeWrapping:dt,MirroredRepeatWrapping:pt},Gc={NearestFilter:mt,NearestMipmapNearestFilter:ft,NearestMipmapLinearFilter:_t,LinearFilter:bt,LinearMipmapNearestFilter:yt,LinearMipmapLinearFilter:wt};class Vc extends Bh{constructor(t){super(t),"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(t){return this.options=t,this}load(t,e,i,n){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,a=qh.get(t);if(void 0!==a)return r.manager.itemStart(t),setTimeout((function(){e&&e(a),r.manager.itemEnd(t)}),0),a;const o={};o.credentials="anonymous"===this.crossOrigin?"same-origin":"include",o.headers=this.requestHeader,fetch(t,o).then((function(t){return t.blob()})).then((function(t){return createImageBitmap(t,Object.assign(r.options,{colorSpaceConversion:"none"}))})).then((function(i){qh.add(t,i),e&&e(i),r.manager.itemEnd(t)})).catch((function(e){n&&n(e),r.manager.itemError(t),r.manager.itemEnd(t)})),r.manager.itemStart(t)}}Vc.prototype.isImageBitmapLoader=!0;class Wc{constructor(){this.type="ShapePath",this.color=new Cr,this.subPaths=[],this.currentPath=null}moveTo(t,e){return this.currentPath=new pc,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this}lineTo(t,e){return this.currentPath.lineTo(t,e),this}quadraticCurveTo(t,e,i,n){return this.currentPath.quadraticCurveTo(t,e,i,n),this}bezierCurveTo(t,e,i,n,r,a){return this.currentPath.bezierCurveTo(t,e,i,n,r,a),this}splineThru(t){return this.currentPath.splineThru(t),this}toShapes(t,e){function i(t){const e=[];for(let i=0,n=t.length;i<n;i++){const n=t[i],r=new mc;r.curves=n.curves,e.push(r)}return e}function n(t,e){const i=e.length;let n=!1;for(let r=i-1,a=0;a<i;r=a++){let i=e[r],o=e[a],s=o.x-i.x,l=o.y-i.y;if(Math.abs(l)>Number.EPSILON){if(l<0&&(i=e[a],s=-s,o=e[r],l=-l),t.y<i.y||t.y>o.y)continue;if(t.y===i.y){if(t.x===i.x)return!0}else{const e=l*(t.x-i.x)-s*(t.y-i.y);if(0===e)return!0;if(e<0)continue;n=!n}}else{if(t.y!==i.y)continue;if(o.x<=t.x&&t.x<=i.x||i.x<=t.x&&t.x<=o.x)return!0}}return n}const r=Gu.isClockWise,a=this.subPaths;if(0===a.length)return[];if(!0===e)return i(a);let o,s,l;const u=[];if(1===a.length)return s=a[0],l=new mc,l.curves=s.curves,u.push(l),u;let h=!r(a[0].getPoints());h=t?!h:h;const c=[],d=[];let p,m,f=[],g=0;d[g]=void 0,f[g]=[];for(let e=0,i=a.length;e<i;e++)s=a[e],p=s.getPoints(),o=r(p),o=t?!o:o,o?(!h&&d[g]&&g++,d[g]={s:new mc,p},d[g].s.curves=s.curves,h&&g++,f[g]=[]):f[g].push({h:s,p:p[0]});if(!d[0])return i(a);if(d.length>1){let t=!1;const e=[];for(let t=0,e=d.length;t<e;t++)c[t]=[];for(let i=0,r=d.length;i<r;i++){const r=f[i];for(let a=0;a<r.length;a++){const o=r[a];let s=!0;for(let r=0;r<d.length;r++)n(o.p,d[r].p)&&(i!==r&&e.push({froms:i,tos:r,hole:a}),s?(s=!1,c[r].push(o)):t=!0);s&&c[i].push(o)}}e.length>0&&(t||(f=c))}for(let t=0,e=d.length;t<e;t++){l=d[t].s,u.push(l),m=f[t];for(let t=0,e=m.length;t<e;t++)l.holes.push(m[t].h)}return u}}class jc{constructor(t){this.type="Font",this.data=t}generateShapes(t,e=100){const i=[],n=function(t,e,i){const n=Array.from(t),r=e/i.resolution,a=(i.boundingBox.yMax-i.boundingBox.yMin+i.underlineThickness)*r,o=[];let s=0,l=0;for(let t=0;t<n.length;t++){const e=n[t];if("\n"===e)s=0,l-=a;else{const t=Yc(e,r,s,l,i);s+=t.offsetX,o.push(t.path)}}return o}(t,e,this.data);for(let t=0,e=n.length;t<e;t++)Array.prototype.push.apply(i,n[t].toShapes());return i}}function Yc(t,e,i,n,r){const a=r.glyphs[t]||r.glyphs["?"];if(!a)return void console.error('THREE.Font: character "'+t+'" does not exists in font family '+r.familyName+".");const o=new Wc;let s,l,u,h,c,d,p,m;if(a.o){const t=a._cachedOutline||(a._cachedOutline=a.o.split(" "));for(let r=0,a=t.length;r<a;)switch(t[r++]){case"m":s=t[r++]*e+i,l=t[r++]*e+n,o.moveTo(s,l);break;case"l":s=t[r++]*e+i,l=t[r++]*e+n,o.lineTo(s,l);break;case"q":u=t[r++]*e+i,h=t[r++]*e+n,c=t[r++]*e+i,d=t[r++]*e+n,o.quadraticCurveTo(c,d,u,h);break;case"b":u=t[r++]*e+i,h=t[r++]*e+n,c=t[r++]*e+i,d=t[r++]*e+n,p=t[r++]*e+i,m=t[r++]*e+n,o.bezierCurveTo(c,d,p,m,u,h)}}return{offsetX:a.ha*e,path:o}}jc.prototype.isFont=!0;class Xc extends Bh{constructor(t){super(t)}load(t,e,i,n){const r=this,a=new Fh(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(r.withCredentials),a.load(t,(function(t){let i;try{i=JSON.parse(t)}catch(e){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),i=JSON.parse(t.substring(65,t.length-2))}const n=r.parse(i);e&&e(n)}),i,n)}parse(t){return new jc(t)}}let Zc;const Jc={getContext:function(){return void 0===Zc&&(Zc=new(window.AudioContext||window.webkitAudioContext)),Zc},setContext:function(t){Zc=t}};class Kc extends Bh{constructor(t){super(t)}load(t,e,i,n){const r=this,a=new Fh(this.manager);a.setResponseType("arraybuffer"),a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(t,(function(i){try{const t=i.slice(0);Jc.getContext().decodeAudioData(t,(function(t){e(t)}))}catch(e){n?n(e):console.error(e),r.manager.itemError(t)}}),i,n)}}class $c extends qc{constructor(t,e,i=1){super(void 0,i);const n=(new Cr).set(t),r=(new Cr).set(e),a=new on(n.r,n.g,n.b),o=new on(r.r,r.g,r.b),s=Math.sqrt(Math.PI),l=s*Math.sqrt(.75);this.sh.coefficients[0].copy(a).add(o).multiplyScalar(s),this.sh.coefficients[1].copy(a).sub(o).multiplyScalar(l)}}$c.prototype.isHemisphereLightProbe=!0;class Qc extends qc{constructor(t,e=1){super(void 0,e);const i=(new Cr).set(t);this.sh.coefficients[0].set(i.r,i.g,i.b).multiplyScalar(2*Math.sqrt(Math.PI))}}Qc.prototype.isAmbientLightProbe=!0;const td=new Bn,ed=new Bn;class id{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new za,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new za,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(t){const e=this._cache;if(e.focus!==t.focus||e.fov!==t.fov||e.aspect!==t.aspect*this.aspect||e.near!==t.near||e.far!==t.far||e.zoom!==t.zoom||e.eyeSep!==this.eyeSep){e.focus=t.focus,e.fov=t.fov,e.aspect=t.aspect*this.aspect,e.near=t.near,e.far=t.far,e.zoom=t.zoom,e.eyeSep=this.eyeSep;const i=t.projectionMatrix.clone(),n=e.eyeSep/2,r=n*e.near/e.focus,a=e.near*Math.tan(Oi*e.fov*.5)/e.zoom;let o,s;ed.elements[12]=-n,td.elements[12]=n,o=-a*e.aspect+r,s=a*e.aspect+r,i.elements[0]=2*e.near/(s-o),i.elements[8]=(s+o)/(s-o),this.cameraL.projectionMatrix.copy(i),o=-a*e.aspect-r,s=a*e.aspect-r,i.elements[0]=2*e.near/(s-o),i.elements[8]=(s+o)/(s-o),this.cameraR.projectionMatrix.copy(i)}this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(ed),this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(td)}}class nd{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=rd(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=rd();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}function rd(){return("undefined"==typeof performance?Date:performance).now()}const ad=new on,od=new an,sd=new on,ld=new on;class ud extends lr{constructor(){super(),this.type="AudioListener",this.context=Jc.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new nd}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(t){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}updateMatrixWorld(t){super.updateMatrixWorld(t);const e=this.context.listener,i=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(ad,od,sd),ld.set(0,0,-1).applyQuaternion(od),e.positionX){const t=this.context.currentTime+this.timeDelta;e.positionX.linearRampToValueAtTime(ad.x,t),e.positionY.linearRampToValueAtTime(ad.y,t),e.positionZ.linearRampToValueAtTime(ad.z,t),e.forwardX.linearRampToValueAtTime(ld.x,t),e.forwardY.linearRampToValueAtTime(ld.y,t),e.forwardZ.linearRampToValueAtTime(ld.z,t),e.upX.linearRampToValueAtTime(i.x,t),e.upY.linearRampToValueAtTime(i.y,t),e.upZ.linearRampToValueAtTime(i.z,t)}else e.setPosition(ad.x,ad.y,ad.z),e.setOrientation(ld.x,ld.y,ld.z,i.x,i.y,i.z)}}class hd extends lr{constructor(t){super(),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this}play(t=0){if(!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+t;const e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(t){return t||(t=[]),!0===this._connected?(this.disconnect(),this.filters=t.slice(),this.connect()):this.filters=t.slice(),this}setDetune(t){if(this.detune=t,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(t){return this.setFilters(t?[t]:[])}setPlaybackRate(t){if(!1!==this.hasPlaybackControl)return this.playbackRate=t,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(t){if(!1!==this.hasPlaybackControl)return this.loop=t,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}}const cd=new on,dd=new an,pd=new on,md=new on;class fd extends hd{constructor(t){super(t),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(t){return this.panner.refDistance=t,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(t){return this.panner.rolloffFactor=t,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(t){return this.panner.distanceModel=t,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(t){return this.panner.maxDistance=t,this}setDirectionalCone(t,e,i){return this.panner.coneInnerAngle=t,this.panner.coneOuterAngle=e,this.panner.coneOuterGain=i,this}updateMatrixWorld(t){if(super.updateMatrixWorld(t),!0===this.hasPlaybackControl&&!1===this.isPlaying)return;this.matrixWorld.decompose(cd,dd,pd),md.set(0,0,1).applyQuaternion(dd);const e=this.panner;if(e.positionX){const t=this.context.currentTime+this.listener.timeDelta;e.positionX.linearRampToValueAtTime(cd.x,t),e.positionY.linearRampToValueAtTime(cd.y,t),e.positionZ.linearRampToValueAtTime(cd.z,t),e.orientationX.linearRampToValueAtTime(md.x,t),e.orientationY.linearRampToValueAtTime(md.y,t),e.orientationZ.linearRampToValueAtTime(md.z,t)}else e.setPosition(cd.x,cd.y,cd.z),e.setOrientation(md.x,md.y,md.z)}}class gd{constructor(t,e=2048){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=e,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let t=0;const e=this.getFrequencyData();for(let i=0;i<e.length;i++)t+=e[i];return t/e.length}}class _d{constructor(t,e,i){let n,r,a;switch(this.binding=t,this.valueSize=i,e){case"quaternion":n=this._slerp,r=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*i),this._workIndex=5;break;case"string":case"bool":n=this._select,r=this._select,a=this._setAdditiveIdentityOther,this.buffer=new Array(5*i);break;default:n=this._lerp,r=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*i)}this._mixBufferRegion=n,this._mixBufferRegionAdditive=r,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(t,e){const i=this.buffer,n=this.valueSize,r=t*n+n;let a=this.cumulativeWeight;if(0===a){for(let t=0;t!==n;++t)i[r+t]=i[t];a=e}else{a+=e;const t=e/a;this._mixBufferRegion(i,r,0,t,n)}this.cumulativeWeight=a}accumulateAdditive(t){const e=this.buffer,i=this.valueSize,n=i*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(e,n,0,t,i),this.cumulativeWeightAdditive+=t}apply(t){const e=this.valueSize,i=this.buffer,n=t*e+e,r=this.cumulativeWeight,a=this.cumulativeWeightAdditive,o=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const t=e*this._origIndex;this._mixBufferRegion(i,n,t,1-r,e)}a>0&&this._mixBufferRegionAdditive(i,n,this._addIndex*e,1,e);for(let t=e,r=e+e;t!==r;++t)if(i[t]!==i[t+e]){o.setValue(i,n);break}}saveOriginalState(){const t=this.binding,e=this.buffer,i=this.valueSize,n=i*this._origIndex;t.getValue(e,n);for(let t=i,r=n;t!==r;++t)e[t]=e[n+t%i];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const t=3*this.valueSize;this.binding.setValue(this.buffer,t)}_setAdditiveIdentityNumeric(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let i=t;i<e;i++)this.buffer[i]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let i=0;i<this.valueSize;i++)this.buffer[e+i]=this.buffer[t+i]}_select(t,e,i,n,r){if(n>=.5)for(let n=0;n!==r;++n)t[e+n]=t[i+n]}_slerp(t,e,i,n){an.slerpFlat(t,e,t,e,t,i,n)}_slerpAdditive(t,e,i,n,r){const a=this._workIndex*r;an.multiplyQuaternionsFlat(t,a,t,e,t,i),an.slerpFlat(t,e,t,e,t,a,n)}_lerp(t,e,i,n,r){const a=1-n;for(let o=0;o!==r;++o){const r=e+o;t[r]=t[r]*a+t[i+o]*n}}_lerpAdditive(t,e,i,n,r){for(let a=0;a!==r;++a){const r=e+a;t[r]=t[r]+t[i+a]*n}}}const vd=new RegExp("[\\[\\]\\.:\\/]","g"),bd="[^\\[\\]\\.:\\/]",yd="[^"+"\\[\\]\\.:\\/".replace("\\.","")+"]",xd=/((?:WC+[\/:])*)/.source.replace("WC",bd),wd=/(WCOD+)?/.source.replace("WCOD",yd),Md=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",bd),Ed=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",bd),Sd=new RegExp("^"+xd+wd+Md+Ed+"$"),Td=["material","materials","bones"];class kd{constructor(t,e,i){this.path=e,this.parsedPath=i||kd.parseTrackName(e),this.node=kd.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,e,i){return t&&t.isAnimationObjectGroup?new kd.Composite(t,e,i):new kd(t,e,i)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(vd,"")}static parseTrackName(t){const e=Sd.exec(t);if(!e)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const i={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},n=i.nodeName&&i.nodeName.lastIndexOf(".");if(void 0!==n&&-1!==n){const t=i.nodeName.substring(n+1);-1!==Td.indexOf(t)&&(i.nodeName=i.nodeName.substring(0,n),i.objectName=t)}if(null===i.propertyName||0===i.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return i}static findNode(t,e){if(!e||""===e||"."===e||-1===e||e===t.name||e===t.uuid)return t;if(t.skeleton){const i=t.skeleton.getBoneByName(e);if(void 0!==i)return i}if(t.children){const i=function(t){for(let n=0;n<t.length;n++){const r=t[n];if(r.name===e||r.uuid===e)return r;const a=i(r.children);if(a)return a}return null},n=i(t.children);if(n)return n}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.node[this.propertyName]}_getValue_array(t,e){const i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)t[e++]=i[n]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){const i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=t[e++]}_setValue_array_setNeedsUpdate(t,e){const i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){const i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node;const e=this.parsedPath,i=e.objectName,n=e.propertyName;let r=e.propertyIndex;if(t||(t=kd.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(i){let n=e.objectIndex;switch(i){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(let e=0;e<t.length;e++)if(t[e].name===n){n=e;break}break;default:if(void 0===t[i])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[i]}if(void 0!==n){if(void 0===t[n])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[n]}}const a=t[n];if(void 0===a){const i=e.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+i+"."+n+" but it wasn't found.",t)}let o=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?o=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(o=this.Versioning.MatrixWorldNeedsUpdate);let s=this.BindingType.Direct;if(void 0!==r){if("morphTargetInfluences"===n){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!t.geometry.isBufferGeometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==t.morphTargetDictionary[r]&&(r=t.morphTargetDictionary[r])}s=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=r}else void 0!==a.fromArray&&void 0!==a.toArray?(s=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(s=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=n;this.getValue=this.GetterByBindingType[s],this.setValue=this.SetterByBindingTypeAndVersioning[s][o]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}kd.Composite=class{constructor(t,e,i){const n=i||kd.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,n)}getValue(t,e){this.bind();const i=this._targetGroup.nCachedObjects_,n=this._bindings[i];void 0!==n&&n.getValue(t,e)}setValue(t,e){const i=this._bindings;for(let n=this._targetGroup.nCachedObjects_,r=i.length;n!==r;++n)i[n].setValue(t,e)}bind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,i=t.length;e!==i;++e)t[e].bind()}unbind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,i=t.length;e!==i;++e)t[e].unbind()}},kd.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},kd.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},kd.prototype.GetterByBindingType=[kd.prototype._getValue_direct,kd.prototype._getValue_array,kd.prototype._getValue_arrayElement,kd.prototype._getValue_toArray],kd.prototype.SetterByBindingTypeAndVersioning=[[kd.prototype._setValue_direct,kd.prototype._setValue_direct_setNeedsUpdate,kd.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[kd.prototype._setValue_array,kd.prototype._setValue_array_setNeedsUpdate,kd.prototype._setValue_array_setMatrixWorldNeedsUpdate],[kd.prototype._setValue_arrayElement,kd.prototype._setValue_arrayElement_setNeedsUpdate,kd.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[kd.prototype._setValue_fromArray,kd.prototype._setValue_fromArray_setNeedsUpdate,kd.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class Ad{constructor(){this.uuid=Ni(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const t={};this._indicesByUUID=t;for(let e=0,i=arguments.length;e!==i;++e)t[arguments[e].uuid]=e;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}add(){const t=this._objects,e=this._indicesByUUID,i=this._paths,n=this._parsedPaths,r=this._bindings,a=r.length;let o,s=t.length,l=this.nCachedObjects_;for(let u=0,h=arguments.length;u!==h;++u){const h=arguments[u],c=h.uuid;let d=e[c];if(void 0===d){d=s++,e[c]=d,t.push(h);for(let t=0,e=a;t!==e;++t)r[t].push(new kd(h,i[t],n[t]))}else if(d<l){o=t[d];const s=--l,u=t[s];e[u.uuid]=d,t[d]=u,e[c]=s,t[s]=h;for(let t=0,e=a;t!==e;++t){const e=r[t],a=e[s];let o=e[d];e[d]=a,void 0===o&&(o=new kd(h,i[t],n[t])),e[s]=o}}else t[d]!==o&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=l}remove(){const t=this._objects,e=this._indicesByUUID,i=this._bindings,n=i.length;let r=this.nCachedObjects_;for(let a=0,o=arguments.length;a!==o;++a){const o=arguments[a],s=o.uuid,l=e[s];if(void 0!==l&&l>=r){const a=r++,u=t[a];e[u.uuid]=l,t[l]=u,e[s]=a,t[a]=o;for(let t=0,e=n;t!==e;++t){const e=i[t],n=e[a],r=e[l];e[l]=n,e[a]=r}}}this.nCachedObjects_=r}uncache(){const t=this._objects,e=this._indicesByUUID,i=this._bindings,n=i.length;let r=this.nCachedObjects_,a=t.length;for(let o=0,s=arguments.length;o!==s;++o){const s=arguments[o].uuid,l=e[s];if(void 0!==l)if(delete e[s],l<r){const o=--r,s=t[o],u=--a,h=t[u];e[s.uuid]=l,t[l]=s,e[h.uuid]=o,t[o]=h,t.pop();for(let t=0,e=n;t!==e;++t){const e=i[t],n=e[o],r=e[u];e[l]=n,e[o]=r,e.pop()}}else{const r=--a,o=t[r];r>0&&(e[o.uuid]=l),t[l]=o,t.pop();for(let t=0,e=n;t!==e;++t){const e=i[t];e[l]=e[r],e.pop()}}}this.nCachedObjects_=r}subscribe_(t,e){const i=this._bindingsIndicesByPath;let n=i[t];const r=this._bindings;if(void 0!==n)return r[n];const a=this._paths,o=this._parsedPaths,s=this._objects,l=s.length,u=this.nCachedObjects_,h=new Array(l);n=r.length,i[t]=n,a.push(t),o.push(e),r.push(h);for(let i=u,n=s.length;i!==n;++i){const n=s[i];h[i]=new kd(n,t,e)}return h}unsubscribe_(t){const e=this._bindingsIndicesByPath,i=e[t];if(void 0!==i){const n=this._paths,r=this._parsedPaths,a=this._bindings,o=a.length-1,s=a[o];e[t[o]]=i,a[i]=s,a.pop(),r[i]=r[o],r.pop(),n[i]=n[o],n.pop()}}}Ad.prototype.isAnimationObjectGroup=!0;class zd{constructor(t,e,i=null,n=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=i,this.blendMode=n;const r=e.tracks,a=r.length,o=new Array(a),s={endingStart:Ue,endingEnd:Ue};for(let t=0;t!==a;++t){const e=r[t].createInterpolant(null);o[t]=e,e.settings=s}this._interpolantSettings=s,this._interpolants=o,this._propertyBindings=new Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Be,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,i){if(t.fadeOut(e),this.fadeIn(e),i){const i=this._clip.duration,n=t._clip.duration,r=n/i,a=i/n;t.warp(1,r,e),this.warp(a,1,e)}return this}crossFadeTo(t,e,i){return t.crossFadeFrom(this,e,i)}stopFading(){const t=this._weightInterpolant;return null!==t&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,i){const n=this._mixer,r=n.time,a=this.timeScale;let o=this._timeScaleInterpolant;null===o&&(o=n._lendControlInterpolant(),this._timeScaleInterpolant=o);const s=o.parameterPositions,l=o.sampleValues;return s[0]=r,s[1]=r+i,l[0]=t/a,l[1]=e/a,this}stopWarping(){const t=this._timeScaleInterpolant;return null!==t&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(t,e,i,n){if(!this.enabled)return void this._updateWeight(t);const r=this._startTime;if(null!==r){const n=(t-r)*i;if(n<0||0===i)return;this._startTime=null,e=i*n}e*=this._updateTimeScale(t);const a=this._updateTime(e),o=this._updateWeight(t);if(o>0){const t=this._interpolants,e=this._propertyBindings;if(this.blendMode===je)for(let i=0,n=t.length;i!==n;++i)t[i].evaluate(a),e[i].accumulateAdditive(o);else for(let i=0,r=t.length;i!==r;++i)t[i].evaluate(a),e[i].accumulate(n,o)}}_updateWeight(t){let e=0;if(this.enabled){e=this.weight;const i=this._weightInterpolant;if(null!==i){const n=i.evaluate(t)[0];e*=n,t>i.parameterPositions[1]&&(this.stopFading(),0===n&&(this.enabled=!1))}}return this._effectiveWeight=e,e}_updateTimeScale(t){let e=0;if(!this.paused){e=this.timeScale;const i=this._timeScaleInterpolant;null!==i&&(e*=i.evaluate(t)[0],t>i.parameterPositions[1]&&(this.stopWarping(),0===e?this.paused=!0:this.timeScale=e))}return this._effectiveTimeScale=e,e}_updateTime(t){const e=this._clip.duration,i=this.loop;let n=this.time+t,r=this._loopCount;const a=i===Oe;if(0===t)return-1===r?n:a&&1==(1&r)?e-n:n;if(i===Ie){-1===r&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(n>=e)n=e;else{if(!(n<0)){this.time=n;break t}n=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(-1===r&&(t>=0?(r=0,this._setEndings(!0,0===this.repetitions,a)):this._setEndings(0===this.repetitions,!0,a)),n>=e||n<0){const i=Math.floor(n/e);n-=e*i,r+=Math.abs(i);const o=this.repetitions-r;if(o<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,n=t>0?e:0,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(1===o){const e=t<0;this._setEndings(e,!e,a)}else this._setEndings(!1,!1,a);this._loopCount=r,this.time=n,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:i})}}else this.time=n;if(a&&1==(1&r))return e-n}return n}_setEndings(t,e,i){const n=this._interpolantSettings;i?(n.endingStart=Ge,n.endingEnd=Ge):(n.endingStart=t?this.zeroSlopeAtStart?Ge:Ue:Ve,n.endingEnd=e?this.zeroSlopeAtEnd?Ge:Ue:Ve)}_scheduleFading(t,e,i){const n=this._mixer,r=n.time;let a=this._weightInterpolant;null===a&&(a=n._lendControlInterpolant(),this._weightInterpolant=a);const o=a.parameterPositions,s=a.sampleValues;return o[0]=r,s[0]=e,o[1]=r+t,s[1]=i,this}}class Ld extends Di{constructor(t){super(),this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(t,e){const i=t._localRoot||this._root,n=t._clip.tracks,r=n.length,a=t._propertyBindings,o=t._interpolants,s=i.uuid,l=this._bindingsByRootAndName;let u=l[s];void 0===u&&(u={},l[s]=u);for(let t=0;t!==r;++t){const r=n[t],l=r.name;let h=u[l];if(void 0!==h)a[t]=h;else{if(h=a[t],void 0!==h){null===h._cacheIndex&&(++h.referenceCount,this._addInactiveBinding(h,s,l));continue}const n=e&&e._propertyBindings[t].binding.parsedPath;h=new _d(kd.create(i,l,n),r.ValueTypeName,r.getValueSize()),++h.referenceCount,this._addInactiveBinding(h,s,l),a[t]=h}o[t].resultBuffer=h.buffer}}_activateAction(t){if(!this._isActiveAction(t)){if(null===t._cacheIndex){const e=(t._localRoot||this._root).uuid,i=t._clip.uuid,n=this._actionsByClip[i];this._bindAction(t,n&&n.knownActions[0]),this._addInactiveAction(t,i,e)}const e=t._propertyBindings;for(let t=0,i=e.length;t!==i;++t){const i=e[t];0==i.useCount++&&(this._lendBinding(i),i.saveOriginalState())}this._lendAction(t)}}_deactivateAction(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let t=0,i=e.length;t!==i;++t){const i=e[t];0==--i.useCount&&(i.restoreOriginalState(),this._takeBackBinding(i))}this._takeBackAction(t)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}}_isActiveAction(t){const e=t._cacheIndex;return null!==e&&e<this._nActiveActions}_addInactiveAction(t,e,i){const n=this._actions,r=this._actionsByClip;let a=r[e];if(void 0===a)a={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,r[e]=a;else{const e=a.knownActions;t._byClipCacheIndex=e.length,e.push(t)}t._cacheIndex=n.length,n.push(t),a.actionByRoot[i]=t}_removeInactiveAction(t){const e=this._actions,i=e[e.length-1],n=t._cacheIndex;i._cacheIndex=n,e[n]=i,e.pop(),t._cacheIndex=null;const r=t._clip.uuid,a=this._actionsByClip,o=a[r],s=o.knownActions,l=s[s.length-1],u=t._byClipCacheIndex;l._byClipCacheIndex=u,s[u]=l,s.pop(),t._byClipCacheIndex=null,delete o.actionByRoot[(t._localRoot||this._root).uuid],0===s.length&&delete a[r],this._removeInactiveBindingsForAction(t)}_removeInactiveBindingsForAction(t){const e=t._propertyBindings;for(let t=0,i=e.length;t!==i;++t){const i=e[t];0==--i.referenceCount&&this._removeInactiveBinding(i)}}_lendAction(t){const e=this._actions,i=t._cacheIndex,n=this._nActiveActions++,r=e[n];t._cacheIndex=n,e[n]=t,r._cacheIndex=i,e[i]=r}_takeBackAction(t){const e=this._actions,i=t._cacheIndex,n=--this._nActiveActions,r=e[n];t._cacheIndex=n,e[n]=t,r._cacheIndex=i,e[i]=r}_addInactiveBinding(t,e,i){const n=this._bindingsByRootAndName,r=this._bindings;let a=n[e];void 0===a&&(a={},n[e]=a),a[i]=t,t._cacheIndex=r.length,r.push(t)}_removeInactiveBinding(t){const e=this._bindings,i=t.binding,n=i.rootNode.uuid,r=i.path,a=this._bindingsByRootAndName,o=a[n],s=e[e.length-1],l=t._cacheIndex;s._cacheIndex=l,e[l]=s,e.pop(),delete o[r],0===Object.keys(o).length&&delete a[n]}_lendBinding(t){const e=this._bindings,i=t._cacheIndex,n=this._nActiveBindings++,r=e[n];t._cacheIndex=n,e[n]=t,r._cacheIndex=i,e[i]=r}_takeBackBinding(t){const e=this._bindings,i=t._cacheIndex,n=--this._nActiveBindings,r=e[n];t._cacheIndex=n,e[n]=t,r._cacheIndex=i,e[i]=r}_lendControlInterpolant(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let i=t[e];return void 0===i&&(i=new wh(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),i.__cacheIndex=e,t[e]=i),i}_takeBackControlInterpolant(t){const e=this._controlInterpolants,i=t.__cacheIndex,n=--this._nActiveControlInterpolants,r=e[n];t.__cacheIndex=n,e[n]=t,r.__cacheIndex=i,e[i]=r}clipAction(t,e,i){const n=e||this._root,r=n.uuid;let a="string"==typeof t?Ch.findByName(n,t):t;const o=null!==a?a.uuid:t,s=this._actionsByClip[o];let l=null;if(void 0===i&&(i=null!==a?a.blendMode:We),void 0!==s){const t=s.actionByRoot[r];if(void 0!==t&&t.blendMode===i)return t;l=s.knownActions[0],null===a&&(a=l._clip)}if(null===a)return null;const u=new zd(this,a,e,i);return this._bindAction(u,l),this._addInactiveAction(u,o,r),u}existingAction(t,e){const i=e||this._root,n=i.uuid,r="string"==typeof t?Ch.findByName(i,t):t,a=r?r.uuid:t,o=this._actionsByClip[a];return void 0!==o&&o.actionByRoot[n]||null}stopAllAction(){const t=this._actions;for(let e=this._nActiveActions-1;e>=0;--e)t[e].stop();return this}update(t){t*=this.timeScale;const e=this._actions,i=this._nActiveActions,n=this.time+=t,r=Math.sign(t),a=this._accuIndex^=1;for(let o=0;o!==i;++o)e[o]._update(n,t,r,a);const o=this._bindings,s=this._nActiveBindings;for(let t=0;t!==s;++t)o[t].apply(a);return this}setTime(t){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(t)}getRoot(){return this._root}uncacheClip(t){const e=this._actions,i=t.uuid,n=this._actionsByClip,r=n[i];if(void 0!==r){const t=r.knownActions;for(let i=0,n=t.length;i!==n;++i){const n=t[i];this._deactivateAction(n);const r=n._cacheIndex,a=e[e.length-1];n._cacheIndex=null,n._byClipCacheIndex=null,a._cacheIndex=r,e[r]=a,e.pop(),this._removeInactiveBindingsForAction(n)}delete n[i]}}uncacheRoot(t){const e=t.uuid,i=this._actionsByClip;for(const t in i){const n=i[t].actionByRoot[e];void 0!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}const n=this._bindingsByRootAndName[e];if(void 0!==n)for(const t in n){const e=n[t];e.restoreOriginalState(),this._removeInactiveBinding(e)}}uncacheAction(t,e){const i=this.existingAction(t,e);null!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}}Ld.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class Rd{constructor(t){"string"==typeof t&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),t=arguments[1]),this.value=t}clone(){return new Rd(void 0===this.value.clone?this.value:this.value.clone())}}class Cd extends rl{constructor(t,e,i=1){super(t,e),this.meshPerAttribute=i||1}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}clone(t){const e=super.clone(t);return e.meshPerAttribute=this.meshPerAttribute,e}toJSON(t){const e=super.toJSON(t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}Cd.prototype.isInstancedInterleavedBuffer=!0;class Pd{constructor(t,e,i,n,r){this.buffer=t,this.type=e,this.itemSize=i,this.elementSize=n,this.count=r,this.version=0}set needsUpdate(t){!0===t&&this.version++}setBuffer(t){return this.buffer=t,this}setType(t,e){return this.type=t,this.elementSize=e,this}setItemSize(t){return this.itemSize=t,this}setCount(t){return this.count=t,this}}Pd.prototype.isGLBufferAttribute=!0;class qd{constructor(t,e,i=0,n=1/0){this.ray=new In(t,e),this.near=i,this.far=n,this.camera=null,this.layers=new Xn,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e&&e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e&&e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}intersectObject(t,e=!1,i=[]){return Id(t,this,i,e),i.sort(Dd),i}intersectObjects(t,e=!1,i=[]){for(let n=0,r=t.length;n<r;n++)Id(t[n],this,i,e);return i.sort(Dd),i}}function Dd(t,e){return t.distance-e.distance}function Id(t,e,i,n){if(t.layers.test(e.layers)&&t.raycast(e,i),!0===n){const n=t.children;for(let t=0,r=n.length;t<r;t++)Id(n[t],e,i,!0)}}class Bd{constructor(t=1,e=0,i=0){return this.radius=t,this.phi=e,this.theta=i,this}set(t,e,i){return this.radius=t,this.phi=e,this.theta=i,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){const t=1e-6;return this.phi=Math.max(t,Math.min(Math.PI-t,this.phi)),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,i){return this.radius=Math.sqrt(t*t+e*e+i*i),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,i),this.phi=Math.acos(Hi(e/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}}class Od{constructor(t=1,e=0,i=0){return this.radius=t,this.theta=e,this.y=i,this}set(t,e,i){return this.radius=t,this.theta=e,this.y=i,this}copy(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,i){return this.radius=Math.sqrt(t*t+i*i),this.theta=Math.atan2(t,i),this.y=e,this}clone(){return(new this.constructor).copy(this)}}const Fd=new Xi;class Nd{constructor(t=new Xi(1/0,1/0),e=new Xi(-1/0,-1/0)){this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromPoints(t){this.makeEmpty();for(let e=0,i=t.length;e<i;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const i=Fd.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return void 0===t&&(console.warn("THREE.Box2: .getCenter() target is now required"),t=new Xi),this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return void 0===t&&(console.warn("THREE.Box2: .getSize() target is now required"),t=new Xi),this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,e){return void 0===e&&(console.warn("THREE.Box2: .getParameter() target is now required"),e=new Xi),e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)}clampPoint(t,e){return void 0===e&&(console.warn("THREE.Box2: .clampPoint() target is now required"),e=new Xi),e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return Fd.copy(t).clamp(this.min,this.max).sub(t).length()}intersect(t){return this.min.max(t.min),this.max.min(t.max),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}Nd.prototype.isBox2=!0;const Hd=new on,Ud=new on;class Gd{constructor(t=new on,e=new on){this.start=t,this.end=e}set(t,e){return this.start.copy(t),this.end.copy(e),this}copy(t){return this.start.copy(t.start),this.end.copy(t.end),this}getCenter(t){return void 0===t&&(console.warn("THREE.Line3: .getCenter() target is now required"),t=new on),t.addVectors(this.start,this.end).multiplyScalar(.5)}delta(t){return void 0===t&&(console.warn("THREE.Line3: .delta() target is now required"),t=new on),t.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,e){return void 0===e&&(console.warn("THREE.Line3: .at() target is now required"),e=new on),this.delta(e).multiplyScalar(t).add(this.start)}closestPointToPointParameter(t,e){Hd.subVectors(t,this.start),Ud.subVectors(this.end,this.start);const i=Ud.dot(Ud);let n=Ud.dot(Hd)/i;return e&&(n=Hi(n,0,1)),n}closestPointToPoint(t,e,i){const n=this.closestPointToPointParameter(t,e);return void 0===i&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),i=new on),this.delta(i).multiplyScalar(n).add(this.start)}applyMatrix4(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}equals(t){return t.start.equals(this.start)&&t.end.equals(this.end)}clone(){return(new this.constructor).copy(this)}}class Vd extends lr{constructor(t){super(),this.material=t,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}}Vd.prototype.isImmediateRenderObject=!0;const Wd=new on;class jd extends lr{constructor(t,e){super(),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=e;const i=new na,n=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let t=0,e=1,i=32;t<i;t++,e++){const r=t/i*Math.PI*2,a=e/i*Math.PI*2;n.push(Math.cos(r),Math.sin(r),1,Math.cos(a),Math.sin(a),1)}i.setAttribute("position",new Wr(n,3));const r=new Hl({fog:!1,toneMapped:!1});this.cone=new Jl(i,r),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();const t=this.light.distance?this.light.distance:1e3,e=t*Math.tan(this.light.angle);this.cone.scale.set(e,e,t),Wd.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(Wd),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Yd=new on,Xd=new Bn,Zd=new Bn;class Jd extends Jl{constructor(t){const e=Kd(t),i=new na,n=[],r=[],a=new Cr(0,0,1),o=new Cr(0,1,0);for(let t=0;t<e.length;t++){const i=e[t];i.parent&&i.parent.isBone&&(n.push(0,0,0),n.push(0,0,0),r.push(a.r,a.g,a.b),r.push(o.r,o.g,o.b))}i.setAttribute("position",new Wr(n,3)),i.setAttribute("color",new Wr(r,3)),super(i,new Hl({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(t){const e=this.bones,i=this.geometry,n=i.getAttribute("position");Zd.copy(this.root.matrixWorld).invert();for(let t=0,i=0;t<e.length;t++){const r=e[t];r.parent&&r.parent.isBone&&(Xd.multiplyMatrices(Zd,r.matrixWorld),Yd.setFromMatrixPosition(Xd),n.setXYZ(i,Yd.x,Yd.y,Yd.z),Xd.multiplyMatrices(Zd,r.parent.matrixWorld),Yd.setFromMatrixPosition(Xd),n.setXYZ(i+1,Yd.x,Yd.y,Yd.z),i+=2)}i.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}}function Kd(t){const e=[];t&&t.isBone&&e.push(t);for(let i=0;i<t.children.length;i++)e.push.apply(e,Kd(t.children[i]));return e}class $d extends xa{constructor(t,e,i){super(new th(e,4,2),new Pr({wireframe:!0,fog:!1,toneMapped:!1})),this.light=t,this.light.updateMatrixWorld(),this.color=i,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const Qd=new on,tp=new Cr,ep=new Cr;class ip extends lr{constructor(t,e,i){super(),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=i;const n=new Ju(e);n.rotateY(.5*Math.PI),this.material=new Pr({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);const r=n.getAttribute("position"),a=new Float32Array(3*r.count);n.setAttribute("color",new Ir(a,3)),this.add(new xa(n,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const t=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{const e=t.geometry.getAttribute("color");tp.copy(this.light.color),ep.copy(this.light.groundColor);for(let t=0,i=e.count;t<i;t++){const n=t<i/2?tp:ep;e.setXYZ(t,n.r,n.g,n.b)}e.needsUpdate=!0}t.lookAt(Qd.setFromMatrixPosition(this.light.matrixWorld).negate())}}class np extends Jl{constructor(t=10,e=10,i=4473924,n=8947848){i=new Cr(i),n=new Cr(n);const r=e/2,a=t/e,o=t/2,s=[],l=[];for(let t=0,u=0,h=-o;t<=e;t++,h+=a){s.push(-o,0,h,o,0,h),s.push(h,0,-o,h,0,o);const e=t===r?i:n;e.toArray(l,u),u+=3,e.toArray(l,u),u+=3,e.toArray(l,u),u+=3,e.toArray(l,u),u+=3}const u=new na;u.setAttribute("position",new Wr(s,3)),u.setAttribute("color",new Wr(l,3)),super(u,new Hl({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}}class rp extends Jl{constructor(t=10,e=16,i=8,n=64,r=4473924,a=8947848){r=new Cr(r),a=new Cr(a);const o=[],s=[];for(let i=0;i<=e;i++){const n=i/e*(2*Math.PI),l=Math.sin(n)*t,u=Math.cos(n)*t;o.push(0,0,0),o.push(l,0,u);const h=1&i?r:a;s.push(h.r,h.g,h.b),s.push(h.r,h.g,h.b)}for(let e=0;e<=i;e++){const l=1&e?r:a,u=t-t/i*e;for(let t=0;t<n;t++){let e=t/n*(2*Math.PI),i=Math.sin(e)*u,r=Math.cos(e)*u;o.push(i,0,r),s.push(l.r,l.g,l.b),e=(t+1)/n*(2*Math.PI),i=Math.sin(e)*u,r=Math.cos(e)*u,o.push(i,0,r),s.push(l.r,l.g,l.b)}}const l=new na;l.setAttribute("position",new Wr(o,3)),l.setAttribute("color",new Wr(s,3)),super(l,new Hl({vertexColors:!0,toneMapped:!1})),this.type="PolarGridHelper"}}const ap=new on,op=new on,sp=new on;class lp extends lr{constructor(t,e,i){super(),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,void 0===e&&(e=1);let n=new na;n.setAttribute("position",new Wr([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));const r=new Hl({fog:!1,toneMapped:!1});this.lightPlane=new Yl(n,r),this.add(this.lightPlane),n=new na,n.setAttribute("position",new Wr([0,0,0,0,0,1],3)),this.targetLine=new Yl(n,r),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){ap.setFromMatrixPosition(this.light.matrixWorld),op.setFromMatrixPosition(this.light.target.matrixWorld),sp.subVectors(op,ap),this.lightPlane.lookAt(op),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(op),this.targetLine.scale.z=sp.length()}}const up=new on,hp=new Aa;class cp extends Jl{constructor(t){const e=new na,i=new Hl({color:16777215,vertexColors:!0,toneMapped:!1}),n=[],r=[],a={},o=new Cr(16755200),s=new Cr(16711680),l=new Cr(43775),u=new Cr(16777215),h=new Cr(3355443);function c(t,e,i){d(t,i),d(e,i)}function d(t,e){n.push(0,0,0),r.push(e.r,e.g,e.b),void 0===a[t]&&(a[t]=[]),a[t].push(n.length/3-1)}c("n1","n2",o),c("n2","n4",o),c("n4","n3",o),c("n3","n1",o),c("f1","f2",o),c("f2","f4",o),c("f4","f3",o),c("f3","f1",o),c("n1","f1",o),c("n2","f2",o),c("n3","f3",o),c("n4","f4",o),c("p","n1",s),c("p","n2",s),c("p","n3",s),c("p","n4",s),c("u1","u2",l),c("u2","u3",l),c("u3","u1",l),c("c","t",u),c("p","c",h),c("cn1","cn2",h),c("cn3","cn4",h),c("cf1","cf2",h),c("cf3","cf4",h),e.setAttribute("position",new Wr(n,3)),e.setAttribute("color",new Wr(r,3)),super(e,i),this.type="CameraHelper",this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update()}update(){const t=this.geometry,e=this.pointMap;hp.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),dp("c",e,t,hp,0,0,-1),dp("t",e,t,hp,0,0,1),dp("n1",e,t,hp,-1,-1,-1),dp("n2",e,t,hp,1,-1,-1),dp("n3",e,t,hp,-1,1,-1),dp("n4",e,t,hp,1,1,-1),dp("f1",e,t,hp,-1,-1,1),dp("f2",e,t,hp,1,-1,1),dp("f3",e,t,hp,-1,1,1),dp("f4",e,t,hp,1,1,1),dp("u1",e,t,hp,.7,1.1,-1),dp("u2",e,t,hp,-.7,1.1,-1),dp("u3",e,t,hp,0,2,-1),dp("cf1",e,t,hp,-1,0,1),dp("cf2",e,t,hp,1,0,1),dp("cf3",e,t,hp,0,-1,1),dp("cf4",e,t,hp,0,1,1),dp("cn1",e,t,hp,-1,0,-1),dp("cn2",e,t,hp,1,0,-1),dp("cn3",e,t,hp,0,-1,-1),dp("cn4",e,t,hp,0,1,-1),t.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function dp(t,e,i,n,r,a,o){up.set(r,a,o).unproject(n);const s=e[t];if(void 0!==s){const t=i.getAttribute("position");for(let e=0,i=s.length;e<i;e++)t.setXYZ(s[e],up.x,up.y,up.z)}}const pp=new un;class mp extends Jl{constructor(t,e=16776960){const i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=new Float32Array(24),r=new na;r.setIndex(new Ir(i,1)),r.setAttribute("position",new Ir(n,3)),super(r,new Hl({color:e,toneMapped:!1})),this.object=t,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(t){if(void 0!==t&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&pp.setFromObject(this.object),pp.isEmpty())return;const e=pp.min,i=pp.max,n=this.geometry.attributes.position,r=n.array;r[0]=i.x,r[1]=i.y,r[2]=i.z,r[3]=e.x,r[4]=i.y,r[5]=i.z,r[6]=e.x,r[7]=e.y,r[8]=i.z,r[9]=i.x,r[10]=e.y,r[11]=i.z,r[12]=i.x,r[13]=i.y,r[14]=e.z,r[15]=e.x,r[16]=i.y,r[17]=e.z,r[18]=e.x,r[19]=e.y,r[20]=e.z,r[21]=i.x,r[22]=e.y,r[23]=e.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(t){return this.object=t,this.update(),this}copy(t){return Jl.prototype.copy.call(this,t),this.object=t.object,this}}class fp extends Jl{constructor(t,e=16776960){const i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=new na;n.setIndex(new Ir(i,1)),n.setAttribute("position",new Wr([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),super(n,new Hl({color:e,toneMapped:!1})),this.box=t,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(t){const e=this.box;e.isEmpty()||(e.getCenter(this.position),e.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(t))}}class gp extends Yl{constructor(t,e=1,i=16776960){const n=i,r=new na;r.setAttribute("position",new Wr([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3)),r.computeBoundingSphere(),super(r,new Hl({color:n,toneMapped:!1})),this.type="PlaneHelper",this.plane=t,this.size=e;const a=new na;a.setAttribute("position",new Wr([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3)),a.computeBoundingSphere(),this.add(new xa(a,new Pr({color:n,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(t){let e=-this.plane.constant;Math.abs(e)<1e-8&&(e=1e-8),this.scale.set(.5*this.size,.5*this.size,e),this.children[0].material.side=e<0?f:m,this.lookAt(this.plane.normal),super.updateMatrixWorld(t)}}const _p=new on;let vp,bp;class yp extends lr{constructor(t=new on(0,0,1),e=new on(0,0,0),i=1,n=16776960,r=.2*i,a=.2*r){super(),this.type="ArrowHelper",void 0===vp&&(vp=new na,vp.setAttribute("position",new Wr([0,0,0,0,1,0],3)),bp=new hu(0,.5,1,5,1),bp.translate(0,-.5,0)),this.position.copy(e),this.line=new Yl(vp,new Hl({color:n,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new xa(bp,new Pr({color:n,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(i,r,a)}setDirection(t){if(t.y>.99999)this.quaternion.set(0,0,0,1);else if(t.y<-.99999)this.quaternion.set(1,0,0,0);else{_p.set(t.z,0,-t.x).normalize();const e=Math.acos(t.y);this.quaternion.setFromAxisAngle(_p,e)}}setLength(t,e=.2*t,i=.2*e){this.line.scale.set(1,Math.max(1e-4,t-e),1),this.line.updateMatrix(),this.cone.scale.set(i,e,i),this.cone.position.y=t,this.cone.updateMatrix()}setColor(t){this.line.material.color.set(t),this.cone.material.color.set(t)}copy(t){return super.copy(t,!1),this.line.copy(t.line),this.cone.copy(t.cone),this}}class xp extends Jl{constructor(t=1){const e=[0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t],i=new na;i.setAttribute("position",new Wr(e,3)),i.setAttribute("color",new Wr([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3)),super(i,new Hl({vertexColors:!0,toneMapped:!1})),this.type="AxesHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const wp=new Float32Array(1),Mp=new Int32Array(wp.buffer);class Ep{static toHalfFloat(t){wp[0]=t;const e=Mp[0];let i=e>>16&32768,n=e>>12&2047;const r=e>>23&255;return r<103?i:r>142?(i|=31744,i|=(255==r?0:1)&&8388607&e,i):r<113?(n|=2048,i|=(n>>114-r)+(n>>113-r&1),i):(i|=r-112<<10|n>>1,i+=1&n,i)}}const Sp=Math.pow(2,8),Tp=[.125,.215,.35,.446,.526,.582],kp=5+Tp.length,Ap={[Je]:0,[Ke]:1,[Qe]:2,[ei]:3,[ii]:4,[ni]:5,[$e]:6},zp=new Pr({side:f,depthWrite:!1,depthTest:!1}),Lp=new xa(new Ma,zp),Rp=new Ac,{_lodPlanes:Cp,_sizeLods:Pp,_sigmas:qp}=Gp(),Dp=new Cr;let Ip=null;const Bp=(1+Math.sqrt(5))/2,Op=1/Bp,Fp=[new on(1,1,1),new on(-1,1,1),new on(1,1,-1),new on(-1,1,-1),new on(0,Bp,Op),new on(0,Bp,-Op),new on(Op,0,Bp),new on(-Op,0,Bp),new on(Bp,Op,0),new on(-Bp,Op,0)];function Np(t){const e=Math.max(t.r,t.g,t.b),i=Math.min(Math.max(Math.ceil(Math.log2(e)),-128),127);return t.multiplyScalar(Math.pow(2,-i)),(i+128)/255}class Hp{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._blurMaterial=function(t){const e=new Float32Array(20),i=new on(0,1,0);return new uh({name:"SphericalGaussianBlur",defines:{n:20},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:e},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i},inputEncoding:{value:Ap[Je]},outputEncoding:{value:Ap[Je]}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t",blending:b,depthTest:!1,depthWrite:!1})}(),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,i=.1,n=100){Ip=this._renderer.getRenderTarget();const r=this._allocateTargets();return this._sceneToCubeUV(t,i,n,r),e>0&&this._blur(r,0,0,e),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(t){return this._fromTexture(t)}fromCubemap(t){return this._fromTexture(t)}compileCubemapShader(){null===this._cubemapShader&&(this._cubemapShader=Yp(),this._compileMaterial(this._cubemapShader))}compileEquirectangularShader(){null===this._equirectShader&&(this._equirectShader=jp(),this._compileMaterial(this._equirectShader))}dispose(){this._blurMaterial.dispose(),null!==this._cubemapShader&&this._cubemapShader.dispose(),null!==this._equirectShader&&this._equirectShader.dispose();for(let t=0;t<Cp.length;t++)Cp[t].dispose()}_cleanup(t){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(Ip),t.scissorTest=!1,Wp(t,0,0,t.width,t.height)}_fromTexture(t){Ip=this._renderer.getRenderTarget();const e=this._allocateTargets(t);return this._textureToCubeUV(t,e),this._applyPMREM(e),this._cleanup(e),e}_allocateTargets(t){const e={magFilter:mt,minFilter:mt,generateMipmaps:!1,type:Et,format:Ht,encoding:Up(t)?t.encoding:Qe,depthBuffer:!1},i=Vp(e);return i.depthBuffer=!t,this._pingPongRenderTarget=Vp(e),i}_compileMaterial(t){const e=new xa(Cp[0],t);this._renderer.compile(e,Rp)}_sceneToCubeUV(t,e,i,n){const r=new za(90,1,e,i),a=[1,-1,1,1,1,1],o=[1,1,1,-1,-1,-1],s=this._renderer,l=s.autoClear,u=s.outputEncoding,h=s.toneMapping;s.getClearColor(Dp),s.toneMapping=$,s.outputEncoding=Je,s.autoClear=!1;let c=!1;const d=t.background;if(d){if(d.isColor){zp.color.copy(d).convertSRGBToLinear(),t.background=null;const e=Np(zp.color);zp.opacity=e,c=!0}}else{zp.color.copy(Dp).convertSRGBToLinear();const t=Np(zp.color);zp.opacity=t,c=!0}for(let e=0;e<6;e++){const i=e%3;0==i?(r.up.set(0,a[e],0),r.lookAt(o[e],0,0)):1==i?(r.up.set(0,0,a[e]),r.lookAt(0,o[e],0)):(r.up.set(0,a[e],0),r.lookAt(0,0,o[e])),Wp(n,i*Sp,e>2?Sp:0,Sp,Sp),s.setRenderTarget(n),c&&s.render(Lp,r),s.render(t,r)}s.toneMapping=h,s.outputEncoding=u,s.autoClear=l}_textureToCubeUV(t,e){const i=this._renderer;t.isCubeTexture?null==this._cubemapShader&&(this._cubemapShader=Yp()):null==this._equirectShader&&(this._equirectShader=jp());const n=t.isCubeTexture?this._cubemapShader:this._equirectShader,r=new xa(Cp[0],n),a=n.uniforms;a.envMap.value=t,t.isCubeTexture||a.texelSize.value.set(1/t.image.width,1/t.image.height),a.inputEncoding.value=Ap[t.encoding],a.outputEncoding.value=Ap[e.texture.encoding],Wp(e,0,0,3*Sp,2*Sp),i.setRenderTarget(e),i.render(r,Rp)}_applyPMREM(t){const e=this._renderer,i=e.autoClear;e.autoClear=!1;for(let e=1;e<kp;e++){const i=Math.sqrt(qp[e]*qp[e]-qp[e-1]*qp[e-1]),n=Fp[(e-1)%Fp.length];this._blur(t,e-1,e,i,n)}e.autoClear=i}_blur(t,e,i,n,r){const a=this._pingPongRenderTarget;this._halfBlur(t,a,e,i,n,"latitudinal",r),this._halfBlur(a,t,i,i,n,"longitudinal",r)}_halfBlur(t,e,i,n,r,a,o){const s=this._renderer,l=this._blurMaterial;"latitudinal"!==a&&"longitudinal"!==a&&console.error("blur direction must be either latitudinal or longitudinal!");const u=new xa(Cp[n],l),h=l.uniforms,c=Pp[i]-1,d=isFinite(r)?Math.PI/(2*c):2*Math.PI/39,p=r/d,m=isFinite(r)?1+Math.floor(3*p):20;m>20&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${m} samples when the maximum is set to 20`);const f=[];let g=0;for(let t=0;t<20;++t){const e=t/p,i=Math.exp(-e*e/2);f.push(i),0==t?g+=i:t<m&&(g+=2*i)}for(let t=0;t<f.length;t++)f[t]=f[t]/g;h.envMap.value=t.texture,h.samples.value=m,h.weights.value=f,h.latitudinal.value="latitudinal"===a,o&&(h.poleAxis.value=o),h.dTheta.value=d,h.mipInt.value=8-i,h.inputEncoding.value=Ap[t.texture.encoding],h.outputEncoding.value=Ap[t.texture.encoding];const _=Pp[n];Wp(e,3*Math.max(0,Sp-2*_),(0===n?0:2*Sp)+2*_*(n>4?n-8+4:0),3*_,2*_),s.setRenderTarget(e),s.render(u,Rp)}}function Up(t){return void 0!==t&&t.type===Et&&(t.encoding===Je||t.encoding===Ke||t.encoding===$e)}function Gp(){const t=[],e=[],i=[];let n=8;for(let r=0;r<kp;r++){const a=Math.pow(2,n);e.push(a);let o=1/a;r>4?o=Tp[r-8+4-1]:0==r&&(o=0),i.push(o);const s=1/(a-1),l=-s/2,u=1+s/2,h=[l,l,u,l,u,u,l,l,u,u,l,u],c=6,d=6,p=3,m=2,f=1,g=new Float32Array(p*d*c),_=new Float32Array(m*d*c),v=new Float32Array(f*d*c);for(let t=0;t<c;t++){const e=t%3*2/3-1,i=t>2?0:-1,n=[e,i,0,e+2/3,i,0,e+2/3,i+1,0,e,i,0,e+2/3,i+1,0,e,i+1,0];g.set(n,p*d*t),_.set(h,m*d*t);const r=[t,t,t,t,t,t];v.set(r,f*d*t)}const b=new na;b.setAttribute("position",new Ir(g,p)),b.setAttribute("uv",new Ir(_,m)),b.setAttribute("faceIndex",new Ir(v,f)),t.push(b),n>4&&n--}return{_lodPlanes:t,_sizeLods:e,_sigmas:i}}function Vp(t){const e=new nn(3*Sp,3*Sp,t);return e.texture.mapping=ut,e.texture.name="PMREM.cubeUv",e.scissorTest=!0,e}function Wp(t,e,i,n,r){t.viewport.set(e,i,n,r),t.scissor.set(e,i,n,r)}function jp(){const t=new Xi(1,1);return new uh({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:t},inputEncoding:{value:Ap[Je]},outputEncoding:{value:Ap[Je]}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\t\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tvec2 f = fract( uv / texelSize - 0.5 );\n\t\t\t\tuv -= f * texelSize;\n\t\t\t\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x += texelSize.x;\n\t\t\t\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.y += texelSize.y;\n\t\t\t\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x -= texelSize.x;\n\t\t\t\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\n\t\t\t\tvec3 tm = mix( tl, tr, f.x );\n\t\t\t\tvec3 bm = mix( bl, br, f.x );\n\t\t\t\tgl_FragColor.rgb = mix( tm, bm, f.y );\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t",blending:b,depthTest:!1,depthWrite:!1})}function Yp(){return new uh({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:Ap[Je]},outputEncoding:{value:Ap[Je]}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\t\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t",blending:b,depthTest:!1,depthWrite:!1})}const Xp=0,Zp=1,Jp=0,Kp=1,$p=2;function Qp(t){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),t}function tm(t=[]){return console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),t.isMultiMaterial=!0,t.materials=t,t.clone=function(){return t.slice()},t}function em(t,e){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new nu(t,e)}function im(t){return console.warn("THREE.Particle has been renamed to THREE.Sprite."),new xl(t)}function nm(t,e){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new nu(t,e)}function rm(t){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new $l(t)}function am(t){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new $l(t)}function om(t){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new $l(t)}function sm(t,e,i){return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),new on(t,e,i)}function lm(t,e){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."),new Ir(t,e).setUsage(Si)}function um(t,e){return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),new Br(t,e)}function hm(t,e){return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),new Or(t,e)}function cm(t,e){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),new Fr(t,e)}function dm(t,e){return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),new Nr(t,e)}function pm(t,e){return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),new Hr(t,e)}function mm(t,e){return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),new Ur(t,e)}function fm(t,e){return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),new Gr(t,e)}function gm(t,e){return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),new Wr(t,e)}function _m(t,e){return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),new jr(t,e)}function vm(t){return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),new xp(t)}function bm(t,e){return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),new mp(t,e)}function ym(t,e){return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),new Jl(new vu(t.geometry),new Hl({color:void 0!==e?e:16777215}))}function xm(t,e){return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),new Jl(new oh(t.geometry),new Hl({color:void 0!==e?e:16777215}))}function wm(t){return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),new Fh(t)}function Mm(t){return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),new Vh(t)}function Em(t,e,i){return console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."),new Pa(t,i)}function Sm(){console.error("THREE.CanvasRenderer has been removed")}function Tm(){console.error("THREE.JSONLoader has been removed.")}jh.create=function(t,e){return console.log("THREE.Curve.create() has been deprecated"),t.prototype=Object.create(jh.prototype),t.prototype.constructor=t,t.prototype.getPoint=e,t},pc.prototype.fromPoints=function(t){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(t)},np.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},Jd.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},Bh.prototype.extractUrlBase=function(t){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),Ic.extractUrlBase(t)},Bh.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},Nd.prototype.center=function(t){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(t)},Nd.prototype.empty=function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},Nd.prototype.isIntersectionBox=function(t){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},Nd.prototype.size=function(t){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(t)},un.prototype.center=function(t){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(t)},un.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},un.prototype.isIntersectionBox=function(t){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},un.prototype.isIntersectionSphere=function(t){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},un.prototype.size=function(t){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(t)},An.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()},Ba.prototype.setFromMatrix=function(t){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(t)},Gd.prototype.center=function(t){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(t)},Zi.prototype.flattenToArrayOffset=function(t,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},Zi.prototype.multiplyVector3=function(t){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},Zi.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},Zi.prototype.applyToBufferAttribute=function(t){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},Zi.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},Zi.prototype.getInverse=function(t){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()},Bn.prototype.extractPosition=function(t){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(t)},Bn.prototype.flattenToArrayOffset=function(t,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},Bn.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new on).setFromMatrixColumn(this,3)},Bn.prototype.setRotationFromQuaternion=function(t){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(t)},Bn.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},Bn.prototype.multiplyVector3=function(t){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},Bn.prototype.multiplyVector4=function(t){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},Bn.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},Bn.prototype.rotateAxis=function(t){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),t.transformDirection(this)},Bn.prototype.crossVector=function(t){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},Bn.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")},Bn.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},Bn.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},Bn.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},Bn.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},Bn.prototype.applyToBufferAttribute=function(t){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},Bn.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},Bn.prototype.makeFrustum=function(t,e,i,n,r,a){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(t,e,n,i,r,a)},Bn.prototype.getInverse=function(t){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()},dr.prototype.isIntersectionLine=function(t){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(t)},an.prototype.multiplyVector3=function(t){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),t.applyQuaternion(this)},an.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()},In.prototype.isIntersectionBox=function(t){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},In.prototype.isIntersectionPlane=function(t){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(t)},In.prototype.isIntersectionSphere=function(t){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},Mr.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},Mr.prototype.barycoordFromPoint=function(t,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(t,e)},Mr.prototype.midpoint=function(t){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(t)},Mr.prototypenormal=function(t){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(t)},Mr.prototype.plane=function(t){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(t)},Mr.barycoordFromPoint=function(t,e,i,n,r){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),Mr.getBarycoord(t,e,i,n,r)},Mr.normal=function(t,e,i,n){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),Mr.getNormal(t,e,i,n)},mc.prototype.extractAllPoints=function(t){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(t)},mc.prototype.extrude=function(t){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new ju(this,t)},mc.prototype.makeGeometry=function(t){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new Qu(this,t)},Xi.prototype.fromAttribute=function(t,e,i){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,i)},Xi.prototype.distanceToManhattan=function(t){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},Xi.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},on.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},on.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},on.prototype.getPositionFromMatrix=function(t){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(t)},on.prototype.getScaleFromMatrix=function(t){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(t)},on.prototype.getColumnFromMatrix=function(t,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,t)},on.prototype.applyProjection=function(t){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(t)},on.prototype.fromAttribute=function(t,e,i){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,i)},on.prototype.distanceToManhattan=function(t){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},on.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},en.prototype.fromAttribute=function(t,e,i){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,i)},en.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},lr.prototype.getChildByName=function(t){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(t)},lr.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},lr.prototype.translate=function(t,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,t)},lr.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},lr.prototype.applyMatrix=function(t){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)},Object.defineProperties(lr.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(t){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=t}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),xa.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")},Object.defineProperties(xa.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),Ye},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),Rl.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},za.prototype.setLens=function(t,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==e&&(this.filmGauge=e),this.setFocalLength(t)},Object.defineProperties(fc.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(t){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=t}},shadowCameraLeft:{set:function(t){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=t}},shadowCameraRight:{set:function(t){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=t}},shadowCameraTop:{set:function(t){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=t}},shadowCameraBottom:{set:function(t){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=t}},shadowCameraNear:{set:function(t){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=t}},shadowCameraFar:{set:function(t){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=t}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(t){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=t}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(t){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=t}},shadowMapHeight:{set:function(t){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=t}}}),Object.defineProperties(Ir.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===Si},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(Si)}}}),Ir.prototype.setDynamic=function(t){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?Si:Ei),this},Ir.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},Ir.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},na.prototype.addIndex=function(t){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(t)},na.prototype.addAttribute=function(t,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),e&&e.isBufferAttribute||e&&e.isInterleavedBufferAttribute?"index"===t?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(t,e):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(t,new Ir(arguments[1],arguments[2])))},na.prototype.addDrawCall=function(t,e,i){void 0!==i&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(t,e)},na.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},na.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},na.prototype.removeAttribute=function(t){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(t)},na.prototype.applyMatrix=function(t){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)},Object.defineProperties(na.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),rl.prototype.setDynamic=function(t){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?Si:Ei),this},rl.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},ju.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},ju.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},ju.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")},nl.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")},Rd.prototype.onUpdate=function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this},Object.defineProperties(Sr.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new Cr}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=t===_}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(t){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=t}}}),Object.defineProperties(ka.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(t){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=t}}}),Qs.prototype.clearTarget=function(t,e,i,n){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(t),this.clear(e,i,n)},Qs.prototype.animate=function(t){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(t)},Qs.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},Qs.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},Qs.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},Qs.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},Qs.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},Qs.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},Qs.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},Qs.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},Qs.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},Qs.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},Qs.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},Qs.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},Qs.prototype.enableScissorTest=function(t){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(t)},Qs.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},Qs.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},Qs.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},Qs.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},Qs.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},Qs.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},Qs.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},Qs.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},Qs.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},Qs.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()},Object.defineProperties(Qs.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=t}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=t}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(t){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===t?Ke:Je}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}}),Object.defineProperties(Gs.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(nn.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=t}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=t}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=t}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=t}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(t){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=t}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(t){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=t}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(t){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=t}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(t){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=t}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(t){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=t}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(t){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=t}}}),hd.prototype.load=function(t){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const e=this;return(new Kc).load(t,(function(t){e.setBuffer(t)})),this},gd.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},Ra.prototype.updateCubeMap=function(t,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(t,e)},Ra.prototype.clear=function(t,e,i,n){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(t,e,i,n)},Ki.crossOrigin=void 0,Ki.loadTexture=function(t,e,i,n){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const r=new Wh;r.setCrossOrigin(this.crossOrigin);const a=r.load(t,i,void 0,n);return e&&(a.mapping=e),a},Ki.loadTextureCube=function(t,e,i,n){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const r=new Gh;r.setCrossOrigin(this.crossOrigin);const a=r.load(t,i,void 0,n);return e&&(a.mapping=e),a},Ki.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},Ki.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};const km={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")}};function Am(){console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:n}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=n)},4942:()=>{!function(){const t={type:"change"},e={type:"start"},i={type:"end"};class n extends THREE.EventDispatcher{constructor(n,r){super(),void 0===r&&console.warn('THREE.OrbitControls: The second parameter "domElement" is now mandatory.'),r===document&&console.error('THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),this.object=n,this.domElement=r,this.enabled=!0,this.target=new THREE.Vector3,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:THREE.MOUSE.ROTATE,MIDDLE:THREE.MOUSE.DOLLY,RIGHT:THREE.MOUSE.PAN},this.touches={ONE:THREE.TOUCH.ROTATE,TWO:THREE.TOUCH.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return u.phi},this.getAzimuthalAngle=function(){return u.theta},this.listenToKeyEvents=function(t){t.addEventListener("keydown",G),this._domElementKeyEvents=t},this.saveState=function(){a.target0.copy(a.target),a.position0.copy(a.object.position),a.zoom0=a.object.zoom},this.reset=function(){a.target.copy(a.target0),a.object.position.copy(a.position0),a.object.zoom=a.zoom0,a.object.updateProjectionMatrix(),a.dispatchEvent(t),a.update(),s=o.NONE},this.update=function(){const e=new THREE.Vector3,i=(new THREE.Quaternion).setFromUnitVectors(n.up,new THREE.Vector3(0,1,0)),r=i.clone().invert(),m=new THREE.Vector3,f=new THREE.Quaternion,g=2*Math.PI;return function(){const n=a.object.position;e.copy(n).sub(a.target),e.applyQuaternion(i),u.setFromVector3(e),a.autoRotate&&s===o.NONE&&E(2*Math.PI/60/60*a.autoRotateSpeed),a.enableDamping?(u.theta+=h.theta*a.dampingFactor,u.phi+=h.phi*a.dampingFactor):(u.theta+=h.theta,u.phi+=h.phi);let _=a.minAzimuthAngle,v=a.maxAzimuthAngle;return isFinite(_)&&isFinite(v)&&(_<-Math.PI?_+=g:_>Math.PI&&(_-=g),v<-Math.PI?v+=g:v>Math.PI&&(v-=g),u.theta=_<=v?Math.max(_,Math.min(v,u.theta)):u.theta>(_+v)/2?Math.max(_,u.theta):Math.min(v,u.theta)),u.phi=Math.max(a.minPolarAngle,Math.min(a.maxPolarAngle,u.phi)),u.makeSafe(),u.radius*=c,u.radius=Math.max(a.minDistance,Math.min(a.maxDistance,u.radius)),!0===a.enableDamping?a.target.addScaledVector(d,a.dampingFactor):a.target.add(d),e.setFromSpherical(u),e.applyQuaternion(r),n.copy(a.target).add(e),a.object.lookAt(a.target),!0===a.enableDamping?(h.theta*=1-a.dampingFactor,h.phi*=1-a.dampingFactor,d.multiplyScalar(1-a.dampingFactor)):(h.set(0,0,0),d.set(0,0,0)),c=1,!!(p||m.distanceToSquared(a.object.position)>l||8*(1-f.dot(a.object.quaternion))>l)&&(a.dispatchEvent(t),m.copy(a.object.position),f.copy(a.object.quaternion),p=!1,!0)}}(),this.dispose=function(){a.domElement.removeEventListener("contextmenu",Y),a.domElement.removeEventListener("pointerdown",F),a.domElement.removeEventListener("wheel",U),a.domElement.removeEventListener("touchstart",V),a.domElement.removeEventListener("touchend",j),a.domElement.removeEventListener("touchmove",W),a.domElement.ownerDocument.removeEventListener("pointermove",N),a.domElement.ownerDocument.removeEventListener("pointerup",H),null!==a._domElementKeyEvents&&a._domElementKeyEvents.removeEventListener("keydown",G)};const a=this,o={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let s=o.NONE;const l=1e-6,u=new THREE.Spherical,h=new THREE.Spherical;let c=1;const d=new THREE.Vector3;let p=!1;const m=new THREE.Vector2,f=new THREE.Vector2,g=new THREE.Vector2,_=new THREE.Vector2,v=new THREE.Vector2,b=new THREE.Vector2,y=new THREE.Vector2,x=new THREE.Vector2,w=new THREE.Vector2;function M(){return Math.pow(.95,a.zoomSpeed)}function E(t){h.theta-=t}function S(t){h.phi-=t}const T=function(){const t=new THREE.Vector3;return function(e,i){t.setFromMatrixColumn(i,0),t.multiplyScalar(-e),d.add(t)}}(),k=function(){const t=new THREE.Vector3;return function(e,i){!0===a.screenSpacePanning?t.setFromMatrixColumn(i,1):(t.setFromMatrixColumn(i,0),t.crossVectors(a.object.up,t)),t.multiplyScalar(e),d.add(t)}}(),A=function(){const t=new THREE.Vector3;return function(e,i){const n=a.domElement;if(a.object.isPerspectiveCamera){const r=a.object.position;t.copy(r).sub(a.target);let o=t.length();o*=Math.tan(a.object.fov/2*Math.PI/180),T(2*e*o/n.clientHeight,a.object.matrix),k(2*i*o/n.clientHeight,a.object.matrix)}else a.object.isOrthographicCamera?(T(e*(a.object.right-a.object.left)/a.object.zoom/n.clientWidth,a.object.matrix),k(i*(a.object.top-a.object.bottom)/a.object.zoom/n.clientHeight,a.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),a.enablePan=!1)}}();function z(t){a.object.isPerspectiveCamera?c/=t:a.object.isOrthographicCamera?(a.object.zoom=Math.max(a.minZoom,Math.min(a.maxZoom,a.object.zoom*t)),a.object.updateProjectionMatrix(),p=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),a.enableZoom=!1)}function L(t){a.object.isPerspectiveCamera?c*=t:a.object.isOrthographicCamera?(a.object.zoom=Math.max(a.minZoom,Math.min(a.maxZoom,a.object.zoom/t)),a.object.updateProjectionMatrix(),p=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),a.enableZoom=!1)}function R(t){m.set(t.clientX,t.clientY)}function C(t){_.set(t.clientX,t.clientY)}function P(t){if(1==t.touches.length)m.set(t.touches[0].pageX,t.touches[0].pageY);else{const e=.5*(t.touches[0].pageX+t.touches[1].pageX),i=.5*(t.touches[0].pageY+t.touches[1].pageY);m.set(e,i)}}function q(t){if(1==t.touches.length)_.set(t.touches[0].pageX,t.touches[0].pageY);else{const e=.5*(t.touches[0].pageX+t.touches[1].pageX),i=.5*(t.touches[0].pageY+t.touches[1].pageY);_.set(e,i)}}function D(t){const e=t.touches[0].pageX-t.touches[1].pageX,i=t.touches[0].pageY-t.touches[1].pageY,n=Math.sqrt(e*e+i*i);y.set(0,n)}function I(t){if(1==t.touches.length)f.set(t.touches[0].pageX,t.touches[0].pageY);else{const e=.5*(t.touches[0].pageX+t.touches[1].pageX),i=.5*(t.touches[0].pageY+t.touches[1].pageY);f.set(e,i)}g.subVectors(f,m).multiplyScalar(a.rotateSpeed);const e=a.domElement;E(2*Math.PI*g.x/e.clientHeight),S(2*Math.PI*g.y/e.clientHeight),m.copy(f)}function B(t){if(1==t.touches.length)v.set(t.touches[0].pageX,t.touches[0].pageY);else{const e=.5*(t.touches[0].pageX+t.touches[1].pageX),i=.5*(t.touches[0].pageY+t.touches[1].pageY);v.set(e,i)}b.subVectors(v,_).multiplyScalar(a.panSpeed),A(b.x,b.y),_.copy(v)}function O(t){const e=t.touches[0].pageX-t.touches[1].pageX,i=t.touches[0].pageY-t.touches[1].pageY,n=Math.sqrt(e*e+i*i);x.set(0,n),w.set(0,Math.pow(x.y/y.y,a.zoomSpeed)),z(w.y),y.copy(x)}function F(t){if(!1!==a.enabled)switch(t.pointerType){case"mouse":case"pen":!function(t){let i;switch(t.preventDefault(),a.domElement.focus?a.domElement.focus():window.focus(),t.button){case 0:i=a.mouseButtons.LEFT;break;case 1:i=a.mouseButtons.MIDDLE;break;case 2:i=a.mouseButtons.RIGHT;break;default:i=-1}switch(i){case THREE.MOUSE.DOLLY:if(!1===a.enableZoom)return;!function(t){y.set(t.clientX,t.clientY)}(t),s=o.DOLLY;break;case THREE.MOUSE.ROTATE:if(t.ctrlKey||t.metaKey||t.shiftKey){if(!1===a.enablePan)return;C(t),s=o.PAN}else{if(!1===a.enableRotate)return;R(t),s=o.ROTATE}break;case THREE.MOUSE.PAN:if(t.ctrlKey||t.metaKey||t.shiftKey){if(!1===a.enableRotate)return;R(t),s=o.ROTATE}else{if(!1===a.enablePan)return;C(t),s=o.PAN}break;default:s=o.NONE}s!==o.NONE&&(a.domElement.ownerDocument.addEventListener("pointermove",N),a.domElement.ownerDocument.addEventListener("pointerup",H),a.dispatchEvent(e))}(t)}}function N(t){if(!1!==a.enabled)switch(t.pointerType){case"mouse":case"pen":!function(t){if(!1!==a.enabled)switch(t.preventDefault(),s){case o.ROTATE:if(!1===a.enableRotate)return;!function(t){f.set(t.clientX,t.clientY),g.subVectors(f,m).multiplyScalar(a.rotateSpeed);const e=a.domElement;E(2*Math.PI*g.x/e.clientHeight),S(2*Math.PI*g.y/e.clientHeight),m.copy(f),a.update()}(t);break;case o.DOLLY:if(!1===a.enableZoom)return;!function(t){x.set(t.clientX,t.clientY),w.subVectors(x,y),w.y>0?z(M()):w.y<0&&L(M()),y.copy(x),a.update()}(t);break;case o.PAN:if(!1===a.enablePan)return;!function(t){v.set(t.clientX,t.clientY),b.subVectors(v,_).multiplyScalar(a.panSpeed),A(b.x,b.y),_.copy(v),a.update()}(t)}}(t)}}function H(t){switch(t.pointerType){case"mouse":case"pen":a.domElement.ownerDocument.removeEventListener("pointermove",N),a.domElement.ownerDocument.removeEventListener("pointerup",H),!1!==a.enabled&&(a.dispatchEvent(i),s=o.NONE)}}function U(t){!1===a.enabled||!1===a.enableZoom||s!==o.NONE&&s!==o.ROTATE||(t.preventDefault(),a.dispatchEvent(e),function(t){t.deltaY<0?L(M()):t.deltaY>0&&z(M()),a.update()}(t),a.dispatchEvent(i))}function G(t){!1!==a.enabled&&!1!==a.enablePan&&function(t){let e=!1;switch(t.code){case a.keys.UP:A(0,a.keyPanSpeed),e=!0;break;case a.keys.BOTTOM:A(0,-a.keyPanSpeed),e=!0;break;case a.keys.LEFT:A(a.keyPanSpeed,0),e=!0;break;case a.keys.RIGHT:A(-a.keyPanSpeed,0),e=!0}e&&(t.preventDefault(),a.update())}(t)}function V(t){if(!1!==a.enabled){switch(t.preventDefault(),t.touches.length){case 1:switch(a.touches.ONE){case THREE.TOUCH.ROTATE:if(!1===a.enableRotate)return;P(t),s=o.TOUCH_ROTATE;break;case THREE.TOUCH.PAN:if(!1===a.enablePan)return;q(t),s=o.TOUCH_PAN;break;default:s=o.NONE}break;case 2:switch(a.touches.TWO){case THREE.TOUCH.DOLLY_PAN:if(!1===a.enableZoom&&!1===a.enablePan)return;!function(t){a.enableZoom&&D(t),a.enablePan&&q(t)}(t),s=o.TOUCH_DOLLY_PAN;break;case THREE.TOUCH.DOLLY_ROTATE:if(!1===a.enableZoom&&!1===a.enableRotate)return;!function(t){a.enableZoom&&D(t),a.enableRotate&&P(t)}(t),s=o.TOUCH_DOLLY_ROTATE;break;default:s=o.NONE}break;default:s=o.NONE}s!==o.NONE&&a.dispatchEvent(e)}}function W(t){if(!1!==a.enabled)switch(t.preventDefault(),s){case o.TOUCH_ROTATE:if(!1===a.enableRotate)return;I(t),a.update();break;case o.TOUCH_PAN:if(!1===a.enablePan)return;B(t),a.update();break;case o.TOUCH_DOLLY_PAN:if(!1===a.enableZoom&&!1===a.enablePan)return;!function(t){a.enableZoom&&O(t),a.enablePan&&B(t)}(t),a.update();break;case o.TOUCH_DOLLY_ROTATE:if(!1===a.enableZoom&&!1===a.enableRotate)return;!function(t){a.enableZoom&&O(t),a.enableRotate&&I(t)}(t),a.update();break;default:s=o.NONE}}function j(t){!1!==a.enabled&&(a.dispatchEvent(i),s=o.NONE)}function Y(t){!1!==a.enabled&&t.preventDefault()}a.domElement.addEventListener("contextmenu",Y),a.domElement.addEventListener("pointerdown",F),a.domElement.addEventListener("wheel",U,{passive:!1}),a.domElement.addEventListener("touchstart",V,{passive:!1}),a.domElement.addEventListener("touchend",j),a.domElement.addEventListener("touchmove",W,{passive:!1}),this.update()}}THREE.MapControls=class extends n{constructor(t,e){super(t,e),this.screenSpacePanning=!1,this.mouseButtons.LEFT=THREE.MOUSE.PAN,this.mouseButtons.RIGHT=THREE.MOUSE.ROTATE,this.touches.ONE=THREE.TOUCH.PAN,this.touches.TWO=THREE.TOUCH.DOLLY_ROTATE}},THREE.OrbitControls=n}()},4298:t=>{const e=/\((-?[.\d]+), (-?[.\d]+), (-?[.\d]+)\)/;class i{constructor(t,e,i){this.x=t,this.y=e,this.z=i}set(t,e,i){return this.x=t,this.y=e,this.z=i,this}update(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}floored(){return new i(Math.floor(this.x),Math.floor(this.y),Math.floor(this.z))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}offset(t,e,n){return new i(this.x+t,this.y+e,this.z+n)}translate(t,e,i){return this.x+=t,this.y+=e,this.z+=i,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}subtract(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}plus(t){return this.offset(t.x,t.y,t.z)}minus(t){return this.offset(-t.x,-t.y,-t.z)}scaled(t){return new i(this.x*t,this.y*t,this.z*t)}abs(){return new i(Math.abs(this.x),Math.abs(this.y),Math.abs(this.z))}volume(){return this.x*this.y*this.z}modulus(t){return new i(r(this.x,t.x),r(this.y,t.y),r(this.z,t.z))}distanceTo(t){var e=t.x-this.x,i=t.y-this.y,n=t.z-this.z;return Math.sqrt(e*e+i*i+n*n)}distanceSquared(t){var e=t.x-this.x,i=t.y-this.y,n=t.z-this.z;return e*e+i*i+n*n}equals(t){return this.x===t.x&&this.y===t.y&&this.z===t.z}toString(){return"("+this.x+", "+this.y+", "+this.z+")"}clone(){return this.offset(0,0,0)}min(t){return new i(Math.min(this.x,t.x),Math.min(this.y,t.y),Math.min(this.z,t.z))}max(t){return new i(Math.max(this.x,t.x),Math.max(this.y,t.y),Math.max(this.z,t.z))}norm(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}cross(t){return new i(this.y*t.z-this.z*t.y,this.z*t.x-this.x*t.z,this.x*t.y-this.y*t.x)}unit(){const t=this.norm();return 0===t?this.clone():this.scaled(1/t)}normalize(){const t=this.norm();return 0!==t&&(this.x/=t,this.y/=t,this.z/=t),this}scale(t){return this.x*=t,this.y*=t,this.z*=t,this}xyDistanceTo(t){var e=t.x-this.x,i=t.y-this.y;return Math.sqrt(e*e+i*i)}xzDistanceTo(t){var e=t.x-this.x,i=t.z-this.z;return Math.sqrt(e*e+i*i)}yzDistanceTo(t){var e=t.y-this.y,i=t.z-this.z;return Math.sqrt(e*e+i*i)}innerProduct(t){return this.x*t.x+this.y*t.y+this.z*t.z}manhattanDistanceTo(t){return Math.abs(t.x-this.x)+Math.abs(t.y-this.y)+Math.abs(t.z-this.z)}toArray(){return[this.x,this.y,this.z]}}function n(t,n,r){if(null==t)return new i(0,0,0);if(Array.isArray(t))return new i(parseFloat(t[0],10),parseFloat(t[1],10),parseFloat(t[2],10));if("object"==typeof t)return new i(parseFloat(t.x,10),parseFloat(t.y,10),parseFloat(t.z,10));if("string"==typeof t&&null==n){var a=t.match(e);if(a)return new i(parseFloat(a[1],10),parseFloat(a[2],10),parseFloat(a[3],10));throw new Error("vec3: cannot parse: "+t)}return new i(parseFloat(t,10),parseFloat(n,10),parseFloat(r,10))}function r(t,e){var i=t%e;return i<0?i+e:i}t.exports=n,n.Vec3=i},4116:(t,e,i)=>{t.exports={Viewer:i(3171).Viewer,WorldView:i(7094).WorldView,MapControls:i(9030).MapControls,Entity:i(1698),getBufferFromStream:i(9739).getBufferFromStream}},9030:t=>{const e=-1;t.exports={MapControls:class{constructor(t,i){this.enabled=!0,this.object=t,this.element=i,this.mouseButtons={LEFT:THREE.MOUSE.ROTATE,MIDDLE:THREE.MOUSE.DOLLY,RIGHT:THREE.MOUSE.PAN},this.touches={ONE:THREE.TOUCH.ROTATE,TWO:THREE.TOUCH.DOLLY_PAN},this.controlMap={MOVE_FORWARD:["KeyW","KeyZ"],MOVE_BACKWARD:"KeyS",MOVE_LEFT:["KeyA","KeyQ"],MOVE_RIGHT:"KeyD",MOVE_DOWN:"ShiftLeft",MOVE_UP:"Space"},this.target=new THREE.Vector3,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.01,this.enableZoom=!0,this.enableTouchZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.enableTouchRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.enableTouchPan=!0,this.panSpeed=1,this.screenSpacePanning=!1,this.keyPanDistance=32,this.keyPanSpeed=10,this.verticalTranslationSpeed=.5,this.keyDowns=[],this.changeEvent={type:"change"},this.startEvent={type:"start"},this.endEvent={type:"end"},this.state=e,this.EPS=1e-6,this.spherical=new THREE.Spherical,this.sphericalDelta=new THREE.Spherical,this.scale=1,this.panOffset=new THREE.Vector3,this.zoomChanged=!1,this.rotateStart=new THREE.Vector2,this.rotateEnd=new THREE.Vector2,this.rotateDelta=new THREE.Vector2,this.panStart=new THREE.Vector2,this.panEnd=new THREE.Vector2,this.panDelta=new THREE.Vector2,this.dollyStart=new THREE.Vector2,this.dollyEnd=new THREE.Vector2,this.dollyDelta=new THREE.Vector2,this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.ticks=0,this.onPointerMove=this.onPointerMove.bind(this),this.onPointerUp=this.onPointerUp.bind(this),this.onPointerDown=this.onPointerDown.bind(this),this.onMouseWheel=this.onMouseWheel.bind(this),this.onTouchStart=this.onTouchStart.bind(this),this.onTouchEnd=this.onTouchEnd.bind(this),this.onTouchMove=this.onTouchMove.bind(this),this.onContextMenu=this.onContextMenu.bind(this),this.onKeyDown=this.onKeyDown.bind(this),this.onKeyUp=this.onKeyUp.bind(this),this.registerHandlers()}setRotationOrigin(t){this.target=t.clone()}unsetRotationOrigin(){this.target=new THREE.Vector3}getPolarAngle(){return this.spherical.phi}getAzimuthalAngle(){return this.spherical.theta}saveState(){this.target0.copy(this.target),this.position0.copy(this.object.position),this.zoom0=this.object.zoom}reset(){this.target.copy(this.target0),this.object.position.copy(this.position0),this.object.zoom=this.zoom0,this.object.updateProjectionMatrix(),this.dispatchEvent(this.changeEvent),this.update(!0),this.state=e}update(t){t||this.tickControls();var i=new THREE.Vector3,n=(new THREE.Quaternion).setFromUnitVectors(this.object.up,new THREE.Vector3(0,1,0)),r=n.clone().invert(),a=new THREE.Vector3,o=new THREE.Quaternion,s=2*Math.PI,l=this.object.position;i.copy(l).sub(this.target),i.applyQuaternion(n),this.spherical.setFromVector3(i),this.autoRotate&&this.state===e&&this.rotateLeft(this.getAutoRotationAngle()),this.enableDamping?(this.spherical.theta+=this.sphericalDelta.theta*this.dampingFactor,this.spherical.phi+=this.sphericalDelta.phi*this.dampingFactor):(this.spherical.theta+=this.sphericalDelta.theta,this.spherical.phi+=this.sphericalDelta.phi);var u=this.minAzimuthAngle,h=this.maxAzimuthAngle;return isFinite(u)&&isFinite(h)&&(u<-Math.PI?u+=s:u>Math.PI&&(u-=s),h<-Math.PI?h+=s:h>Math.PI&&(h-=s),this.spherical.theta=u<h?Math.max(u,Math.min(h,this.spherical.theta)):this.spherical.theta>(u+h)/2?Math.max(u,this.spherical.theta):Math.min(h,this.spherical.theta)),this.spherical.phi=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,this.spherical.phi)),this.spherical.makeSafe(),this.spherical.radius*=this.scale,this.spherical.radius=Math.max(this.minDistance,Math.min(this.maxDistance,this.spherical.radius)),!0===this.enableDamping?this.target.addScaledVector(this.panOffset,this.dampingFactor):this.target.add(this.panOffset),i.setFromSpherical(this.spherical),i.applyQuaternion(r),l.copy(this.target).add(i),this.object.lookAt(this.target),!0===this.enableDamping?(this.sphericalDelta.theta*=1-this.dampingFactor,this.sphericalDelta.phi*=1-this.dampingFactor,this.panOffset.multiplyScalar(1-this.dampingFactor)):(this.sphericalDelta.set(0,0,0),this.panOffset.set(0,0,0)),this.scale=1,!!(this.zoomChanged||a.distanceToSquared(this.object.position)>this.EPS||8*(1-o.dot(this.object.quaternion))>this.EPS)&&(this.dispatchEvent(this.changeEvent),a.copy(this.object.position),o.copy(this.object.quaternion),this.zoomChanged=!1,!0)}getAutoRotationAngle(){return 2*Math.PI/60/60*this.autoRotateSpeed}getZoomScale(){return Math.pow(.95,this.zoomSpeed)}rotateLeft(t){this.sphericalDelta.theta-=t}rotateUp(t){this.sphericalDelta.phi-=t}panLeft(t,e){let i=new THREE.Vector3;i.setFromMatrixColumn(e,0),i.multiplyScalar(-t),this.panOffset.add(i)}panUp(t,e){let i=new THREE.Vector3;!0===this.screenSpacePanning?i.setFromMatrixColumn(e,1):(i.setFromMatrixColumn(e,0),i.crossVectors(this.object.up,i)),i.multiplyScalar(t),this.panOffset.add(i)}translateY(t){this.panOffset.y+=t}pan(t,e,i){let n=new THREE.Vector3;if(this.object.isPerspectiveCamera){var r=this.object.position;n.copy(r).sub(this.target);var a=n.length();a*=Math.tan(this.object.fov/2*Math.PI/180),a=i||a,this.panLeft(2*t*a/this.element.clientHeight,this.object.matrix),this.panUp(2*e*a/this.element.clientHeight,this.object.matrix)}else this.object.isOrthographicCamera?(this.panLeft(t*(this.object.right-this.object.left)/this.object.zoom/this.element.clientWidth,this.object.matrix),this.panUp(e*(this.object.top-this.object.bottom)/this.object.zoom/this.element.clientHeight,this.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),this.enablePan=!1)}dollyOut(t){this.object.isPerspectiveCamera?this.scale/=t:this.object.isOrthographicCamera?(this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom*t)),this.object.updateProjectionMatrix(),this.zoomChanged=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}dollyIn(t){this.object.isPerspectiveCamera?this.scale*=t:this.object.isOrthographicCamera?(this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/t)),this.object.updateProjectionMatrix(),this.zoomChanged=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}handleMouseDownRotate(t){this.rotateStart.set(t.clientX,t.clientY)}handleMouseDownDolly(t){this.dollyStart.set(t.clientX,t.clientY)}handleMouseDownPan(t){this.panStart.set(t.clientX,t.clientY)}handleMouseMoveRotate(t){this.rotateEnd.set(t.clientX,t.clientY),this.rotateDelta.subVectors(this.rotateEnd,this.rotateStart).multiplyScalar(this.rotateSpeed),this.rotateLeft(2*Math.PI*this.rotateDelta.x/this.element.clientHeight),this.rotateUp(2*Math.PI*this.rotateDelta.y/this.element.clientHeight),this.rotateStart.copy(this.rotateEnd),this.update(!0)}handleMouseMoveDolly(t){this.dollyEnd.set(t.clientX,t.clientY),this.dollyDelta.subVectors(this.dollyEnd,this.dollyStart),this.dollyDelta.y>0?this.dollyOut(this.getZoomScale()):this.dollyDelta.y<0&&this.dollyIn(this.getZoomScale()),this.dollyStart.copy(this.dollyEnd),this.update(!0)}handleMouseMovePan(t){this.panEnd.set(t.clientX,t.clientY),this.panDelta.subVectors(this.panEnd,this.panStart).multiplyScalar(this.panSpeed),this.pan(this.panDelta.x,this.panDelta.y),this.panStart.copy(this.panEnd),this.update(!0)}handleMouseUp(){}handleMouseWheel(t){t.deltaY<0?this.dollyIn(this.getZoomScale()):t.deltaY>0&&this.dollyOut(this.getZoomScale()),this.update(!0)}onPointerMove(t){if(this.enabled&&this.state!=e)switch(t.pointerType){case"mouse":case"pen":this.onMouseMove(t)}}onPointerUp(t){if(this.enabled)switch(t.pointerType){case"mouse":case"pen":this.onMouseUp(t)}}onPointerDown(t){if(this.enabled)switch(t.pointerType){case"mouse":case"pen":this.onMouseDown(t)}}onMouseDown(t){var i;switch(t.preventDefault(),this.element.focus?this.element.focus():window.focus(),t.button){case 0:i=this.mouseButtons.LEFT;break;case 1:i=this.mouseButtons.MIDDLE;break;case 2:i=this.mouseButtons.RIGHT;break;default:i=-1}switch(i){case THREE.MOUSE.DOLLY:if(!1===this.enableZoom)return;this.handleMouseDownDolly(t),this.state=1;break;case THREE.MOUSE.ROTATE:if(t.ctrlKey||t.metaKey||t.shiftKey){if(!1===this.enablePan)return;this.handleMouseDownPan(t),this.state=2}else{if(!1===this.enableRotate)return;this.handleMouseDownRotate(t),this.state=0}break;case THREE.MOUSE.PAN:if(t.ctrlKey||t.metaKey||t.shiftKey){if(!1===this.enableRotate)return;this.handleMouseDownRotate(t),this.state=0}else{if(!1===this.enablePan)return;this.handleMouseDownPan(t),this.state=2}break;default:this.state=e}}onMouseMove(t){if(!1!==this.enabled)switch(t.preventDefault(),this.state){case 0:if(!1===this.enableRotate)return;this.handleMouseMoveRotate(t);break;case 1:if(!1===this.enableZoom)return;this.handleMouseMoveDolly(t);break;case 2:if(!1===this.enablePan)return;this.handleMouseMovePan(t)}}onMouseUp(t){this.state=e}onMouseWheel(t){!1===this.enabled||!1===this.enableZoom||this.state!==e&&0!==this.state||(t.preventDefault(),t.stopPropagation(),this.dispatchEvent(this.startEvent),this.handleMouseWheel(t),this.dispatchEvent(this.endEvent))}handleTouchStartRotate(t){if(1==t.touches.length)this.rotateStart.set(t.touches[0].pageX,t.touches[0].pageY);else{var e=.5*(t.touches[0].pageX+t.touches[1].pageX),i=.5*(t.touches[0].pageY+t.touches[1].pageY);this.rotateStart.set(e,i)}}handleTouchStartPan(t){if(1==t.touches.length)this.panStart.set(t.touches[0].pageX,t.touches[0].pageY);else{var e=.5*(t.touches[0].pageX+t.touches[1].pageX),i=.5*(t.touches[0].pageY+t.touches[1].pageY);this.panStart.set(e,i)}}handleTouchStartDolly(t){var e=t.touches[0].pageX-t.touches[1].pageX,i=t.touches[0].pageY-t.touches[1].pageY,n=Math.sqrt(e*e+i*i);this.dollyStart.set(0,n)}handleTouchStartDollyPan(t){this.enableTouchZoom&&this.handleTouchStartDolly(t),this.enableTouchPan&&this.handleTouchStartPan(t)}handleTouchStartDollyRotate(t){this.enableTouchZoom&&this.handleTouchStartDolly(t),this.enableTouchRotate&&this.handleTouchStartRotate(t)}handleTouchMoveRotate(t){if(1==t.touches.length)this.rotateEnd.set(t.touches[0].pageX,t.touches[0].pageY);else{var e=.5*(t.touches[0].pageX+t.touches[1].pageX),i=.5*(t.touches[0].pageY+t.touches[1].pageY);this.rotateEnd.set(e,i)}this.rotateDelta.subVectors(this.rotateEnd,this.rotateStart).multiplyScalar(this.rotateSpeed),this.rotateLeft(2*Math.PI*this.rotateDelta.x/this.element.clientHeight),this.rotateUp(2*Math.PI*this.rotateDelta.y/this.element.clientHeight),this.rotateStart.copy(this.rotateEnd)}handleTouchMovePan(t){if(1==t.touches.length)this.panEnd.set(t.touches[0].pageX,t.touches[0].pageY);else{var e=.5*(t.touches[0].pageX+t.touches[1].pageX),i=.5*(t.touches[0].pageY+t.touches[1].pageY);this.panEnd.set(e,i)}this.panDelta.subVectors(this.panEnd,this.panStart).multiplyScalar(this.panSpeed),this.pan(this.panDelta.x,this.panDelta.y),this.panStart.copy(this.panEnd)}handleTouchMoveDolly(t){var e=t.touches[0].pageX-t.touches[1].pageX,i=t.touches[0].pageY-t.touches[1].pageY,n=Math.sqrt(e*e+i*i);this.dollyEnd.set(0,n),this.dollyDelta.set(0,Math.pow(this.dollyEnd.y/this.dollyStart.y,this.zoomSpeed)),this.dollyOut(this.dollyDelta.y),this.dollyStart.copy(this.dollyEnd)}handleTouchMoveDollyPan(t){this.enableTouchZoom&&this.handleTouchMoveDolly(t),this.enableTouchPan&&this.handleTouchMovePan(t)}handleTouchMoveDollyRotate(t){this.enableTouchZoom&&this.handleTouchMoveDolly(t),this.enableTouchRotate&&this.handleTouchMoveRotate(t)}handleTouchEnd(){}tickControls(){const t=this.controlMap;for(var e of this.keyDowns)t.MOVE_FORWARD.includes(e)?this.pan(0,this.keyPanSpeed,this.keyPanDistance):t.MOVE_BACKWARD.includes(e)?this.pan(0,-this.keyPanSpeed,this.keyPanDistance):t.MOVE_LEFT.includes(e)?this.pan(this.keyPanSpeed,0,this.keyPanDistance):t.MOVE_RIGHT.includes(e)?this.pan(-this.keyPanSpeed,0,this.keyPanDistance):t.MOVE_UP.includes(e)?this.translateY(+this.verticalTranslationSpeed):t.MOVE_DOWN.includes(e)&&this.translateY(-this.verticalTranslationSpeed)}onKeyDown(t){this.enabled&&t.code&&!this.keyDowns.includes(t.code)&&this.keyDowns.push(t.code)}onKeyUp(t){this.keyDowns=this.keyDowns.filter((e=>e!=t.code))}onTouchStart(t){if(!1!==this.enabled){switch(t.preventDefault(),t.touches.length){case 1:switch(this.touches.ONE){case THREE.TOUCH.ROTATE:if(!1===this.enableTouchRotate)return;this.handleTouchStartRotate(t),this.state=3;break;case THREE.TOUCH.PAN:if(!1===this.enableTouchPan)return;this.handleTouchStartPan(t),this.state=4;break;default:this.state=e}break;case 2:switch(this.touches.TWO){case THREE.TOUCH.DOLLY_PAN:if(!1===this.enableTouchZoom&&!1===this.enableTouchPan)return;this.handleTouchStartDollyPan(t),this.state=5;break;case THREE.TOUCH.DOLLY_ROTATE:if(!1===this.enableTouchZoom&&!1===this.enableTouchRotate)return;this.handleTouchStartDollyRotate(t),this.state=6;break;default:this.state=e}break;default:this.state=e}this.state!==e&&this.dispatchEvent(this.startEvent)}}onTouchMove(t){if(!1!==this.enabled)switch(t.preventDefault(),t.stopPropagation(),this.state){case 3:if(!1===this.enableTouchRotate)return;this.handleTouchMoveRotate(t),this.update();break;case 4:if(!1===this.enableTouchPan)return;this.handleTouchMovePan(t),this.update();break;case 5:if(!1===this.enableTouchZoom&&!1===this.enableTouchPan)return;this.handleTouchMoveDollyPan(t),this.update();break;case 6:if(!1===this.enableTouchZoom&&!1===this.enableTouchRotate)return;this.handleTouchMoveDollyRotate(t),this.update();break;default:this.state=e}}onTouchEnd(t){!1!==this.enabled&&(this.handleTouchEnd(t),this.dispatchEvent(this.endEvent),this.state=e)}onContextMenu(t){this.enabled&&t.preventDefault()}registerHandlers(){this.element.addEventListener("pointermove",this.onPointerMove,!1,{passive:!0}),this.element.addEventListener("pointerup",this.onPointerUp,!1,{passive:!0}),this.element.addEventListener("pointerdown",this.onPointerDown,!1,{passive:!0}),this.element.addEventListener("wheel",this.onMouseWheel,!0,{passive:!0}),this.element.addEventListener("touchstart",this.onTouchStart,!1,{passive:!0}),this.element.addEventListener("touchend",this.onTouchEnd,!1,{passive:!0}),this.element.addEventListener("touchmove",this.onTouchMove,!1,{passive:!0}),this.element.ownerDocument.addEventListener("contextmenu",this.onContextMenu,!1,{passive:!0}),this.element.ownerDocument.addEventListener("keydown",this.onKeyDown,!1,{passive:!0}),this.element.ownerDocument.addEventListener("keyup",this.onKeyUp,!1,{passive:!0}),console.log("[controls] registered handlers",this.element)}unregisterHandlers(){this.element.removeEventListener("pointermove",this.onPointerMove,!1,{passive:!0}),this.element.removeEventListener("pointerup",this.onPointerUp,!1,{passive:!0}),this.element.removeEventListener("pointerdown",this.onPointerDown,!1,{passive:!0}),this.element.removeEventListener("wheel",this.onMouseWheel,!0,{passive:!0}),this.element.removeEventListener("touchstart",this.onTouchStart,!1,{passive:!0}),this.element.removeEventListener("touchend",this.onTouchEnd,!1,{passive:!0}),this.element.removeEventListener("touchmove",this.onTouchMove,!1,{passive:!0}),this.element.ownerDocument.removeEventListener("contextmenu",this.onContextMenu,!1,{passive:!0}),this.element.ownerDocument.removeEventListener("keydown",this.onKeyDown,!1,{passive:!0}),this.element.ownerDocument.removeEventListener("keyup",this.onKeyUp,!1,{passive:!0}),console.log("[controls] unregistered handlers",this.element)}dispatchEvent(){}}}},1798:(t,e,i)=>{const n=i(2212),r=i(6194),a=i(1698);t.exports={Entities:class{constructor(t){this.scene=t,this.entities={}}clear(){for(const t of Object.values(this.entities))this.scene.remove(t),t.geometry&&t.geometry.dispose(),t.material&&t.material.dispose();this.entities={}}update(t){if(!this.entities[t.id]){const e=function(t,e){if(t.name)try{const i=new a("1.16.4",t.name,e);if(void 0!==t.username){const e=document.createElement("canvas");e.width=500,e.height=100;const r=e.getContext("2d");r.font="50pt Arial",r.fillStyle="#000000",r.textAlign="left",r.textBaseline="top";const a=t.username;r.fillText(a,100,0);const o=new n.Texture(e);o.needsUpdate=!0;const s=new n.SpriteMaterial({map:o}),l=new n.Sprite(s);l.position.y+=t.height+.6,i.mesh.add(l)}return i.mesh}catch(t){console.log(t)}const i=new n.BoxGeometry(t.width,t.height,t.width);i.translate(0,t.height/2,0);const r=new n.MeshBasicMaterial({color:16711935});return new n.Mesh(i,r)}(t,this.scene);if(!e)return;this.entities[t.id]=e,this.scene.add(e)}const e=this.entities[t.id];if(t.delete&&(this.scene.remove(e),e.geometry&&e.geometry.dispose(),e.material&&e.material.dispose(),delete this.entities[t.id]),t.pos&&new r.Tween(e.position).to({x:t.pos.x,y:t.pos.y,z:t.pos.z},50).start(),t.yaw){const i=(t.yaw-e.rotation.y)%(2*Math.PI),n=2*i%(2*Math.PI)-i;new r.Tween(e.rotation).to({y:e.rotation.y+n},50).start()}}}}},1698:(t,e,i)=>{const n=i(1296),{loadTexture:r}=globalThis.isElectron?i(7419):i(2174),a={up:{dir:[0,1,0],u0:[0,0,1],v0:[0,0,0],u1:[1,0,1],v1:[0,0,1],corners:[[0,1,1,0,0],[1,1,1,1,0],[0,1,0,0,1],[1,1,0,1,1]]},down:{dir:[0,-1,0],u0:[1,0,1],v0:[0,0,0],u1:[2,0,1],v1:[0,0,1],corners:[[1,0,1,0,0],[0,0,1,1,0],[1,0,0,0,1],[0,0,0,1,1]]},east:{dir:[1,0,0],u0:[0,0,0],v0:[0,0,1],u1:[0,0,1],v1:[0,1,1],corners:[[1,1,1,0,0],[1,0,1,0,1],[1,1,0,1,0],[1,0,0,1,1]]},west:{dir:[-1,0,0],u0:[1,0,1],v0:[0,0,1],u1:[1,0,2],v1:[0,1,1],corners:[[0,1,0,0,0],[0,0,0,0,1],[0,1,1,1,0],[0,0,1,1,1]]},north:{dir:[0,0,-1],u0:[0,0,1],v0:[0,0,1],u1:[1,0,1],v1:[0,1,1],corners:[[1,0,0,0,1],[0,0,0,1,1],[1,1,0,0,0],[0,1,0,1,0]]},south:{dir:[0,0,1],u0:[1,0,2],v0:[0,0,1],u1:[2,0,2],v1:[0,1,1],corners:[[0,0,1,0,1],[1,0,1,1,1],[0,1,1,0,0],[1,1,1,1,0]]}};function o(t,e){return t[0]*e[0]+t[1]*e[1]+t[2]*e[2]}function s(t,e,i,n,r=64,s=64){const l=new THREE.Euler(0,0,0);n.rotation&&(l.x=-n.rotation[0]*Math.PI/180,l.y=-n.rotation[1]*Math.PI/180,l.z=-n.rotation[2]*Math.PI/180);for(const{dir:u,corners:h,u0:c,v0:d,u1:p,v1:m}of Object.values(a)){const a=Math.floor(t.positions.length/3);for(const a of h){const h=(n.uv[0]+o(a[3]?p:c,n.size))/r,f=(n.uv[1]+o(a[4]?m:d,n.size))/s,g=n.inflate?n.inflate:0;let _=new THREE.Vector3(n.origin[0]+a[0]*n.size[0]+(a[0]?g:-g),n.origin[1]+a[1]*n.size[1]+(a[1]?g:-g),n.origin[2]+a[2]*n.size[2]+(a[2]?g:-g));_=_.applyEuler(l),_=_.sub(i.position),_=_.applyEuler(i.rotation),_=_.add(i.position),t.positions.push(_.x,_.y,_.z),t.normals.push(...u),t.uvs.push(h,f),t.skinIndices.push(e,0,0,0),t.skinWeights.push(1,0,0,0)}t.indices.push(a,a+1,a+2,a+2,a+1,a+3)}}function l(t,e){const i={},n={positions:[],normals:[],uvs:[],indices:[],skinIndices:[],skinWeights:[]};let a=0;for(const t of e.bones){const r=new THREE.Bone;if(t.pivot&&(r.position.x=t.pivot[0],r.position.y=t.pivot[1],r.position.z=t.pivot[2]),t.bind_pose_rotation?(r.rotation.x=-t.bind_pose_rotation[0]*Math.PI/180,r.rotation.y=-t.bind_pose_rotation[1]*Math.PI/180,r.rotation.z=-t.bind_pose_rotation[2]*Math.PI/180):t.rotation&&(r.rotation.x=-t.rotation[0]*Math.PI/180,r.rotation.y=-t.rotation[1]*Math.PI/180,r.rotation.z=-t.rotation[2]*Math.PI/180),i[t.name]=r,t.cubes)for(const i of t.cubes)s(n,a,r,i,e.texturewidth,e.textureheight);a++}const o=[];for(const t of e.bones)t.parent?i[t.parent].add(i[t.name]):o.push(i[t.name]);const l=new THREE.Skeleton(Object.values(i)),u=new THREE.BufferGeometry;u.setAttribute("position",new THREE.Float32BufferAttribute(n.positions,3)),u.setAttribute("normal",new THREE.Float32BufferAttribute(n.normals,3)),u.setAttribute("uv",new THREE.Float32BufferAttribute(n.uvs,2)),u.setAttribute("skinIndex",new THREE.Uint16BufferAttribute(n.skinIndices,4)),u.setAttribute("skinWeight",new THREE.Float32BufferAttribute(n.skinWeights,4)),u.setIndex(n.indices);const h=new THREE.MeshLambertMaterial({transparent:!0,skinning:!0,alphaTest:.1}),c=new THREE.SkinnedMesh(u,h);return c.add(...o),c.bind(l),c.scale.set(1/16,1/16,1/16),r(t,(t=>{t.magFilter=THREE.NearestFilter,t.minFilter=THREE.NearestFilter,t.flipY=!1,t.wrapS=THREE.RepeatWrapping,t.wrapT=THREE.RepeatWrapping,h.map=t})),c}t.exports=class{constructor(t,e,i){const r=n[e];if(!r)throw new Error(`Unknown entity ${e}`);this.mesh=new THREE.Object3D;for(const[e,i]of Object.entries(r.geometry)){const n=r.textures[e];if(!n)continue;const a=l(n.replace("textures","textures/"+t)+".png",i);this.mesh.add(a)}}}},8309:(t,e,i)=>{const n=i(2212),{MeshLine:r,MeshLineMaterial:a}=i(7591);t.exports={Primitives:class{constructor(t,e){this.scene=t,this.camera=e,this.primitives={}}clear(){for(const t of Object.values(this.primitives))this.scene.remove(t),t.geometry.dispose(),t.material.dispose();this.primitives={}}update(t){this.primitives[t.id]&&(this.scene.remove(this.primitives[t.id]),this.primitives[t.id].geometry.dispose(),this.primitives[t.id].material.dispose(),delete this.primitives[t.id]);const e=function(t,e){if("line"===t.type){const i=t.color?t.color:16711680,o=new n.Vector2(window.innerWidth/e.zoom,window.innerHeight/e.zoom),s=new a({color:i,resolution:o,sizeAttenuation:!1,lineWidth:8}),l=[];for(const e of t.points)l.push(e.x,e.y,e.z);const u=new r;return u.setPoints(l),new n.Mesh(u,s)}if("boxgrid"===t.type){const e=t.color?t.color:"aqua",i=t.end.x-t.start.x,r=t.end.y-t.start.y,a=t.end.z-t.start.z,o=new n.BoxBufferGeometry(i,r,a,i,r,a);o.attributes.positionStart=o.attributes.position.clone();const s=function(t,e){if(!(t instanceof n.BoxBufferGeometry))return console.log("GridBoxGeometry: the parameter 'geometry' has to be of the type THREE.BoxBufferGeometry"),t;e=void 0!==e&&e;const i=new n.BoxBufferGeometry,r=t.attributes.position;i.attributes.position=!1===e?r:r.clone();const a=t.parameters.widthSegments||1,o=t.parameters.heightSegments||1,s=t.parameters.depthSegments||1;let l=0;const u=g(s,o,l);l+=(s+1)*(o+1);const h=g(s,o,l);l+=(s+1)*(o+1);const c=g(a,s,l);l+=(a+1)*(s+1);const d=g(a,s,l);l+=(a+1)*(s+1);const p=g(a,o,l);l+=(a+1)*(o+1);const m=g(a,o,l);let f=[];function g(t,e,i){const n=[];for(let r=0;r<e+1;r++){let a=0,o=0;for(let s=0;s<t;s++){a=(t+1)*r+s,o=a+1;const l=a,u=a+(t+1);n.push(i+a,i+o),u<(t+1)*(e+1)-1&&n.push(i+l,i+u)}o+t+1<=(t+1)*(e+1)-1&&n.push(i+o,i+o+t+1)}return n}return f=f.concat(u),f=f.concat(h),f=f.concat(c),f=f.concat(d),f=f.concat(p),f=f.concat(m),i.setIndex(f),i}(o,!1),l=new n.LineSegments(s,new n.LineBasicMaterial({color:e}));return l.position.x=t.start.x+i/2,l.position.y=t.start.y+r/2,l.position.z=t.start.z+a/2,l}if("points"===t.type){const e=t.color?t.color:"aqua",i=t.size?t.size:5,r=[];for(const e of t.points)r.push(e.x,e.y,e.z);const a=new n.BufferGeometry;a.setAttribute("position",new n.Float32BufferAttribute(r,3));const o=new n.PointsMaterial({color:e,size:i,sizeAttenuation:!1});return new n.Points(a,o)}return null}(t,this.camera);e&&(this.primitives[t.id]=e,this.scene.add(e))}}}},9739:(t,e,i)=>{var n=i(8764).Buffer;t.exports={getBufferFromStream:function(t){return new Promise(((e,i)=>{let r=n.from([]);t.on("data",(t=>{r=n.concat([r,t])})),t.on("end",(()=>e(r))),t.on("error",i)}))},spiral:function(t,e,i){let n=0,r=0,a=0,o=-1;const s=Math.max(t,e)*Math.max(t,e),l=t/2,u=e/2;for(let t=0;t<s;t++){if(-l<n&&n<=l&&-u<r&&r<=u&&i(n,r),n===r||n<0&&n===-r||n>0&&n===1-r){const t=a;a=-o,o=t}n+=a,r+=o}},ViewRect:class{constructor(t,e,i){this.x0=t-i,this.x1=t+i,this.z0=e-i,this.z1=e+i}contains(t,e){return this.x0<t&&t<=this.x1&&this.z0<e&&e<=this.z1}},chunkPos:function(t){return[Math.floor(t.x/16),Math.floor(t.z/16)]}}},7419:(t,e,i)=>{const n=i(2212),r={};t.exports={loadTexture:function(t,e){r[t]||(r[t]=(new n.TextureLoader).load(t)),e(r[t])},loadJSON:function(t,e){const i=new XMLHttpRequest;i.open("GET",t,!0),i.responseType="json",i.onload=function(){if(200!==i.status)throw new Error(t+" not found");e(i.response)},i.send()}}},2174:(t,e,i)=>{const n=i(2212),r={};t.exports={loadTexture:function(t,e){r[t]||(r[t]=(new n.TextureLoader).load(t)),e(r[t])},loadJSON:function(t,e){const i=new XMLHttpRequest;i.open("GET",t,!0),i.responseType="json",i.onload=function(){if(200!==i.status)throw new Error(t+" not found");e(i.response)},i.send()}}},5853:(t,e,i)=>{const n=i(6707),r={};for(const t of n){const e=a(t);r[e]?o(r[e])<o(t)&&(r[e]=t):r[e]=t}function a(t){const[e,i]=(t+"").split(".");return e+"."+i}function o(t){const[,,e]=(t+".0").split(".");return parseInt(e,10)}t.exports={getVersion:function(t){return-1!==n.indexOf(t)?t:r[a(t)]}}},3171:(t,e,i)=>{const n=i(2212),r=i(6194),{WorldRenderer:a}=i(3122),{Entities:o}=i(1798),{Primitives:s}=i(8309),{getVersion:l}=i(5853),{Vec3:u}=i(4298);t.exports={Viewer:class{constructor(t){this.scene=new n.Scene,this.scene.background=new n.Color("lightblue");const e=new n.AmbientLight(13421772);this.scene.add(e);const i=new n.DirectionalLight(16777215,.5);i.position.set(1,1,.5).normalize(),this.scene.add(i);const r=t.getSize(new n.Vector2);this.camera=new n.PerspectiveCamera(75,r.x/r.y,.1,1e3),this.world=new a(this.scene),this.entities=new o(this.scene),this.primitives=new s(this.scene,this.camera),this.domElement=t.domElement}setVersion(t){t=l(t),console.log("Using version: "+t),this.version=t,this.world.setVersion(t),this.entities.clear(),this.primitives.clear()}addColumn(t,e,i){this.world.addColumn(t,e,i)}removeColumn(t,e){this.world.removeColumn(t,e)}setBlockStateId(t,e){this.world.setBlockStateId(t,e)}updateEntity(t){this.entities.update(t)}updatePrimitive(t){this.primitives.update(t)}setFirstPersonCamera(t,e,i){t&&new r.Tween(this.camera.position).to({x:t.x,y:t.y+1.6,z:t.z},50).start(),this.camera.rotation.set(i,e,0,"ZYX")}listen(t){t.on("entity",(t=>{this.updateEntity(t)})),t.on("primitive",(t=>{this.updatePrimitive(t)})),t.on("loadChunk",(({x:t,z:e,chunk:i})=>{this.addColumn(t,e,i)})),t.on("unloadChunk",(({x:t,z:e})=>{this.removeColumn(t,e)})),t.on("blockUpdate",(({pos:t,stateId:e})=>{this.setBlockStateId(new u(t.x,t.y,t.z),e)})),this.domElement.addEventListener("pointerdown",(e=>{const i=new n.Raycaster,r=new n.Vector2;r.x=e.clientX/this.domElement.clientWidth*2-1,r.y=-e.clientY/this.domElement.clientHeight*2+1,i.setFromCamera(r,this.camera);const a=i.ray;t.emit("mouseClick",{origin:a.origin,direction:a.direction,button:e.button})}))}update(){r.update()}async waitForChunksToRender(){await this.world.waitForChunksToRender()}}}},7094:(t,e,i)=>{const{spiral:n,ViewRect:r,chunkPos:a}=i(9739),{Vec3:o}=i(4298),s=i(7187);t.exports={WorldView:class extends s{constructor(t,e,i=new o(0,0,0),n=null){super(),this.world=t,this.viewDistance=e,this.loadedChunks={},this.lastPos=new o(0,0,0).update(i),this.emitter=n||this,this.listeners={},this.emitter.on("mouseClick",(async t=>{const e=new o(t.origin.x,t.origin.y,t.origin.z),i=new o(t.direction.x,t.direction.y,t.direction.z),n=this.world.raycast(e,i,256);n&&this.emit("blockClicked",n,n.face,t.button)}))}listenToBot(t){const e=this;this.listeners[t.username]={entitySpawn:function(i){i!==t.entity&&e.emitter.emit("entity",{id:i.id,name:i.name,pos:i.position,width:i.width,height:i.height,username:i.username})},entityMoved:function(t){e.emitter.emit("entity",{id:t.id,pos:t.position,pitch:t.pitch,yaw:t.yaw})},entityGone:function(t){e.emitter.emit("entity",{id:t.id,delete:!0})},chunkColumnLoad:function(t){e.loadChunk(t)},blockUpdate:function(t,i){const n=i.stateId?i.stateId:i.type<<4|i.metadata;e.emitter.emit("blockUpdate",{pos:t.position,stateId:n})}};for(const[e,i]of Object.entries(this.listeners[t.username]))t.on(e,i);for(const e in t.entities){const i=t.entities[e];i&&i!==t.entity&&this.emitter.emit("entity",{id:i.id,name:i.name,pos:i.position,width:i.width,height:i.height,username:i.username})}}removeListenersFromBot(t){for(const[e,i]of Object.entries(this.listeners[t.username]))t.removeListener(e,i);delete this.listeners[t.username]}async init(t){const[e,i]=a(t),r=[];n(2*this.viewDistance,2*this.viewDistance,((t,n)=>{const a=new o(16*(e+t),0,16*(i+n));r.push(a)})),this.lastPos.update(t),await this._loadChunks(r)}async _loadChunks(t,e=5,i=0){for(let n=0;n<t.length;n+=e)await new Promise((t=>setTimeout(t,i))),await Promise.all(t.slice(n,n+e).map((t=>this.loadChunk(t))))}async loadChunk(t){const[e,i]=a(this.lastPos),n=Math.abs(e-Math.floor(t.x/16)),r=Math.abs(i-Math.floor(t.z/16));if(n<this.viewDistance&&r<this.viewDistance){const e=await this.world.getColumnAt(t);if(e){const i=e.toJson();this.emitter.emit("loadChunk",{x:t.x,z:t.z,chunk:i}),this.loadedChunks[`${t.x},${t.z}`]=!0}}}unloadChunk(t){this.emitter.emit("unloadChunk",{x:t.x,z:t.z}),delete this.loadedChunks[`${t.x},${t.z}`]}async updatePosition(t){const[e,i]=a(this.lastPos),[s,l]=a(t);if(e!==s||i!==l){const e=new r(s,l,this.viewDistance);for(const t of Object.keys(this.loadedChunks)){const i=parseInt(t.split(",")[0]),n=parseInt(t.split(",")[1]),r=new o(i,0,n);e.contains(Math.floor(i/16),Math.floor(n/16))||this.unloadChunk(r)}const i=[];n(2*this.viewDistance,2*this.viewDistance,((t,e)=>{const n=new o(16*(s+t),0,16*(l+e));this.loadedChunks[`${n.x},${n.z}`]||i.push(n)})),this.lastPos.update(t),await this._loadChunks(i)}else this.lastPos.update(t)}}}},3122:(t,e,i)=>{const n=i(2212),r=i(4298).Vec3,{loadTexture:a,loadJSON:o}=globalThis.isElectron?i(7419):i(2174),{EventEmitter:s}=i(7187);t.exports={WorldRenderer:class{constructor(t,e=4){this.sectionMeshs={},this.scene=t,this.loadedChunks={},this.sectionsOutstanding=new Set,this.renderUpdateEmitter=new s,this.material=new n.MeshLambertMaterial({vertexColors:!0,transparent:!0,alphaTest:.1}),this.workers=[];for(let t=0;t<e;t++){let t="/";"undefined"!=typeof window?t="worker.js":t+="/worker.js";const e=new Worker(t);e.onmessage=({data:t})=>{if("geometry"===t.type){let e=this.sectionMeshs[t.key];e&&(this.scene.remove(e),e.geometry.dispose());const i=t.key.split(",");if(!this.loadedChunks[i[0]+","+i[2]])return;const r=new n.BufferGeometry;r.setAttribute("position",new n.BufferAttribute(t.geometry.positions,3)),r.setAttribute("normal",new n.BufferAttribute(t.geometry.normals,3)),r.setAttribute("color",new n.BufferAttribute(t.geometry.colors,3)),r.setAttribute("uv",new n.BufferAttribute(t.geometry.uvs,2)),r.setIndex(t.geometry.indices),e=new n.Mesh(r,this.material),e.position.set(t.geometry.sx,t.geometry.sy,t.geometry.sz),this.sectionMeshs[t.key]=e,this.scene.add(e)}else"sectionFinished"===t.type&&(this.sectionsOutstanding.delete(t.key),this.renderUpdateEmitter.emit("update"))},e.on&&e.on("message",(t=>{e.onmessage({data:t})})),this.workers.push(e)}}setVersion(t){for(const t of Object.values(this.sectionMeshs))this.scene.remove(t);this.sectionMeshs={};for(const e of this.workers)e.postMessage({type:"version",version:t});a(`textures/${t}.png`,(t=>{t.magFilter=n.NearestFilter,t.minFilter=n.NearestFilter,t.flipY=!1,this.material.map=t})),o(`blocksStates/${t}.json`,(t=>{for(const e of this.workers)e.postMessage({type:"blockStates",json:t})}))}addColumn(t,e,i){this.loadedChunks[`${t},${e}`]=!0;for(const n of this.workers)n.postMessage({type:"chunk",x:t,z:e,chunk:i});for(let i=0;i<256;i+=16){const n=new r(t,i,e);this.setSectionDirty(n),this.setSectionDirty(n.offset(-16,0,0)),this.setSectionDirty(n.offset(16,0,0)),this.setSectionDirty(n.offset(0,0,-16)),this.setSectionDirty(n.offset(0,0,16))}}removeColumn(t,e){delete this.loadedChunks[`${t},${e}`];for(const i of this.workers)i.postMessage({type:"unloadChunk",x:t,z:e});for(let i=0;i<256;i+=16){this.setSectionDirty(new r(t,i,e),!1);const n=`${t},${i},${e}`,a=this.sectionMeshs[n];a&&(this.scene.remove(a),a.geometry.dispose())}}setBlockStateId(t,e){for(const i of this.workers)i.postMessage({type:"blockUpdate",pos:t,stateId:e});this.setSectionDirty(t),0==(15&t.x)&&this.setSectionDirty(t.offset(-16,0,0)),15==(15&t.x)&&this.setSectionDirty(t.offset(16,0,0)),0==(15&t.y)&&this.setSectionDirty(t.offset(0,-16,0)),15==(15&t.y)&&this.setSectionDirty(t.offset(0,16,0)),0==(15&t.z)&&this.setSectionDirty(t.offset(0,0,-16)),15==(15&t.z)&&this.setSectionDirty(t.offset(0,0,16))}setSectionDirty(t,e=!0){const i=((Math.floor(t.x/16)+Math.floor(t.y/16)+Math.floor(t.z/16))%(n=this.workers.length)+n)%n;var n;this.workers[i].postMessage({type:"dirty",x:t.x,y:t.y,z:t.z,value:e}),this.sectionsOutstanding.add(`${16*Math.floor(t.x/16)},${16*Math.floor(t.y/16)},${16*Math.floor(t.z/16)}`)}waitForChunksToRender(){return new Promise(((t,e)=>{if(0===Array.from(this.sectionsOutstanding).length)return void t();const i=()=>{0===this.sectionsOutstanding.size&&(this.renderUpdateEmitter.removeListener("update",i),t())};this.renderUpdateEmitter.on("update",i)}))}}}},8419:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.hasCORS=void 0;let i=!1;try{i="undefined"!=typeof XMLHttpRequest&&"withCredentials"in new XMLHttpRequest}catch(t){}e.hasCORS=i},5754:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.decode=e.encode=void 0,e.encode=function(t){let e="";for(let i in t)t.hasOwnProperty(i)&&(e.length&&(e+="&"),e+=encodeURIComponent(i)+"="+encodeURIComponent(t[i]));return e},e.decode=function(t){let e={},i=t.split("&");for(let t=0,n=i.length;t<n;t++){let n=i[t].split("=");e[decodeURIComponent(n[0])]=decodeURIComponent(n[1])}return e}},5222:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.parse=void 0;const i=/^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/,n=["source","protocol","authority","userInfo","user","password","host","port","relative","path","directory","file","query","anchor"];e.parse=function(t){const e=t,r=t.indexOf("["),a=t.indexOf("]");-1!=r&&-1!=a&&(t=t.substring(0,r)+t.substring(r,a).replace(/:/g,";")+t.substring(a,t.length));let o=i.exec(t||""),s={},l=14;for(;l--;)s[n[l]]=o[l]||"";return-1!=r&&-1!=a&&(s.source=e,s.host=s.host.substring(1,s.host.length-1).replace(/;/g,":"),s.authority=s.authority.replace("[","").replace("]","").replace(/;/g,":"),s.ipv6uri=!0),s.pathNames=function(t,e){const i=e.replace(/\/{2,9}/g,"/").split("/");return"/"!=e.substr(0,1)&&0!==e.length||i.splice(0,1),"/"==e.substr(e.length-1,1)&&i.splice(i.length-1,1),i}(0,s.path),s.queryKey=function(t,e){const i={};return e.replace(/(?:^|&)([^&=]*)=?([^&]*)/g,(function(t,e,n){e&&(i[e]=n)})),i}(0,s.query),s}},8726:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.yeast=e.decode=e.encode=void 0;const i="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_".split(""),n={};let r,a=0,o=0;function s(t){let e="";do{e=i[t%64]+e,t=Math.floor(t/64)}while(t>0);return e}for(e.encode=s,e.decode=function(t){let e=0;for(o=0;o<t.length;o++)e=64*e+n[t.charAt(o)];return e},e.yeast=function(){const t=s(+new Date);return t!==r?(a=0,r=t):t+"."+s(a++)};o<64;o++)n[i[o]]=o},6242:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default="undefined"!=typeof self?self:"undefined"!=typeof window?window:Function("return this")()},4679:(t,e,i)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.parse=e.installTimerFunctions=e.transports=e.Transport=e.protocol=e.Socket=void 0;const n=i(3481);Object.defineProperty(e,"Socket",{enumerable:!0,get:function(){return n.Socket}}),e.protocol=n.Socket.protocol;var r=i(9870);Object.defineProperty(e,"Transport",{enumerable:!0,get:function(){return r.Transport}});var a=i(7385);Object.defineProperty(e,"transports",{enumerable:!0,get:function(){return a.transports}});var o=i(9622);Object.defineProperty(e,"installTimerFunctions",{enumerable:!0,get:function(){return o.installTimerFunctions}});var s=i(5222);Object.defineProperty(e,"parse",{enumerable:!0,get:function(){return s.parse}})},3481:function(t,e,i){"use strict";var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.Socket=void 0;const r=i(7385),a=i(9622),o=i(5754),s=i(5222),l=n(i(4802)),u=i(5260),h=i(1373),c=(0,l.default)("engine.io-client:socket");class d extends u.Emitter{constructor(t,e={}){super(),t&&"object"==typeof t&&(e=t,t=null),t?(t=(0,s.parse)(t),e.hostname=t.host,e.secure="https"===t.protocol||"wss"===t.protocol,e.port=t.port,t.query&&(e.query=t.query)):e.host&&(e.hostname=(0,s.parse)(e.host).host),(0,a.installTimerFunctions)(this,e),this.secure=null!=e.secure?e.secure:"undefined"!=typeof location&&"https:"===location.protocol,e.hostname&&!e.port&&(e.port=this.secure?"443":"80"),this.hostname=e.hostname||("undefined"!=typeof location?location.hostname:"localhost"),this.port=e.port||("undefined"!=typeof location&&location.port?location.port:this.secure?"443":"80"),this.transports=e.transports||["polling","websocket"],this.readyState="",this.writeBuffer=[],this.prevBufferLen=0,this.opts=Object.assign({path:"/engine.io",agent:!1,withCredentials:!1,upgrade:!0,timestampParam:"t",rememberUpgrade:!1,rejectUnauthorized:!0,perMessageDeflate:{threshold:1024},transportOptions:{},closeOnBeforeunload:!0},e),this.opts.path=this.opts.path.replace(/\/$/,"")+"/","string"==typeof this.opts.query&&(this.opts.query=(0,o.decode)(this.opts.query)),this.id=null,this.upgrades=null,this.pingInterval=null,this.pingTimeout=null,this.pingTimeoutTimer=null,"function"==typeof addEventListener&&(this.opts.closeOnBeforeunload&&addEventListener("beforeunload",(()=>{this.transport&&(this.transport.removeAllListeners(),this.transport.close())}),!1),"localhost"!==this.hostname&&(this.offlineEventListener=()=>{this.onClose("transport close",{description:"network connection lost"})},addEventListener("offline",this.offlineEventListener,!1))),this.open()}createTransport(t){c('creating transport "%s"',t);const e=Object.assign({},this.opts.query);e.EIO=h.protocol,e.transport=t,this.id&&(e.sid=this.id);const i=Object.assign({},this.opts.transportOptions[t],this.opts,{query:e,socket:this,hostname:this.hostname,secure:this.secure,port:this.port});return c("options: %j",i),new r.transports[t](i)}open(){let t;if(this.opts.rememberUpgrade&&d.priorWebsocketSuccess&&-1!==this.transports.indexOf("websocket"))t="websocket";else{if(0===this.transports.length)return void this.setTimeoutFn((()=>{this.emitReserved("error","No transports available")}),0);t=this.transports[0]}this.readyState="opening";try{t=this.createTransport(t)}catch(t){return c("error while creating transport: %s",t),this.transports.shift(),void this.open()}t.open(),this.setTransport(t)}setTransport(t){c("setting transport %s",t.name),this.transport&&(c("clearing existing transport %s",this.transport.name),this.transport.removeAllListeners()),this.transport=t,t.on("drain",this.onDrain.bind(this)).on("packet",this.onPacket.bind(this)).on("error",this.onError.bind(this)).on("close",(t=>this.onClose("transport close",t)))}probe(t){c('probing transport "%s"',t);let e=this.createTransport(t),i=!1;d.priorWebsocketSuccess=!1;const n=()=>{i||(c('probe transport "%s" opened',t),e.send([{type:"ping",data:"probe"}]),e.once("packet",(n=>{if(!i)if("pong"===n.type&&"probe"===n.data){if(c('probe transport "%s" pong',t),this.upgrading=!0,this.emitReserved("upgrading",e),!e)return;d.priorWebsocketSuccess="websocket"===e.name,c('pausing current transport "%s"',this.transport.name),this.transport.pause((()=>{i||"closed"!==this.readyState&&(c("changing transport and sending upgrade packet"),u(),this.setTransport(e),e.send([{type:"upgrade"}]),this.emitReserved("upgrade",e),e=null,this.upgrading=!1,this.flush())}))}else{c('probe transport "%s" failed',t);const i=new Error("probe error");i.transport=e.name,this.emitReserved("upgradeError",i)}})))};function r(){i||(i=!0,u(),e.close(),e=null)}const a=i=>{const n=new Error("probe error: "+i);n.transport=e.name,r(),c('probe transport "%s" failed because of error: %s',t,i),this.emitReserved("upgradeError",n)};function o(){a("transport closed")}function s(){a("socket closed")}function l(t){e&&t.name!==e.name&&(c('"%s" works - aborting "%s"',t.name,e.name),r())}const u=()=>{e.removeListener("open",n),e.removeListener("error",a),e.removeListener("close",o),this.off("close",s),this.off("upgrading",l)};e.once("open",n),e.once("error",a),e.once("close",o),this.once("close",s),this.once("upgrading",l),e.open()}onOpen(){if(c("socket open"),this.readyState="open",d.priorWebsocketSuccess="websocket"===this.transport.name,this.emitReserved("open"),this.flush(),"open"===this.readyState&&this.opts.upgrade&&this.transport.pause){c("starting upgrade probes");let t=0;const e=this.upgrades.length;for(;t<e;t++)this.probe(this.upgrades[t])}}onPacket(t){if("opening"===this.readyState||"open"===this.readyState||"closing"===this.readyState)switch(c('socket receive: type "%s", data "%s"',t.type,t.data),this.emitReserved("packet",t),this.emitReserved("heartbeat"),t.type){case"open":this.onHandshake(JSON.parse(t.data));break;case"ping":this.resetPingTimeout(),this.sendPacket("pong"),this.emitReserved("ping"),this.emitReserved("pong");break;case"error":const e=new Error("server error");e.code=t.data,this.onError(e);break;case"message":this.emitReserved("data",t.data),this.emitReserved("message",t.data)}else c('packet received with socket readyState "%s"',this.readyState)}onHandshake(t){this.emitReserved("handshake",t),this.id=t.sid,this.transport.query.sid=t.sid,this.upgrades=this.filterUpgrades(t.upgrades),this.pingInterval=t.pingInterval,this.pingTimeout=t.pingTimeout,this.maxPayload=t.maxPayload,this.onOpen(),"closed"!==this.readyState&&this.resetPingTimeout()}resetPingTimeout(){this.clearTimeoutFn(this.pingTimeoutTimer),this.pingTimeoutTimer=this.setTimeoutFn((()=>{this.onClose("ping timeout")}),this.pingInterval+this.pingTimeout),this.opts.autoUnref&&this.pingTimeoutTimer.unref()}onDrain(){this.writeBuffer.splice(0,this.prevBufferLen),this.prevBufferLen=0,0===this.writeBuffer.length?this.emitReserved("drain"):this.flush()}flush(){if("closed"!==this.readyState&&this.transport.writable&&!this.upgrading&&this.writeBuffer.length){const t=this.getWritablePackets();c("flushing %d packets in socket",t.length),this.transport.send(t),this.prevBufferLen=t.length,this.emitReserved("flush")}}getWritablePackets(){if(!(this.maxPayload&&"polling"===this.transport.name&&this.writeBuffer.length>1))return this.writeBuffer;let t=1;for(let e=0;e<this.writeBuffer.length;e++){const i=this.writeBuffer[e].data;if(i&&(t+=(0,a.byteLength)(i)),e>0&&t>this.maxPayload)return c("only send %d out of %d packets",e,this.writeBuffer.length),this.writeBuffer.slice(0,e);t+=2}return c("payload size is %d (max: %d)",t,this.maxPayload),this.writeBuffer}write(t,e,i){return this.sendPacket("message",t,e,i),this}send(t,e,i){return this.sendPacket("message",t,e,i),this}sendPacket(t,e,i,n){if("function"==typeof e&&(n=e,e=void 0),"function"==typeof i&&(n=i,i=null),"closing"===this.readyState||"closed"===this.readyState)return;(i=i||{}).compress=!1!==i.compress;const r={type:t,data:e,options:i};this.emitReserved("packetCreate",r),this.writeBuffer.push(r),n&&this.once("flush",n),this.flush()}close(){const t=()=>{this.onClose("forced close"),c("socket closing - telling transport to close"),this.transport.close()},e=()=>{this.off("upgrade",e),this.off("upgradeError",e),t()},i=()=>{this.once("upgrade",e),this.once("upgradeError",e)};return"opening"!==this.readyState&&"open"!==this.readyState||(this.readyState="closing",this.writeBuffer.length?this.once("drain",(()=>{this.upgrading?i():t()})):this.upgrading?i():t()),this}onError(t){c("socket error %j",t),d.priorWebsocketSuccess=!1,this.emitReserved("error",t),this.onClose("transport error",t)}onClose(t,e){"opening"!==this.readyState&&"open"!==this.readyState&&"closing"!==this.readyState||(c('socket close with reason: "%s"',t),this.clearTimeoutFn(this.pingTimeoutTimer),this.transport.removeAllListeners("close"),this.transport.close(),this.transport.removeAllListeners(),"function"==typeof removeEventListener&&removeEventListener("offline",this.offlineEventListener,!1),this.readyState="closed",this.id=null,this.emitReserved("close",t,e),this.writeBuffer=[],this.prevBufferLen=0)}filterUpgrades(t){const e=[];let i=0;const n=t.length;for(;i<n;i++)~this.transports.indexOf(t[i])&&e.push(t[i]);return e}}e.Socket=d,d.protocol=h.protocol},9870:function(t,e,i){"use strict";var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.Transport=void 0;const r=i(1373),a=i(5260),o=i(9622),s=(0,n(i(4802)).default)("engine.io-client:transport");class l extends Error{constructor(t,e,i){super(t),this.description=e,this.context=i,this.type="TransportError"}}class u extends a.Emitter{constructor(t){super(),this.writable=!1,(0,o.installTimerFunctions)(this,t),this.opts=t,this.query=t.query,this.readyState="",this.socket=t.socket}onError(t,e,i){return super.emitReserved("error",new l(t,e,i)),this}open(){return"closed"!==this.readyState&&""!==this.readyState||(this.readyState="opening",this.doOpen()),this}close(){return"opening"!==this.readyState&&"open"!==this.readyState||(this.doClose(),this.onClose()),this}send(t){"open"===this.readyState?this.write(t):s("transport is not open, discarding packets")}onOpen(){this.readyState="open",this.writable=!0,super.emitReserved("open")}onData(t){const e=(0,r.decodePacket)(t,this.socket.binaryType);this.onPacket(e)}onPacket(t){super.emitReserved("packet",t)}onClose(t){this.readyState="closed",super.emitReserved("close",t)}}e.Transport=u},7385:(t,e,i)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.transports=void 0;const n=i(484),r=i(1308);e.transports={websocket:r.WS,polling:n.Polling}},484:function(t,e,i){"use strict";var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.Request=e.Polling=void 0;const r=i(9870),a=n(i(4802)),o=i(8726),s=i(5754),l=i(1373),u=n(i(6666)),h=i(5260),c=i(9622),d=n(i(6242)),p=(0,a.default)("engine.io-client:polling");function m(){}const f=null!=new u.default({xdomain:!1}).responseType;class g extends r.Transport{constructor(t){if(super(t),this.polling=!1,"undefined"!=typeof location){const e="https:"===location.protocol;let i=location.port;i||(i=e?"443":"80"),this.xd="undefined"!=typeof location&&t.hostname!==location.hostname||i!==t.port,this.xs=t.secure!==e}const e=t&&t.forceBase64;this.supportsBinary=f&&!e}get name(){return"polling"}doOpen(){this.poll()}pause(t){this.readyState="pausing";const e=()=>{p("paused"),this.readyState="paused",t()};if(this.polling||!this.writable){let t=0;this.polling&&(p("we are currently polling - waiting to pause"),t++,this.once("pollComplete",(function(){p("pre-pause polling complete"),--t||e()}))),this.writable||(p("we are currently writing - waiting to pause"),t++,this.once("drain",(function(){p("pre-pause writing complete"),--t||e()})))}else e()}poll(){p("polling"),this.polling=!0,this.doPoll(),this.emitReserved("poll")}onData(t){p("polling got data %s",t),(0,l.decodePayload)(t,this.socket.binaryType).forEach((t=>{if("opening"===this.readyState&&"open"===t.type&&this.onOpen(),"close"===t.type)return this.onClose({description:"transport closed by the server"}),!1;this.onPacket(t)})),"closed"!==this.readyState&&(this.polling=!1,this.emitReserved("pollComplete"),"open"===this.readyState?this.poll():p('ignoring poll - transport state "%s"',this.readyState))}doClose(){const t=()=>{p("writing close packet"),this.write([{type:"close"}])};"open"===this.readyState?(p("transport open - closing"),t()):(p("transport not open - deferring close"),this.once("open",t))}write(t){this.writable=!1,(0,l.encodePayload)(t,(t=>{this.doWrite(t,(()=>{this.writable=!0,this.emitReserved("drain")}))}))}uri(){let t=this.query||{};const e=this.opts.secure?"https":"http";let i="";!1!==this.opts.timestampRequests&&(t[this.opts.timestampParam]=(0,o.yeast)()),this.supportsBinary||t.sid||(t.b64=1),this.opts.port&&("https"===e&&443!==Number(this.opts.port)||"http"===e&&80!==Number(this.opts.port))&&(i=":"+this.opts.port);const n=(0,s.encode)(t);return e+"://"+(-1!==this.opts.hostname.indexOf(":")?"["+this.opts.hostname+"]":this.opts.hostname)+i+this.opts.path+(n.length?"?"+n:"")}request(t={}){return Object.assign(t,{xd:this.xd,xs:this.xs},this.opts),new _(this.uri(),t)}doWrite(t,e){const i=this.request({method:"POST",data:t});i.on("success",e),i.on("error",((t,e)=>{this.onError("xhr post error",t,e)}))}doPoll(){p("xhr poll");const t=this.request();t.on("data",this.onData.bind(this)),t.on("error",((t,e)=>{this.onError("xhr poll error",t,e)})),this.pollXhr=t}}e.Polling=g;class _ extends h.Emitter{constructor(t,e){super(),(0,c.installTimerFunctions)(this,e),this.opts=e,this.method=e.method||"GET",this.uri=t,this.async=!1!==e.async,this.data=void 0!==e.data?e.data:null,this.create()}create(){const t=(0,c.pick)(this.opts,"agent","pfx","key","passphrase","cert","ca","ciphers","rejectUnauthorized","autoUnref");t.xdomain=!!this.opts.xd,t.xscheme=!!this.opts.xs;const e=this.xhr=new u.default(t);try{p("xhr open %s: %s",this.method,this.uri),e.open(this.method,this.uri,this.async);try{if(this.opts.extraHeaders){e.setDisableHeaderCheck&&e.setDisableHeaderCheck(!0);for(let t in this.opts.extraHeaders)this.opts.extraHeaders.hasOwnProperty(t)&&e.setRequestHeader(t,this.opts.extraHeaders[t])}}catch(t){}if("POST"===this.method)try{e.setRequestHeader("Content-type","text/plain;charset=UTF-8")}catch(t){}try{e.setRequestHeader("Accept","*/*")}catch(t){}"withCredentials"in e&&(e.withCredentials=this.opts.withCredentials),this.opts.requestTimeout&&(e.timeout=this.opts.requestTimeout),e.onreadystatechange=()=>{4===e.readyState&&(200===e.status||1223===e.status?this.onLoad():this.setTimeoutFn((()=>{this.onError("number"==typeof e.status?e.status:0)}),0))},p("xhr data %s",this.data),e.send(this.data)}catch(t){return void this.setTimeoutFn((()=>{this.onError(t)}),0)}"undefined"!=typeof document&&(this.index=_.requestsCount++,_.requests[this.index]=this)}onError(t){this.emitReserved("error",t,this.xhr),this.cleanup(!0)}cleanup(t){if(void 0!==this.xhr&&null!==this.xhr){if(this.xhr.onreadystatechange=m,t)try{this.xhr.abort()}catch(t){}"undefined"!=typeof document&&delete _.requests[this.index],this.xhr=null}}onLoad(){const t=this.xhr.responseText;null!==t&&(this.emitReserved("data",t),this.emitReserved("success"),this.cleanup())}abort(){this.cleanup()}}if(e.Request=_,_.requestsCount=0,_.requests={},"undefined"!=typeof document)if("function"==typeof attachEvent)attachEvent("onunload",v);else if("function"==typeof addEventListener){const t="onpagehide"in d.default?"pagehide":"unload";addEventListener(t,v,!1)}function v(){for(let t in _.requests)_.requests.hasOwnProperty(t)&&_.requests[t].abort()}},5552:function(t,e,i){"use strict";var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.defaultBinaryType=e.usingBrowserWebSocket=e.WebSocket=e.nextTick=void 0;const r=n(i(6242));e.nextTick="function"==typeof Promise&&"function"==typeof Promise.resolve?t=>Promise.resolve().then(t):(t,e)=>e(t,0),e.WebSocket=r.default.WebSocket||r.default.MozWebSocket,e.usingBrowserWebSocket=!0,e.defaultBinaryType="arraybuffer"},1308:function(t,e,i){"use strict";var n=i(8764).Buffer,r=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.WS=void 0;const a=i(9870),o=i(5754),s=i(8726),l=i(9622),u=i(5552),h=r(i(4802)),c=i(1373),d=(0,h.default)("engine.io-client:websocket"),p="undefined"!=typeof navigator&&"string"==typeof navigator.product&&"reactnative"===navigator.product.toLowerCase();class m extends a.Transport{constructor(t){super(t),this.supportsBinary=!t.forceBase64}get name(){return"websocket"}doOpen(){if(!this.check())return;const t=this.uri(),e=this.opts.protocols,i=p?{}:(0,l.pick)(this.opts,"agent","perMessageDeflate","pfx","key","passphrase","cert","ca","ciphers","rejectUnauthorized","localAddress","protocolVersion","origin","maxPayload","family","checkServerIdentity");this.opts.extraHeaders&&(i.headers=this.opts.extraHeaders);try{this.ws=u.usingBrowserWebSocket&&!p?e?new u.WebSocket(t,e):new u.WebSocket(t):new u.WebSocket(t,e,i)}catch(t){return this.emitReserved("error",t)}this.ws.binaryType=this.socket.binaryType||u.defaultBinaryType,this.addEventListeners()}addEventListeners(){this.ws.onopen=()=>{this.opts.autoUnref&&this.ws._socket.unref(),this.onOpen()},this.ws.onclose=t=>this.onClose({description:"websocket connection closed",context:t}),this.ws.onmessage=t=>this.onData(t.data),this.ws.onerror=t=>this.onError("websocket error",t)}write(t){this.writable=!1;for(let e=0;e<t.length;e++){const i=t[e],r=e===t.length-1;(0,c.encodePacket)(i,this.supportsBinary,(t=>{const e={};!u.usingBrowserWebSocket&&(i.options&&(e.compress=i.options.compress),this.opts.perMessageDeflate)&&("string"==typeof t?n.byteLength(t):t.length)<this.opts.perMessageDeflate.threshold&&(e.compress=!1);try{u.usingBrowserWebSocket?this.ws.send(t):this.ws.send(t,e)}catch(t){d("websocket closed before onclose event")}r&&(0,u.nextTick)((()=>{this.writable=!0,this.emitReserved("drain")}),this.setTimeoutFn)}))}}doClose(){void 0!==this.ws&&(this.ws.close(),this.ws=null)}uri(){let t=this.query||{};const e=this.opts.secure?"wss":"ws";let i="";this.opts.port&&("wss"===e&&443!==Number(this.opts.port)||"ws"===e&&80!==Number(this.opts.port))&&(i=":"+this.opts.port),this.opts.timestampRequests&&(t[this.opts.timestampParam]=(0,s.yeast)()),this.supportsBinary||(t.b64=1);const n=(0,o.encode)(t);return e+"://"+(-1!==this.opts.hostname.indexOf(":")?"["+this.opts.hostname+"]":this.opts.hostname)+i+this.opts.path+(n.length?"?"+n:"")}check(){return!(!u.WebSocket||"__initialize"in u.WebSocket&&this.name===m.prototype.name)}}e.WS=m},6666:function(t,e,i){"use strict";var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const r=i(8419),a=n(i(6242));e.default=function(t){const e=t.xdomain;try{if("undefined"!=typeof XMLHttpRequest&&(!e||r.hasCORS))return new XMLHttpRequest}catch(t){}if(!e)try{return new(a.default[["Active"].concat("Object").join("X")])("Microsoft.XMLHTTP")}catch(t){}}},9622:function(t,e,i){"use strict";var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.byteLength=e.installTimerFunctions=e.pick=void 0;const r=n(i(6242));e.pick=function(t,...e){return e.reduce(((e,i)=>(t.hasOwnProperty(i)&&(e[i]=t[i]),e)),{})};const a=setTimeout,o=clearTimeout;e.installTimerFunctions=function(t,e){e.useNativeTimers?(t.setTimeoutFn=a.bind(r.default),t.clearTimeoutFn=o.bind(r.default)):(t.setTimeoutFn=setTimeout.bind(r.default),t.clearTimeoutFn=clearTimeout.bind(r.default))},e.byteLength=function(t){return"string"==typeof t?function(t){let e=0,i=0;for(let n=0,r=t.length;n<r;n++)e=t.charCodeAt(n),e<128?i+=1:e<2048?i+=2:e<55296||e>=57344?i+=3:(n++,i+=4);return i}(t):Math.ceil(1.33*(t.byteLength||t.size))}},3087:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.ERROR_PACKET=e.PACKET_TYPES_REVERSE=e.PACKET_TYPES=void 0;const i=Object.create(null);e.PACKET_TYPES=i,i.open="0",i.close="1",i.ping="2",i.pong="3",i.message="4",i.upgrade="5",i.noop="6";const n=Object.create(null);e.PACKET_TYPES_REVERSE=n,Object.keys(i).forEach((t=>{n[i[t]]=t})),e.ERROR_PACKET={type:"error",data:"parser error"}},7572:(t,e,i)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0});const n=i(3087),r=i(3426),a="function"==typeof ArrayBuffer,o=(t,e)=>{if(a){const i=(0,r.decode)(t);return s(i,e)}return{base64:!0,data:t}},s=(t,e)=>"blob"===e&&t instanceof ArrayBuffer?new Blob([t]):t;e.default=(t,e)=>{if("string"!=typeof t)return{type:"message",data:s(t,e)};const i=t.charAt(0);return"b"===i?{type:"message",data:o(t.substring(1),e)}:n.PACKET_TYPES_REVERSE[i]?t.length>1?{type:n.PACKET_TYPES_REVERSE[i],data:t.substring(1)}:{type:n.PACKET_TYPES_REVERSE[i]}:n.ERROR_PACKET}},3908:(t,e,i)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0});const n=i(3087),r="function"==typeof Blob||"undefined"!=typeof Blob&&"[object BlobConstructor]"===Object.prototype.toString.call(Blob),a="function"==typeof ArrayBuffer,o=(t,e)=>{const i=new FileReader;return i.onload=function(){const t=i.result.split(",")[1];e("b"+t)},i.readAsDataURL(t)};e.default=({type:t,data:e},i,s)=>{return r&&e instanceof Blob?i?s(e):o(e,s):a&&(e instanceof ArrayBuffer||(l=e,"function"==typeof ArrayBuffer.isView?ArrayBuffer.isView(l):l&&l.buffer instanceof ArrayBuffer))?i?s(e):o(new Blob([e]),s):s(n.PACKET_TYPES[t]+(e||""));var l}},1373:(t,e,i)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.decodePayload=e.decodePacket=e.encodePayload=e.encodePacket=e.protocol=void 0;const n=i(3908);e.encodePacket=n.default;const r=i(7572);e.decodePacket=r.default;const a=String.fromCharCode(30);e.encodePayload=(t,e)=>{const i=t.length,r=new Array(i);let o=0;t.forEach(((t,s)=>{(0,n.default)(t,!1,(t=>{r[s]=t,++o===i&&e(r.join(a))}))}))},e.decodePayload=(t,e)=>{const i=t.split(a),n=[];for(let t=0;t<i.length;t++){const a=(0,r.default)(i[t],e);if(n.push(a),"error"===a.type)break}return n},e.protocol=4},5159:(t,e)=>{"use strict";function i(t){t=t||{},this.ms=t.min||100,this.max=t.max||1e4,this.factor=t.factor||2,this.jitter=t.jitter>0&&t.jitter<=1?t.jitter:0,this.attempts=0}Object.defineProperty(e,"__esModule",{value:!0}),e.Backoff=void 0,e.Backoff=i,i.prototype.duration=function(){var t=this.ms*Math.pow(this.factor,this.attempts++);if(this.jitter){var e=Math.random(),i=Math.floor(e*this.jitter*t);t=0==(1&Math.floor(10*e))?t-i:t+i}return 0|Math.min(t,this.max)},i.prototype.reset=function(){this.attempts=0},i.prototype.setMin=function(t){this.ms=t},i.prototype.setMax=function(t){this.max=t},i.prototype.setJitter=function(t){this.jitter=t}},7046:function(t,e,i){"use strict";var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.default=e.connect=e.io=e.Socket=e.Manager=e.protocol=void 0;const r=i(3084),a=i(4168);Object.defineProperty(e,"Manager",{enumerable:!0,get:function(){return a.Manager}});const o=i(8312);Object.defineProperty(e,"Socket",{enumerable:!0,get:function(){return o.Socket}});const s=n(i(3669)).default("socket.io-client"),l={};function u(t,e){"object"==typeof t&&(e=t,t=void 0),e=e||{};const i=r.url(t,e.path||"/socket.io"),n=i.source,o=i.id,u=i.path,h=l[o]&&u in l[o].nsps;let c;return e.forceNew||e["force new connection"]||!1===e.multiplex||h?(s("ignoring socket cache for %s",n),c=new a.Manager(n,e)):(l[o]||(s("new io instance for %s",n),l[o]=new a.Manager(n,e)),c=l[o]),i.query&&!e.query&&(e.query=i.queryKey),c.socket(i.path,e)}e.io=u,e.connect=u,e.default=u,Object.assign(u,{Manager:a.Manager,Socket:o.Socket,io:u,connect:u});var h=i(7116);Object.defineProperty(e,"protocol",{enumerable:!0,get:function(){return h.protocol}}),t.exports=u},4168:function(t,e,i){"use strict";var n=this&&this.__createBinding||(Object.create?function(t,e,i,n){void 0===n&&(n=i),Object.defineProperty(t,n,{enumerable:!0,get:function(){return e[i]}})}:function(t,e,i,n){void 0===n&&(n=i),t[n]=e[i]}),r=this&&this.__setModuleDefault||(Object.create?function(t,e){Object.defineProperty(t,"default",{enumerable:!0,value:e})}:function(t,e){t.default=e}),a=this&&this.__importStar||function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var i in t)"default"!==i&&Object.prototype.hasOwnProperty.call(t,i)&&n(e,t,i);return r(e,t),e},o=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.Manager=void 0;const s=i(4679),l=i(8312),u=a(i(7116)),h=i(7149),c=i(5159),d=i(5260),p=o(i(3669)).default("socket.io-client:manager");class m extends d.Emitter{constructor(t,e){var i;super(),this.nsps={},this.subs=[],t&&"object"==typeof t&&(e=t,t=void 0),(e=e||{}).path=e.path||"/socket.io",this.opts=e,s.installTimerFunctions(this,e),this.reconnection(!1!==e.reconnection),this.reconnectionAttempts(e.reconnectionAttempts||1/0),this.reconnectionDelay(e.reconnectionDelay||1e3),this.reconnectionDelayMax(e.reconnectionDelayMax||5e3),this.randomizationFactor(null!==(i=e.randomizationFactor)&&void 0!==i?i:.5),this.backoff=new c.Backoff({min:this.reconnectionDelay(),max:this.reconnectionDelayMax(),jitter:this.randomizationFactor()}),this.timeout(null==e.timeout?2e4:e.timeout),this._readyState="closed",this.uri=t;const n=e.parser||u;this.encoder=new n.Encoder,this.decoder=new n.Decoder,this._autoConnect=!1!==e.autoConnect,this._autoConnect&&this.open()}reconnection(t){return arguments.length?(this._reconnection=!!t,this):this._reconnection}reconnectionAttempts(t){return void 0===t?this._reconnectionAttempts:(this._reconnectionAttempts=t,this)}reconnectionDelay(t){var e;return void 0===t?this._reconnectionDelay:(this._reconnectionDelay=t,null===(e=this.backoff)||void 0===e||e.setMin(t),this)}randomizationFactor(t){var e;return void 0===t?this._randomizationFactor:(this._randomizationFactor=t,null===(e=this.backoff)||void 0===e||e.setJitter(t),this)}reconnectionDelayMax(t){var e;return void 0===t?this._reconnectionDelayMax:(this._reconnectionDelayMax=t,null===(e=this.backoff)||void 0===e||e.setMax(t),this)}timeout(t){return arguments.length?(this._timeout=t,this):this._timeout}maybeReconnectOnOpen(){!this._reconnecting&&this._reconnection&&0===this.backoff.attempts&&this.reconnect()}open(t){if(p("readyState %s",this._readyState),~this._readyState.indexOf("open"))return this;p("opening %s",this.uri),this.engine=new s.Socket(this.uri,this.opts);const e=this.engine,i=this;this._readyState="opening",this.skipReconnect=!1;const n=h.on(e,"open",(function(){i.onopen(),t&&t()})),r=h.on(e,"error",(e=>{p("error"),i.cleanup(),i._readyState="closed",this.emitReserved("error",e),t?t(e):i.maybeReconnectOnOpen()}));if(!1!==this._timeout){const t=this._timeout;p("connect attempt will timeout after %d",t),0===t&&n();const i=this.setTimeoutFn((()=>{p("connect attempt timed out after %d",t),n(),e.close(),e.emit("error",new Error("timeout"))}),t);this.opts.autoUnref&&i.unref(),this.subs.push((function(){clearTimeout(i)}))}return this.subs.push(n),this.subs.push(r),this}connect(t){return this.open(t)}onopen(){p("open"),this.cleanup(),this._readyState="open",this.emitReserved("open");const t=this.engine;this.subs.push(h.on(t,"ping",this.onping.bind(this)),h.on(t,"data",this.ondata.bind(this)),h.on(t,"error",this.onerror.bind(this)),h.on(t,"close",this.onclose.bind(this)),h.on(this.decoder,"decoded",this.ondecoded.bind(this)))}onping(){this.emitReserved("ping")}ondata(t){this.decoder.add(t)}ondecoded(t){this.emitReserved("packet",t)}onerror(t){p("error",t),this.emitReserved("error",t)}socket(t,e){let i=this.nsps[t];return i||(i=new l.Socket(this,t,e),this.nsps[t]=i),i}_destroy(t){const e=Object.keys(this.nsps);for(const t of e)if(this.nsps[t].active)return void p("socket %s is still active, skipping close",t);this._close()}_packet(t){p("writing packet %j",t);const e=this.encoder.encode(t);for(let i=0;i<e.length;i++)this.engine.write(e[i],t.options)}cleanup(){p("cleanup"),this.subs.forEach((t=>t())),this.subs.length=0,this.decoder.destroy()}_close(){p("disconnect"),this.skipReconnect=!0,this._reconnecting=!1,this.onclose("forced close"),this.engine&&this.engine.close()}disconnect(){return this._close()}onclose(t,e){p("closed due to %s",t),this.cleanup(),this.backoff.reset(),this._readyState="closed",this.emitReserved("close",t,e),this._reconnection&&!this.skipReconnect&&this.reconnect()}reconnect(){if(this._reconnecting||this.skipReconnect)return this;const t=this;if(this.backoff.attempts>=this._reconnectionAttempts)p("reconnect failed"),this.backoff.reset(),this.emitReserved("reconnect_failed"),this._reconnecting=!1;else{const e=this.backoff.duration();p("will wait %dms before reconnect attempt",e),this._reconnecting=!0;const i=this.setTimeoutFn((()=>{t.skipReconnect||(p("attempting reconnect"),this.emitReserved("reconnect_attempt",t.backoff.attempts),t.skipReconnect||t.open((e=>{e?(p("reconnect attempt error"),t._reconnecting=!1,t.reconnect(),this.emitReserved("reconnect_error",e)):(p("reconnect success"),t.onreconnect())})))}),e);this.opts.autoUnref&&i.unref(),this.subs.push((function(){clearTimeout(i)}))}}onreconnect(){const t=this.backoff.attempts;this._reconnecting=!1,this.backoff.reset(),this.emitReserved("reconnect",t)}}e.Manager=m},7149:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.on=void 0,e.on=function(t,e,i){return t.on(e,i),function(){t.off(e,i)}}},8312:function(t,e,i){"use strict";var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.Socket=void 0;const r=i(7116),a=i(7149),o=i(5260),s=n(i(3669)).default("socket.io-client:socket"),l=Object.freeze({connect:1,connect_error:1,disconnect:1,disconnecting:1,newListener:1,removeListener:1});class u extends o.Emitter{constructor(t,e,i){super(),this.connected=!1,this.receiveBuffer=[],this.sendBuffer=[],this.ids=0,this.acks={},this.flags={},this.io=t,this.nsp=e,i&&i.auth&&(this.auth=i.auth),this.io._autoConnect&&this.open()}get disconnected(){return!this.connected}subEvents(){if(this.subs)return;const t=this.io;this.subs=[a.on(t,"open",this.onopen.bind(this)),a.on(t,"packet",this.onpacket.bind(this)),a.on(t,"error",this.onerror.bind(this)),a.on(t,"close",this.onclose.bind(this))]}get active(){return!!this.subs}connect(){return this.connected||(this.subEvents(),this.io._reconnecting||this.io.open(),"open"===this.io._readyState&&this.onopen()),this}open(){return this.connect()}send(...t){return t.unshift("message"),this.emit.apply(this,t),this}emit(t,...e){if(l.hasOwnProperty(t))throw new Error('"'+t+'" is a reserved event name');e.unshift(t);const i={type:r.PacketType.EVENT,data:e,options:{}};if(i.options.compress=!1!==this.flags.compress,"function"==typeof e[e.length-1]){const t=this.ids++;s("emitting packet with ack id %d",t);const n=e.pop();this._registerAckCallback(t,n),i.id=t}const n=this.io.engine&&this.io.engine.transport&&this.io.engine.transport.writable;return!this.flags.volatile||n&&this.connected?this.connected?(this.notifyOutgoingListeners(i),this.packet(i)):this.sendBuffer.push(i):s("discard packet as the transport is not currently writable"),this.flags={},this}_registerAckCallback(t,e){const i=this.flags.timeout;if(void 0===i)return void(this.acks[t]=e);const n=this.io.setTimeoutFn((()=>{delete this.acks[t];for(let e=0;e<this.sendBuffer.length;e++)this.sendBuffer[e].id===t&&(s("removing packet with ack id %d from the buffer",t),this.sendBuffer.splice(e,1));s("event with ack id %d has timed out after %d ms",t,i),e.call(this,new Error("operation has timed out"))}),i);this.acks[t]=(...t)=>{this.io.clearTimeoutFn(n),e.apply(this,[null,...t])}}packet(t){t.nsp=this.nsp,this.io._packet(t)}onopen(){s("transport is open - connecting"),"function"==typeof this.auth?this.auth((t=>{this.packet({type:r.PacketType.CONNECT,data:t})})):this.packet({type:r.PacketType.CONNECT,data:this.auth})}onerror(t){this.connected||this.emitReserved("connect_error",t)}onclose(t,e){s("close (%s)",t),this.connected=!1,delete this.id,this.emitReserved("disconnect",t,e)}onpacket(t){if(t.nsp===this.nsp)switch(t.type){case r.PacketType.CONNECT:if(t.data&&t.data.sid){const e=t.data.sid;this.onconnect(e)}else this.emitReserved("connect_error",new Error("It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)"));break;case r.PacketType.EVENT:case r.PacketType.BINARY_EVENT:this.onevent(t);break;case r.PacketType.ACK:case r.PacketType.BINARY_ACK:this.onack(t);break;case r.PacketType.DISCONNECT:this.ondisconnect();break;case r.PacketType.CONNECT_ERROR:this.destroy();const e=new Error(t.data.message);e.data=t.data.data,this.emitReserved("connect_error",e)}}onevent(t){const e=t.data||[];s("emitting event %j",e),null!=t.id&&(s("attaching ack callback to event"),e.push(this.ack(t.id))),this.connected?this.emitEvent(e):this.receiveBuffer.push(Object.freeze(e))}emitEvent(t){if(this._anyListeners&&this._anyListeners.length){const e=this._anyListeners.slice();for(const i of e)i.apply(this,t)}super.emit.apply(this,t)}ack(t){const e=this;let i=!1;return function(...n){i||(i=!0,s("sending ack %j",n),e.packet({type:r.PacketType.ACK,id:t,data:n}))}}onack(t){const e=this.acks[t.id];"function"==typeof e?(s("calling ack %s with %j",t.id,t.data),e.apply(this,t.data),delete this.acks[t.id]):s("bad ack %s",t.id)}onconnect(t){s("socket connected with id %s",t),this.id=t,this.connected=!0,this.emitBuffered(),this.emitReserved("connect")}emitBuffered(){this.receiveBuffer.forEach((t=>this.emitEvent(t))),this.receiveBuffer=[],this.sendBuffer.forEach((t=>{this.notifyOutgoingListeners(t),this.packet(t)})),this.sendBuffer=[]}ondisconnect(){s("server disconnect (%s)",this.nsp),this.destroy(),this.onclose("io server disconnect")}destroy(){this.subs&&(this.subs.forEach((t=>t())),this.subs=void 0),this.io._destroy(this)}disconnect(){return this.connected&&(s("performing disconnect (%s)",this.nsp),this.packet({type:r.PacketType.DISCONNECT})),this.destroy(),this.connected&&this.onclose("io client disconnect"),this}close(){return this.disconnect()}compress(t){return this.flags.compress=t,this}get volatile(){return this.flags.volatile=!0,this}timeout(t){return this.flags.timeout=t,this}onAny(t){return this._anyListeners=this._anyListeners||[],this._anyListeners.push(t),this}prependAny(t){return this._anyListeners=this._anyListeners||[],this._anyListeners.unshift(t),this}offAny(t){if(!this._anyListeners)return this;if(t){const e=this._anyListeners;for(let i=0;i<e.length;i++)if(t===e[i])return e.splice(i,1),this}else this._anyListeners=[];return this}listenersAny(){return this._anyListeners||[]}onAnyOutgoing(t){return this._anyOutgoingListeners=this._anyOutgoingListeners||[],this._anyOutgoingListeners.push(t),this}prependAnyOutgoing(t){return this._anyOutgoingListeners=this._anyOutgoingListeners||[],this._anyOutgoingListeners.unshift(t),this}offAnyOutgoing(t){if(!this._anyOutgoingListeners)return this;if(t){const e=this._anyOutgoingListeners;for(let i=0;i<e.length;i++)if(t===e[i])return e.splice(i,1),this}else this._anyOutgoingListeners=[];return this}listenersAnyOutgoing(){return this._anyOutgoingListeners||[]}notifyOutgoingListeners(t){if(this._anyOutgoingListeners&&this._anyOutgoingListeners.length){const e=this._anyOutgoingListeners.slice();for(const i of e)i.apply(this,t.data)}}}e.Socket=u},3084:function(t,e,i){"use strict";var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.url=void 0;const r=i(4679),a=n(i(3669)).default("socket.io-client:url");e.url=function(t,e="",i){let n=t;i=i||"undefined"!=typeof location&&location,null==t&&(t=i.protocol+"//"+i.host),"string"==typeof t&&("/"===t.charAt(0)&&(t="/"===t.charAt(1)?i.protocol+t:i.host+t),/^(https?|wss?):\/\//.test(t)||(a("protocol-less url %s",t),t=void 0!==i?i.protocol+"//"+t:"https://"+t),a("parse %s",t),n=r.parse(t)),n.port||(/^(http|ws)$/.test(n.protocol)?n.port="80":/^(http|ws)s$/.test(n.protocol)&&(n.port="443")),n.path=n.path||"/";const o=-1!==n.host.indexOf(":")?"["+n.host+"]":n.host;return n.id=n.protocol+"://"+o+":"+n.port+e,n.href=n.protocol+"://"+o+(i&&i.port===n.port?"":":"+n.port),n}},3155:(t,e,i)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.reconstructPacket=e.deconstructPacket=void 0;const n=i(790);function r(t,e){if(!t)return t;if(n.isBinary(t)){const i={_placeholder:!0,num:e.length};return e.push(t),i}if(Array.isArray(t)){const i=new Array(t.length);for(let n=0;n<t.length;n++)i[n]=r(t[n],e);return i}if("object"==typeof t&&!(t instanceof Date)){const i={};for(const n in t)Object.prototype.hasOwnProperty.call(t,n)&&(i[n]=r(t[n],e));return i}return t}function a(t,e){if(!t)return t;if(t&&t._placeholder)return e[t.num];if(Array.isArray(t))for(let i=0;i<t.length;i++)t[i]=a(t[i],e);else if("object"==typeof t)for(const i in t)Object.prototype.hasOwnProperty.call(t,i)&&(t[i]=a(t[i],e));return t}e.deconstructPacket=function(t){const e=[],i=t.data,n=t;return n.data=r(i,e),n.attachments=e.length,{packet:n,buffers:e}},e.reconstructPacket=function(t,e){return t.data=a(t.data,e),t.attachments=void 0,t}},7116:(t,e,i)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Decoder=e.Encoder=e.PacketType=e.protocol=void 0;const n=i(5260),r=i(3155),a=i(790),o=i(3669).default("socket.io-parser");var s;e.protocol=5,function(t){t[t.CONNECT=0]="CONNECT",t[t.DISCONNECT=1]="DISCONNECT",t[t.EVENT=2]="EVENT",t[t.ACK=3]="ACK",t[t.CONNECT_ERROR=4]="CONNECT_ERROR",t[t.BINARY_EVENT=5]="BINARY_EVENT",t[t.BINARY_ACK=6]="BINARY_ACK"}(s=e.PacketType||(e.PacketType={})),e.Encoder=class{constructor(t){this.replacer=t}encode(t){return o("encoding packet %j",t),t.type!==s.EVENT&&t.type!==s.ACK||!a.hasBinary(t)?[this.encodeAsString(t)]:(t.type=t.type===s.EVENT?s.BINARY_EVENT:s.BINARY_ACK,this.encodeAsBinary(t))}encodeAsString(t){let e=""+t.type;return t.type!==s.BINARY_EVENT&&t.type!==s.BINARY_ACK||(e+=t.attachments+"-"),t.nsp&&"/"!==t.nsp&&(e+=t.nsp+","),null!=t.id&&(e+=t.id),null!=t.data&&(e+=JSON.stringify(t.data,this.replacer)),o("encoded %j as %s",t,e),e}encodeAsBinary(t){const e=r.deconstructPacket(t),i=this.encodeAsString(e.packet),n=e.buffers;return n.unshift(i),n}};class l extends n.Emitter{constructor(t){super(),this.reviver=t}add(t){let e;if("string"==typeof t)e=this.decodeString(t),e.type===s.BINARY_EVENT||e.type===s.BINARY_ACK?(this.reconstructor=new u(e),0===e.attachments&&super.emitReserved("decoded",e)):super.emitReserved("decoded",e);else{if(!a.isBinary(t)&&!t.base64)throw new Error("Unknown type: "+t);if(!this.reconstructor)throw new Error("got binary data when not reconstructing a packet");e=this.reconstructor.takeBinaryData(t),e&&(this.reconstructor=null,super.emitReserved("decoded",e))}}decodeString(t){let e=0;const i={type:Number(t.charAt(0))};if(void 0===s[i.type])throw new Error("unknown packet type "+i.type);if(i.type===s.BINARY_EVENT||i.type===s.BINARY_ACK){const n=e+1;for(;"-"!==t.charAt(++e)&&e!=t.length;);const r=t.substring(n,e);if(r!=Number(r)||"-"!==t.charAt(e))throw new Error("Illegal attachments");i.attachments=Number(r)}if("/"===t.charAt(e+1)){const n=e+1;for(;++e&&","!==t.charAt(e)&&e!==t.length;);i.nsp=t.substring(n,e)}else i.nsp="/";const n=t.charAt(e+1);if(""!==n&&Number(n)==n){const n=e+1;for(;++e;){const i=t.charAt(e);if(null==i||Number(i)!=i){--e;break}if(e===t.length)break}i.id=Number(t.substring(n,e+1))}if(t.charAt(++e)){const n=this.tryParse(t.substr(e));if(!l.isPayloadValid(i.type,n))throw new Error("invalid payload");i.data=n}return o("decoded %s as %j",t,i),i}tryParse(t){try{return JSON.parse(t,this.reviver)}catch(t){return!1}}static isPayloadValid(t,e){switch(t){case s.CONNECT:return"object"==typeof e;case s.DISCONNECT:return void 0===e;case s.CONNECT_ERROR:return"string"==typeof e||"object"==typeof e;case s.EVENT:case s.BINARY_EVENT:return Array.isArray(e)&&e.length>0;case s.ACK:case s.BINARY_ACK:return Array.isArray(e)}}destroy(){this.reconstructor&&this.reconstructor.finishedReconstruction()}}e.Decoder=l;class u{constructor(t){this.packet=t,this.buffers=[],this.reconPack=t}takeBinaryData(t){if(this.buffers.push(t),this.buffers.length===this.reconPack.attachments){const t=r.reconstructPacket(this.reconPack,this.buffers);return this.finishedReconstruction(),t}return null}finishedReconstruction(){this.reconPack=null,this.buffers=[]}}},790:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.hasBinary=e.isBinary=void 0;const i="function"==typeof ArrayBuffer,n=Object.prototype.toString,r="function"==typeof Blob||"undefined"!=typeof Blob&&"[object BlobConstructor]"===n.call(Blob),a="function"==typeof File||"undefined"!=typeof File&&"[object FileConstructor]"===n.call(File);function o(t){return i&&(t instanceof ArrayBuffer||(t=>"function"==typeof ArrayBuffer.isView?ArrayBuffer.isView(t):t.buffer instanceof ArrayBuffer)(t))||r&&t instanceof Blob||a&&t instanceof File}e.isBinary=o,e.hasBinary=function t(e,i){if(!e||"object"!=typeof e)return!1;if(Array.isArray(e)){for(let i=0,n=e.length;i<n;i++)if(t(e[i]))return!0;return!1}if(o(e))return!0;if(e.toJSON&&"function"==typeof e.toJSON&&1===arguments.length)return t(e.toJSON(),!0);for(const i in e)if(Object.prototype.hasOwnProperty.call(e,i)&&t(e[i]))return!0;return!1}},5260:(t,e,i)=>{"use strict";function n(t){if(t)return function(t){for(var e in n.prototype)t[e]=n.prototype[e];return t}(t)}i.r(e),i.d(e,{Emitter:()=>n}),n.prototype.on=n.prototype.addEventListener=function(t,e){return this._callbacks=this._callbacks||{},(this._callbacks["$"+t]=this._callbacks["$"+t]||[]).push(e),this},n.prototype.once=function(t,e){function i(){this.off(t,i),e.apply(this,arguments)}return i.fn=e,this.on(t,i),this},n.prototype.off=n.prototype.removeListener=n.prototype.removeAllListeners=n.prototype.removeEventListener=function(t,e){if(this._callbacks=this._callbacks||{},0==arguments.length)return this._callbacks={},this;var i,n=this._callbacks["$"+t];if(!n)return this;if(1==arguments.length)return delete this._callbacks["$"+t],this;for(var r=0;r<n.length;r++)if((i=n[r])===e||i.fn===e){n.splice(r,1);break}return 0===n.length&&delete this._callbacks["$"+t],this},n.prototype.emit=function(t){this._callbacks=this._callbacks||{};for(var e=new Array(arguments.length-1),i=this._callbacks["$"+t],n=1;n<arguments.length;n++)e[n-1]=arguments[n];if(i){n=0;for(var r=(i=i.slice(0)).length;n<r;++n)i[n].apply(this,e)}return this},n.prototype.emitReserved=n.prototype.emit,n.prototype.listeners=function(t){return this._callbacks=this._callbacks||{},this._callbacks["$"+t]||[]},n.prototype.hasListeners=function(t){return!!this.listeners(t).length}},6707:t=>{"use strict";t.exports=JSON.parse('["1.8.8","1.9","1.10","1.11.2","1.12","1.13","1.13.2","1.14.4","1.15.2","1.16.1","1.16.4","1.17.1","1.18.1"]')},1296:t=>{"use strict";t.exports=JSON.parse('{"armor_stand":{"identifier":"minecraft:armor_stand","min_engine_version":"1.8.0","materials":{"default":"armor_stand"},"textures":{"default":"textures/entity/armorstand/wood"},"animations":{"default_pose":{"loop":true,"bones":{"body":{"rotation":["-this","-this","-this"]},"head":{"rotation":["-this","-this","-this"]},"leftarm":{"rotation":["-this - 10","-this","-this - 10"]},"leftleg":{"rotation":["-this - 1","-this","-this - 1"]},"rightarm":{"rotation":["-this - 15","-this","-this + 10"]},"rightitem":{"rotation":["-this","-this","-this"]},"rightleg":{"rotation":["-this + 1","-this","-this + 1"]}}},"no_pose":{"loop":true,"bones":{"body":{"rotation":["-this","-this","-this"]},"head":{"rotation":["-this","-this","-this"]},"leftarm":{"rotation":["-this","-this","-this"]},"leftleg":{"rotation":["-this","-this","-this"]},"rightarm":{"rotation":["-this","-this","-this"]},"rightitem":{"rotation":["-this","-this","-this"]},"rightleg":{"rotation":["-this","-this","-this"]}}},"solemn_pose":{"loop":true,"bones":{"body":{"rotation":["-this","-this","-this + 2"]},"head":{"rotation":["-this + 15","-this","-this"]},"leftarm":{"rotation":["-this - 30","-this + 15","-this + 15"]},"leftleg":{"rotation":["-this - 1","-this","-this - 1"]},"rightarm":{"rotation":["-this - 60","-this - 20","-this - 10"]},"rightitem":{"rotation":["-this","-this","-this"]},"rightleg":{"rotation":["-this + 1","-this","-this + 1"]}}},"athena_pose":{"loop":true,"bones":{"body":{"rotation":["-this","-this","-this + 2"]},"head":{"rotation":["-this - 5","-this","-this"]},"leftarm":{"rotation":["-this + 10","-this","-this - 5"]},"leftleg":{"rotation":["-this - 3","-this - 3","-this - 3"]},"rightarm":{"rotation":["-this - 60","-this + 20","-this - 10"]},"rightitem":{"rotation":["-this","-this","-this"]},"rightleg":{"rotation":["-this + 3","-this + 3","-this + 3"]}}},"brandish_pose":{"loop":true,"bones":{"body":{"rotation":["-this","-this","-this - 2"]},"head":{"rotation":["-this - 15","-this","-this"]},"leftarm":{"rotation":["-this + 20","-this","-this - 10"]},"leftleg":{"rotation":["-this + 5","-this - 3","-this - 3"]},"rightarm":{"rotation":["-this - 110","-this + 50","-this"]},"rightitem":{"rotation":["-this","-this","-this"]},"rightleg":{"rotation":["-this - 5","-this + 3","-this + 3"]}}},"honor_pose":{"loop":true,"bones":{"body":{"rotation":["-this","-this","-this"]},"head":{"rotation":["-this - 15","-this","-this"]},"leftarm":{"rotation":["-this - 110","-this + 35","-this"]},"leftleg":{"rotation":["-this + 5","-this - 3","-this - 3"]},"rightarm":{"rotation":["-this - 110","-this - 35","-this"]},"rightitem":{"rotation":["-this","-this","-this"]},"rightleg":{"rotation":["-this - 5","-this + 3","-this + 3"]}}},"entertain_pose":{"loop":true,"bones":{"body":{"rotation":["-this","-this","-this"]},"head":{"rotation":["-this - 15","-this","-this"]},"leftarm":{"rotation":["-this - 110","-this - 35","-this"]},"leftleg":{"rotation":["-this + 5","-this - 3","-this - 3"]},"rightarm":{"rotation":["-this - 110","-this + 35","-this"]},"rightitem":{"rotation":["-this","-this","-this"]},"rightleg":{"rotation":["-this - 5","-this + 3","-this + 3"]}}},"salute_pose":{"loop":true,"bones":{"body":{"rotation":["-this","-this","-this"]},"head":{"rotation":["-this","-this","-this"]},"leftarm":{"rotation":["-this + 10","-this","-this - 5"]},"leftleg":{"rotation":["-this - 1","-this","-this - 1"]},"rightarm":{"rotation":["-this - 70","-this - 40","-this"]},"rightitem":{"rotation":["-this","-this","-this"]},"rightleg":{"rotation":["-this + 1","-this","-this + 1"]}}},"riposte_pose":{"loop":true,"bones":{"body":{"rotation":["-this","-this","-this"]},"head":{"rotation":["-this + 16","-this + 20","-this"]},"leftarm":{"rotation":["-this + 4","-this + 8","-this + 237"]},"leftleg":{"rotation":["-this - 14","-this - 18","-this - 16"]},"rightarm":{"rotation":["-this + 246","-this","-this + 89"]},"rightitem":{"rotation":["-this","-this + 180","-this"]},"rightleg":{"rotation":["-this + 8","-this + 20","-this + 4"]}}},"zombie_pose":{"loop":true,"bones":{"body":{"rotation":["-this","-this","-this"]},"head":{"rotation":["-this - 10","-this","-this - 5"]},"leftarm":{"rotation":["-this - 105","-this","-this"]},"leftleg":{"rotation":["-this + 7","-this","-this"]},"rightarm":{"rotation":["-this - 100","-this","-this"]},"rightitem":{"rotation":["-this","-this","-this"]},"rightleg":{"rotation":["-this - 46","-this","-this"]}}},"cancan_a_pose":{"loop":true,"bones":{"body":{"rotation":["-this","-this + 22","-this"]},"head":{"rotation":["-this - 5","-this + 18","-this"]},"leftarm":{"rotation":["-this + 8","-this","-this - 114"]},"leftleg":{"rotation":["-this - 111","-this + 55","-this"]},"rightarm":{"rotation":["-this","-this + 84","-this + 111"]},"rightitem":{"rotation":["-this","-this","-this"]},"rightleg":{"rotation":["-this","-this + 23","-this - 13"]}}},"cancan_b_pose":{"loop":true,"bones":{"body":{"rotation":["-this","-this - 18","-this"]},"head":{"rotation":["-this - 10","-this - 20","-this"]},"leftarm":{"rotation":["-this","-this","-this - 112"]},"leftleg":{"rotation":["-this","-this","-this + 13"]},"rightarm":{"rotation":["-this + 8","-this + 90","-this + 111"]},"rightitem":{"rotation":["-this","-this","-this"]},"rightleg":{"rotation":["-this - 119","-this - 42","-this"]}}},"hero_pose":{"loop":true,"bones":{"body":{"rotation":["-this","-this + 8","-this"]},"head":{"rotation":["-this - 4","-this + 67","-this"]},"leftarm":{"rotation":["-this + 16","-this + 32","-this - 8"]},"leftleg":{"rotation":["-this","-this - 75","-this - 8"]},"rightarm":{"rotation":["-this - 99","-this + 63","-this"]},"rightitem":{"rotation":["-this","-this","-this"]},"rightleg":{"rotation":["-this + 4","-this + 63","-this + 8"]}}},"wiggle":{"loop":true,"bones":{"baseplate":{"rotation":[0,"math.sin((variable.armor_stand.hurt_time - query.frame_alpha) * 120) * 3",0]}}}},"scripts":{"initialize":["variable.armor_stand.pose_index = 0;","variable.armor_stand.hurt_time = 0;"],"animate":["controller.pose","controller.wiggling"]},"geometry":{"default":{"bones":[{"name":"baseplate","cubes":[{"origin":[-6,0,-6],"size":[12,1,12],"uv":[0,32]}]},{"name":"waist","parent":"baseplate","pivot":[0,12,0]},{"name":"body","parent":"waist","pivot":[0,24,0],"cubes":[{"origin":[-6,21,-1.5],"size":[12,3,3],"uv":[0,26]},{"origin":[-3,14,-1],"size":[2,7,2],"uv":[16,0]},{"origin":[1,14,-1],"size":[2,7,2],"uv":[48,16]},{"origin":[-4,12,-1],"size":[8,2,2],"uv":[0,48]}]},{"name":"head","parent":"body","pivot":[0,24,0],"cubes":[{"origin":[-1,24,-1],"size":[2,7,2],"uv":[0,0]}]},{"name":"hat","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-4,24,-4],"size":[8,8,8],"uv":[32,0]}]},{"name":"leftarm","parent":"body","mirror":true,"pivot":[5,22,0],"cubes":[{"origin":[5,12,-1],"size":[2,12,2],"uv":[32,16]}]},{"name":"leftitem","parent":"leftarm","pivot":[6,15,1]},{"name":"leftleg","parent":"body","mirror":true,"pivot":[1.9,12,0],"cubes":[{"origin":[0.9,1,-1],"size":[2,11,2],"uv":[40,16]}]},{"name":"rightarm","parent":"body","pivot":[-5,22,0],"cubes":[{"origin":[-7,12,-1],"size":[2,12,2],"uv":[24,0]}]},{"name":"rightitem","parent":"rightarm","pivot":[-6,15,1]},{"name":"rightleg","parent":"body","pivot":[-1.9,12,0],"cubes":[{"origin":[-2.9,1,-1],"size":[2,11,2],"uv":[8,0]}]}],"visible_bounds_width":1.5,"visible_bounds_offset":[0,0.5,0],"texturewidth":64,"textureheight":64}},"render_controllers":["controller.render.armor_stand"],"enable_attachables":true,"animation_controllers":{"controller.pose":{"initial_state":"default","states":{"athena":{"animations":["athena_pose"],"blend_transition":0.1,"blend_via_shortest_path":true,"transitions":[{"default":"variable.armor_stand.pose_index == 0"},{"none":"variable.armor_stand.pose_index == 1"},{"solemn":"variable.armor_stand.pose_index == 2"},{"brandish":"variable.armor_stand.pose_index == 4"},{"honor":"variable.armor_stand.pose_index == 5"},{"entertain":"variable.armor_stand.pose_index == 6"},{"salute":"variable.armor_stand.pose_index == 7"},{"riposte":"variable.armor_stand.pose_index == 8"},{"zombie":"variable.armor_stand.pose_index == 9"},{"cancan_a":"variable.armor_stand.pose_index == 10"},{"cancan_b":"variable.armor_stand.pose_index == 11"},{"hero":"variable.armor_stand.pose_index == 12"}]},"brandish":{"animations":["brandish_pose"],"blend_transition":0.1,"blend_via_shortest_path":true,"transitions":[{"default":"variable.armor_stand.pose_index == 0"},{"none":"variable.armor_stand.pose_index == 1"},{"solemn":"variable.armor_stand.pose_index == 2"},{"athena":"variable.armor_stand.pose_index == 3"},{"honor":"variable.armor_stand.pose_index == 5"},{"entertain":"variable.armor_stand.pose_index == 6"},{"salute":"variable.armor_stand.pose_index == 7"},{"riposte":"variable.armor_stand.pose_index == 8"},{"zombie":"variable.armor_stand.pose_index == 9"},{"cancan_a":"variable.armor_stand.pose_index == 10"},{"cancan_b":"variable.armor_stand.pose_index == 11"},{"hero":"variable.armor_stand.pose_index == 12"}]},"cancan_a":{"animations":["cancan_a_pose"],"blend_transition":0.1,"blend_via_shortest_path":true,"transitions":[{"default":"variable.armor_stand.pose_index == 0"},{"none":"variable.armor_stand.pose_index == 1"},{"solemn":"variable.armor_stand.pose_index == 2"},{"athena":"variable.armor_stand.pose_index == 3"},{"brandish":"variable.armor_stand.pose_index == 4"},{"honor":"variable.armor_stand.pose_index == 5"},{"entertain":"variable.armor_stand.pose_index == 6"},{"salute":"variable.armor_stand.pose_index == 7"},{"riposte":"variable.armor_stand.pose_index == 8"},{"zombie":"variable.armor_stand.pose_index == 9"},{"cancan_b":"variable.armor_stand.pose_index == 11"},{"hero":"variable.armor_stand.pose_index == 12"}]},"cancan_b":{"animations":["cancan_b_pose"],"blend_transition":0.1,"blend_via_shortest_path":true,"transitions":[{"default":"variable.armor_stand.pose_index == 0"},{"none":"variable.armor_stand.pose_index == 1"},{"solemn":"variable.armor_stand.pose_index == 2"},{"athena":"variable.armor_stand.pose_index == 3"},{"brandish":"variable.armor_stand.pose_index == 4"},{"honor":"variable.armor_stand.pose_index == 5"},{"entertain":"variable.armor_stand.pose_index == 6"},{"salute":"variable.armor_stand.pose_index == 7"},{"riposte":"variable.armor_stand.pose_index == 8"},{"zombie":"variable.armor_stand.pose_index == 9"},{"cancan_a":"variable.armor_stand.pose_index == 10"},{"hero":"variable.armor_stand.pose_index == 12"}]},"default":{"animations":["default_pose"],"blend_transition":0.1,"blend_via_shortest_path":true,"transitions":[{"none":"variable.armor_stand.pose_index == 1"},{"solemn":"variable.armor_stand.pose_index == 2"},{"athena":"variable.armor_stand.pose_index == 3"},{"brandish":"variable.armor_stand.pose_index == 4"},{"honor":"variable.armor_stand.pose_index == 5"},{"entertain":"variable.armor_stand.pose_index == 6"},{"salute":"variable.armor_stand.pose_index == 7"},{"riposte":"variable.armor_stand.pose_index == 8"},{"zombie":"variable.armor_stand.pose_index == 9"},{"cancan_a":"variable.armor_stand.pose_index == 10"},{"cancan_b":"variable.armor_stand.pose_index == 11"},{"hero":"variable.armor_stand.pose_index == 12"}]},"entertain":{"animations":["entertain_pose"],"blend_transition":0.1,"blend_via_shortest_path":true,"transitions":[{"default":"variable.armor_stand.pose_index == 0"},{"none":"variable.armor_stand.pose_index == 1"},{"solemn":"variable.armor_stand.pose_index == 2"},{"athena":"variable.armor_stand.pose_index == 3"},{"brandish":"variable.armor_stand.pose_index == 4"},{"honor":"variable.armor_stand.pose_index == 5"},{"salute":"variable.armor_stand.pose_index == 7"},{"riposte":"variable.armor_stand.pose_index == 8"},{"zombie":"variable.armor_stand.pose_index == 9"},{"cancan_a":"variable.armor_stand.pose_index == 10"},{"cancan_b":"variable.armor_stand.pose_index == 11"},{"hero":"variable.armor_stand.pose_index == 12"}]},"hero":{"animations":["hero_pose"],"blend_transition":0.1,"blend_via_shortest_path":true,"transitions":[{"default":"variable.armor_stand.pose_index == 0"},{"none":"variable.armor_stand.pose_index == 1"},{"solemn":"variable.armor_stand.pose_index == 2"},{"athena":"variable.armor_stand.pose_index == 3"},{"brandish":"variable.armor_stand.pose_index == 4"},{"honor":"variable.armor_stand.pose_index == 5"},{"entertain":"variable.armor_stand.pose_index == 6"},{"salute":"variable.armor_stand.pose_index == 7"},{"riposte":"variable.armor_stand.pose_index == 8"},{"zombie":"variable.armor_stand.pose_index == 9"},{"cancan_a":"variable.armor_stand.pose_index == 10"},{"cancan_b":"variable.armor_stand.pose_index == 11"}]},"honor":{"animations":["honor_pose"],"blend_transition":0.1,"blend_via_shortest_path":true,"transitions":[{"default":"variable.armor_stand.pose_index == 0"},{"none":"variable.armor_stand.pose_index == 1"},{"solemn":"variable.armor_stand.pose_index == 2"},{"athena":"variable.armor_stand.pose_index == 3"},{"brandish":"variable.armor_stand.pose_index == 4"},{"entertain":"variable.armor_stand.pose_index == 6"},{"salute":"variable.armor_stand.pose_index == 7"},{"riposte":"variable.armor_stand.pose_index == 8"},{"zombie":"variable.armor_stand.pose_index == 9"},{"cancan_a":"variable.armor_stand.pose_index == 10"},{"cancan_b":"variable.armor_stand.pose_index == 11"},{"hero":"variable.armor_stand.pose_index == 12"}]},"none":{"animations":["no_pose"],"blend_transition":0.1,"blend_via_shortest_path":true,"transitions":[{"default":"variable.armor_stand.pose_index == 0"},{"solemn":"variable.armor_stand.pose_index == 2"},{"athena":"variable.armor_stand.pose_index == 3"},{"brandish":"variable.armor_stand.pose_index == 4"},{"honor":"variable.armor_stand.pose_index == 5"},{"entertain":"variable.armor_stand.pose_index == 6"},{"salute":"variable.armor_stand.pose_index == 7"},{"riposte":"variable.armor_stand.pose_index == 8"},{"zombie":"variable.armor_stand.pose_index == 9"},{"cancan_a":"variable.armor_stand.pose_index == 10"},{"cancan_b":"variable.armor_stand.pose_index == 11"},{"hero":"variable.armor_stand.pose_index == 12"}]},"riposte":{"animations":["riposte_pose"],"blend_transition":0.1,"blend_via_shortest_path":true,"transitions":[{"default":"variable.armor_stand.pose_index == 0"},{"none":"variable.armor_stand.pose_index == 1"},{"solemn":"variable.armor_stand.pose_index == 2"},{"athena":"variable.armor_stand.pose_index == 3"},{"brandish":"variable.armor_stand.pose_index == 4"},{"honor":"variable.armor_stand.pose_index == 5"},{"entertain":"variable.armor_stand.pose_index == 6"},{"salute":"variable.armor_stand.pose_index == 7"},{"zombie":"variable.armor_stand.pose_index == 9"},{"cancan_a":"variable.armor_stand.pose_index == 10"},{"cancan_b":"variable.armor_stand.pose_index == 11"},{"hero":"variable.armor_stand.pose_index == 12"}]},"salute":{"animations":["salute_pose"],"blend_transition":0.1,"blend_via_shortest_path":true,"transitions":[{"default":"variable.armor_stand.pose_index == 0"},{"none":"variable.armor_stand.pose_index == 1"},{"solemn":"variable.armor_stand.pose_index == 2"},{"athena":"variable.armor_stand.pose_index == 3"},{"brandish":"variable.armor_stand.pose_index == 4"},{"honor":"variable.armor_stand.pose_index == 5"},{"entertain":"variable.armor_stand.pose_index == 6"},{"riposte":"variable.armor_stand.pose_index == 8"},{"zombie":"variable.armor_stand.pose_index == 9"},{"cancan_a":"variable.armor_stand.pose_index == 10"},{"cancan_b":"variable.armor_stand.pose_index == 11"},{"hero":"variable.armor_stand.pose_index == 12"}]},"solemn":{"animations":["solemn_pose"],"blend_transition":0.1,"blend_via_shortest_path":true,"transitions":[{"default":"variable.armor_stand.pose_index == 0"},{"none":"variable.armor_stand.pose_index == 1"},{"athena":"variable.armor_stand.pose_index == 3"},{"brandish":"variable.armor_stand.pose_index == 4"},{"honor":"variable.armor_stand.pose_index == 5"},{"entertain":"variable.armor_stand.pose_index == 6"},{"salute":"variable.armor_stand.pose_index == 7"},{"riposte":"variable.armor_stand.pose_index == 8"},{"zombie":"variable.armor_stand.pose_index == 9"},{"cancan_a":"variable.armor_stand.pose_index == 10"},{"cancan_b":"variable.armor_stand.pose_index == 11"},{"hero":"variable.armor_stand.pose_index == 12"}]},"zombie":{"animations":["zombie_pose"],"blend_transition":0.1,"blend_via_shortest_path":true,"transitions":[{"default":"variable.armor_stand.pose_index == 0"},{"none":"variable.armor_stand.pose_index == 1"},{"solemn":"variable.armor_stand.pose_index == 2"},{"athena":"variable.armor_stand.pose_index == 3"},{"brandish":"variable.armor_stand.pose_index == 4"},{"honor":"variable.armor_stand.pose_index == 5"},{"entertain":"variable.armor_stand.pose_index == 6"},{"salute":"variable.armor_stand.pose_index == 7"},{"riposte":"variable.armor_stand.pose_index == 8"},{"cancan_a":"variable.armor_stand.pose_index == 10"},{"cancan_b":"variable.armor_stand.pose_index == 11"},{"hero":"variable.armor_stand.pose_index == 12"}]}}},"controller.wiggling":{"initial_state":"default","states":{"default":{"transitions":[{"wiggling":"(variable.armor_stand.hurt_time - query.frame_alpha) > 0"}]},"wiggling":{"animations":["wiggle"],"transitions":[{"default":"(variable.armor_stand.hurt_time - query.frame_alpha) <= 0"}]}}}}},"arrow":{"identifier":"minecraft:arrow","materials":{"default":"arrow"},"textures":{"default":"textures/entity/arrow"},"geometry":{"default":{"bones":[{"name":"body","pivot":[0,1,0],"cubes":[{"origin":[0,-2.5,-3],"rotation":[0,0,45],"size":[0,5,16],"uv":{"east":{"uv":[0,0]}}},{"origin":[0,-2.5,-3],"rotation":[0,0,-45],"size":[0,5,16],"uv":{"east":{"uv":[0,0]}}},{"origin":[-2.5,-2.5,12],"rotation":[0,0,45],"size":[5,5,0],"uv":{"south":{"uv":[0,5]}}}]}],"texturewidth":32,"textureheight":32}},"animations":{"move":{"loop":true,"bones":{"body":{"rotation":["variable.shake_power - query.target_x_rotation","-query.target_y_rotation",0],"scale":[0.7,0.7,0.9]}}}},"scripts":{"pre_animation":["variable.shake = query.shake_time - query.frame_alpha;","variable.shake_power = variable.shake > 0.0 ? -Math.sin(variable.shake * 200.0) * variable.shake : 0.0;"],"animate":["move"]},"render_controllers":["controller.render.arrow"]},"bat":{"identifier":"minecraft:bat","materials":{"default":"bat"},"textures":{"default":"textures/entity/bat"},"geometry":{"default":{"visible_bounds_width":1,"visible_bounds_height":1,"visible_bounds_offset":[0,0.5,0],"bones":[{"name":"head","pivot":[0,24,0],"cubes":[{"origin":[-3,21,-3],"size":[6,6,6],"uv":[0,0]}]},{"name":"rightEar","pivot":[0,24,0],"cubes":[{"origin":[-4,26,-2],"size":[3,4,1],"uv":[24,0]}],"parent":"head"},{"name":"leftEar","mirror":true,"pivot":[0,24,0],"cubes":[{"origin":[1,26,-2],"size":[3,4,1],"uv":[24,0]}],"parent":"head"},{"name":"body","pivot":[0,24,0],"cubes":[{"origin":[-3,8,-3],"size":[6,12,6],"uv":[0,16]},{"origin":[-5,-8,0],"size":[10,16,1],"uv":[0,34]}]},{"name":"rightWing","pivot":[0,24,0],"cubes":[{"origin":[-12,7,1.5],"size":[10,16,1],"uv":[42,0]}],"parent":"body"},{"name":"rightWingTip","pivot":[-12,23,1.5],"cubes":[{"origin":[-20,10,1.5],"size":[8,12,1],"uv":[24,16]}],"parent":"rightWing"},{"name":"leftWing","mirror":true,"pivot":[0,24,0],"cubes":[{"origin":[2,7,1.5],"size":[10,16,1],"uv":[42,0]}],"parent":"body"},{"name":"leftWingTip","mirror":true,"pivot":[12,23,1.5],"cubes":[{"origin":[12,10,1.5],"size":[8,12,1],"uv":[24,16]}],"parent":"leftWing"}]}},"scripts":{"scale":"0.35"},"animations":{"resting":{"loop":true,"bones":{"body":{"position":[0,-0.035,0],"rotation":[180,0,0]},"head":{"position":[0,-0.035,0],"rotation":["query.target_x_rotation","180.0f - query.target_y_rotation",180]},"leftwing":{"position":[3,0,3],"rotation":[-9,72,0]},"leftwingtip":{"rotation":[0,99,0]},"rightwing":{"position":[-3,0,3],"rotation":[-9,-72,0]},"rightwingtip":{"rotation":[0,-99,0]}}},"flying":{"loop":true,"bones":{"body":{"position":[0,"math.cos(query.life_time * 343.774) * 1.6",0],"rotation":["45.0 - math.cos(query.life_time * 1489.6) * 8.59",0,0]},"head":{"position":["-this","math.cos(query.life_time * 343.774) * 1.6 - this","-this"],"rotation":["query.target_x_rotation","query.target_y_rotation",0]},"leftwing":{"position":["-this","-this","-this"],"rotation":[0,"math.cos(query.life_time * 1489.6) * -45.0",0]},"leftwingtip":{"rotation":[0,"math.cos(query.life_time * 1489.6) * -22.0",0]},"rightwing":{"position":["-this","-this","-this"],"rotation":[0,"math.cos(query.life_time * 1489.6) * 45.0",0]},"rightwingtip":{"rotation":[0,"math.cos(query.life_time * 1489.6) * 22.0",0]}}}},"animation_controllers":{"move":{"initial_state":"flying","states":{"flying":{"animations":["flying"],"transitions":[{"resting":"query.is_resting"}]},"resting":{"animations":["resting"],"transitions":[{"flying":"!query.is_resting"}]}}}},"render_controllers":["controller.render.bat"],"spawn_egg":{"texture":"spawn_egg","texture_index":18}},"bee":{"identifier":"minecraft:bee","materials":{"default":"bee"},"textures":{"default":"textures/entity/bee/bee","angry":"textures/entity/bee/bee_angry","nectar":"textures/entity/bee/bee_nectar","angry_nectar":"textures/entity/bee/bee_angry_nectar"},"geometry":{"default":{"texturewidth":64,"textureheight":64,"visible_bounds_width":1.5,"visible_bounds_height":1.5,"visible_bounds_offset":[0,0.25,0],"bones":[{"name":"body","pivot":[0.5,5,0],"cubes":[{"origin":[-3,2,-5],"size":[7,7,10],"uv":[0,0]},{"origin":[2,7,-8],"size":[1,2,3],"uv":[2,0]},{"origin":[-2,7,-8],"size":[1,2,3],"uv":[2,3]}],"locators":{"lead":[0,4,-1]}},{"name":"stinger","parent":"body","pivot":[0.5,6,1],"cubes":[{"origin":[0.5,5,5],"size":[0,1,2],"uv":[26,7]}]},{"name":"rightwing_bone","parent":"body","pivot":[-1,9,-3],"rotation":[15,-15,0],"cubes":[{"origin":[-10,9,-3],"size":[9,0,6],"uv":[0,18]}]},{"name":"leftwing_bone","parent":"body","pivot":[2,9,-3],"rotation":[15,15,0],"cubes":[{"origin":[2,9,-3],"size":[9,0,6],"uv":[9,24]}]},{"name":"leg_front","parent":"body","pivot":[2,2,-2],"cubes":[{"origin":[-3,0,-2],"size":[7,2,0],"uv":[26,1]}]},{"name":"leg_mid","parent":"body","pivot":[2,2,0],"cubes":[{"origin":[-3,0,0],"size":[7,2,0],"uv":[26,3]}]},{"name":"leg_back","parent":"body","pivot":[2,2,2],"cubes":[{"origin":[-3,0,2],"size":[7,2,0],"uv":[26,5]}]}]}},"animations":{"flying":{"loop":true,"animation_length":2.55,"bones":{"body":{"rotation":{"0.0":[0,0,0],"1.30":[5,0,0],"2.55":[0,0,0]}},"leftwing_bone":{"rotation":{"0.0":[0,0,35],"0.05":[0,0,0],"0.10":[0,0,-35],"0.15":[0,0,0],"0.2":[0,0,35],"0.25":[0,0,0],"0.30":[0,0,-35],"0.35":[0,0,0],"0.40":[0,0,35],"0.45":[0,0,0],"0.50":[0,0,-35],"0.55":[0,0,0],"0.60":[0,0,35],"0.65":[0,0,0],"0.70":[0,0,-35],"0.75":[0,0,0],"0.80":[0,0,35],"0.85":[0,0,0],"0.90":[0,0,-35],"0.95":[0,0,0],"1.0":[0,0,35],"1.05":[0,0,0],"1.10":[0,0,-35],"1.15":[0,0,0],"1.20":[0,0,35],"1.25":[0,0,0],"1.30":[0,0,-35],"1.35":[0,0,0],"1.40":[0,0,35],"1.45":[0,0,0],"1.50":[0,0,-35],"1.55":[0,0,0],"1.60":[0,0,35],"1.65":[0,0,0],"1.70":[0,0,-35],"1.75":[0,0,0],"1.80":[0,0,35],"1.85":[0,0,0],"1.90":[0,0,-35],"1.95":[0,0,0],"2.0":[0,0,35],"2.05":[0,0,0],"2.10":[0,0,-35],"2.15":[0,0,0],"2.20":[0,0,35],"2.25":[0,0,0],"2.30":[0,0,-35],"2.35":[0,0,0],"2.40":[0,0,35],"2.45":[0,0,0],"2.50":[0,0,-35],"2.55":[0,0,0]}},"leg_front":{"rotation":{"0.0":[15,0,0],"1.20":[25,0,0],"2.55":[15,0,0]}},"leg_mid":{"rotation":{"0.0":[15,0,0],"1.30":[35,0,0],"2.55":[15,0,0]}},"leg_back":{"rotation":{"0.0":[30,0,0],"1.60":[45,0,0],"2.55":[30,0,0]}},"rightwing_bone":{"rotation":{"0.0":[0,0,-35],"0.05":[0,0,0],"0.10":[0,0,35],"0.15":[0,0,0],"0.2":[0,0,-35],"0.25":[0,0,0],"0.30":[0,0,35],"0.35":[0,0,0],"0.40":[0,0,-35],"0.45":[0,0,0],"0.50":[0,0,35],"0.55":[0,0,0],"0.60":[0,0,-35],"0.65":[0,0,0],"0.70":[0,0,35],"0.75":[0,0,0],"0.80":[0,0,-35],"0.85":[0,0,0],"0.90":[0,0,35],"0.95":[0,0,0],"1.0":[0,0,-35],"1.05":[0,0,0],"1.10":[0,0,35],"1.15":[0,0,0],"1.20":[0,0,-35],"1.25":[0,0,0],"1.30":[0,0,35],"1.35":[0,0,0],"1.40":[0,0,-35],"1.45":[0,0,0],"1.50":[0,0,35],"1.55":[0,0,0],"1.60":[0,0,-35],"1.65":[0,0,0],"1.70":[0,0,35],"1.75":[0,0,0],"1.80":[0,0,-35],"1.85":[0,0,0],"1.90":[0,0,35],"1.95":[0,0,0],"2.0":[0,0,-35],"2.05":[0,0,0],"2.10":[0,0,35],"2.15":[0,0,0],"2.20":[0,0,-35],"2.25":[0,0,0],"2.30":[0,0,35],"2.35":[0,0,0],"2.40":[0,0,-35],"2.45":[0,0,0],"2.50":[0,0,35],"2.55":[0,0,0]}}}},"bee_sting":{"loop":true,"bones":{"body":{"rotation":["-175 * math.sin(variable.attack_time * 180)",0,0]}}},"bee_no_stinger":{"loop":true,"bones":{"stinger":{"scale":0}}},"bee_fly_bobbing":{"loop":true,"bones":{"body":{"position":[0,"math.cos(query.life_time * 343.774) * 1.6",0],"rotation":[0,"20 * math.cos(query.life_time * 343.774 / 2)",0]}}}},"particle_effects":{"nectar_dripping":"minecraft:nectar_drip_particle"},"scripts":{"animate":["bee_root_controller",{"bee_no_stinger":"query.mark_variant == 1"}]},"render_controllers":["controller.render.bee"],"spawn_egg":{"texture":"egg_bee","texture_index":0},"animation_controllers":{"drip":{"initial_state":"default","states":{"default":{"transitions":[{"dripping":"query.is_powered"}]},"dripping":{"particle_effects":[{"effect":"nectar_dripping"}],"transitions":[{"default":"!query.is_powered"}]}}},"controller_bee_sting":{"initial_state":"default","states":{"default":{"animations":["bee_sting"]}}},"bee_root_controller":{"initial_state":"default","states":{"default":{"animations":["flying","drip","bee_fly_bobbing","controller_bee_sting"]}}}}},"blaze":{"identifier":"minecraft:blaze","min_engine_version":"1.8.0","materials":{"body":"blaze_body","head":"blaze_head"},"textures":{"default":"textures/entity/blaze"},"geometry":{"default":{"visible_bounds_width":1.5,"visible_bounds_height":2,"visible_bounds_offset":[0,1,0],"texturewidth":64,"textureheight":32,"bones":[{"name":"upperBodyParts0","pivot":[0,24,0],"cubes":[{"origin":[0,16,0],"size":[2,8,2],"uv":[0,16]}]},{"name":"upperBodyParts1","pivot":[0,24,0],"cubes":[{"origin":[0,16,0],"size":[2,8,2],"uv":[0,16]}]},{"name":"upperBodyParts2","pivot":[0,24,0],"cubes":[{"origin":[0,16,0],"size":[2,8,2],"uv":[0,16]}]},{"name":"upperBodyParts3","pivot":[0,24,0],"cubes":[{"origin":[0,16,0],"size":[2,8,2],"uv":[0,16]}]},{"name":"upperBodyParts4","pivot":[0,24,0],"cubes":[{"origin":[0,16,0],"size":[2,8,2],"uv":[0,16]}]},{"name":"upperBodyParts5","pivot":[0,24,0],"cubes":[{"origin":[0,16,0],"size":[2,8,2],"uv":[0,16]}]},{"name":"upperBodyParts6","pivot":[0,24,0],"cubes":[{"origin":[0,16,0],"size":[2,8,2],"uv":[0,16]}]},{"name":"upperBodyParts7","pivot":[0,24,0],"cubes":[{"origin":[0,16,0],"size":[2,8,2],"uv":[0,16]}]},{"name":"upperBodyParts8","pivot":[0,24,0],"cubes":[{"origin":[0,16,0],"size":[2,8,2],"uv":[0,16]}]},{"name":"upperBodyParts9","pivot":[0,24,0],"cubes":[{"origin":[0,16,0],"size":[2,8,2],"uv":[0,16]}]},{"name":"upperBodyParts10","pivot":[0,24,0],"cubes":[{"origin":[0,16,0],"size":[2,8,2],"uv":[0,16]}]},{"name":"upperBodyParts11","pivot":[0,24,0],"cubes":[{"origin":[0,16,0],"size":[2,8,2],"uv":[0,16]}]},{"name":"head","pivot":[0,24,0],"cubes":[{"origin":[-4,20,-4],"size":[8,8,8],"uv":[0,0]}]}]}},"animations":{"look_at_target":{"loop":true,"bones":{"head":{"relative_to":{"rotation":"entity"},"rotation":["query.target_x_rotation - this","query.target_y_rotation - this",0]}}},"move":{"loop":true,"bones":{"upperbodyparts0":{"position":["math.cos(query.life_time * -360.0        ) * 9.0","2.0 + math.cos((0 * 2 + query.life_time * 20.0) * 14.32)","math.sin(query.life_time * -360.0        ) * 9.0"]},"upperbodyparts1":{"position":["math.cos(query.life_time * -360.0 +  90.0) * 9.0","2.0 + math.cos((1 * 2 + query.life_time * 20.0) * 14.32)","math.sin(query.life_time * -360.0 +  90.0) * 9.0"]},"upperbodyparts10":{"position":["math.cos(query.life_time * -180.0 + 207.0) * 5.0","-11.0 + math.cos((10 * 1.5 + query.life_time * 20.0) * 14.32)","math.sin(query.life_time * -180.0 + 207.0) * 5.0"]},"upperbodyparts11":{"position":["math.cos(query.life_time * -180.0 + 297.0) * 5.0","-11.0 + math.cos((11 * 1.5 + query.life_time * 20.0) * 14.32)","math.sin(query.life_time * -180.0 + 297.0) * 5.0"]},"upperbodyparts2":{"position":["math.cos(query.life_time * -360.0 + 180.0) * 9.0","2.0 + math.cos((2 * 2 + query.life_time * 20.0) * 14.32)","math.sin(query.life_time * -360.0 + 180.0) * 9.0"]},"upperbodyparts3":{"position":["math.cos(query.life_time * -360.0 + 270.0) * 9.0","2.0 + math.cos((3 * 2 + query.life_time * 20.0) * 14.32)","math.sin(query.life_time * -360.0 + 270.0) * 9.0"]},"upperbodyparts4":{"position":["math.cos(query.life_time * 108.0 +  45.0) * 7.0","-2.0 + math.cos((4 * 2 + query.life_time * 20.0) * 14.32)","math.sin(query.life_time * 108.0 +  45.0) * 7.0"]},"upperbodyparts5":{"position":["math.cos(query.life_time * 108.0 + 135.0) * 7.0","-2.0 + math.cos((5 * 2 + query.life_time * 20.0) * 14.32)","math.sin(query.life_time * 108.0 + 135.0) * 7.0"]},"upperbodyparts6":{"position":["math.cos(query.life_time * 108.0 + 225.0) * 7.0","-2.0 + math.cos((6 * 2 + query.life_time * 20.0) * 14.32)","math.sin(query.life_time * 108.0 + 225.0) * 7.0"]},"upperbodyparts7":{"position":["math.cos(query.life_time * 108.0 + 315.0) * 7.0","-2.0 + math.cos((7 * 2 + query.life_time * 20.0) * 14.32)","math.sin(query.life_time * 108.0 + 315.0) * 7.0"]},"upperbodyparts8":{"position":["math.cos(query.life_time * -180.0 +  27.0) * 5.0","-11.0 + math.cos((8 * 1.5 + query.life_time * 20.0) * 14.32)","math.sin(query.life_time * -180.0 +  27.0) * 5.0"]},"upperbodyparts9":{"position":["math.cos(query.life_time * -180.0 + 117.0) * 5.0","-11.0 + math.cos((9 * 1.5 + query.life_time * 20.0) * 14.32)","math.sin(query.life_time * -180.0 + 117.0) * 5.0"]}}}},"particle_effects":{"charged_flames":"minecraft:mobflame_emitter"},"animation_controllers":{"move":{"initial_state":"default","states":{"default":{"animations":["move","look_at_target"]}}},"flame":{"initial_state":"default","states":{"default":{"transitions":[{"flaming":"query.is_charged"}]},"flaming":{"particle_effects":[{"effect":"charged_flames"}],"transitions":[{"default":"!query.is_charged"}]}}}},"render_controllers":["controller.render.blaze"],"spawn_egg":{"texture":"spawn_egg","texture_index":21}},"boat":{"identifier":"minecraft:boat","textures":{"default":"textures/entity/boat/acacia","acacia":"textures/entity/boat/acacia","birch":"textures/entity/boat/birch","darkoak":"textures/entity/boat/dark_oak","jungle":"textures/entity/boat/jungle","oak":"textures/entity/boat/oak","spruce":"textures/entity/boat/spruce"},"geometry":{"default":{"texturewidth":128,"textureheight":64,"bones":[{"name":"bottom","pivot":[0,18,0],"rotation":[90,0,0],"mirror":true,"cubes":[{"origin":[-14,10,0],"size":[28,16,3],"uv":[0,0]}]},{"name":"front","pivot":[15,24,0],"rotation":[0,90,0],"mirror":true,"cubes":[{"origin":[7,21,-1],"size":[16,6,2],"uv":[0,27]}]},{"name":"back","pivot":[-15,24,0],"rotation":[0,-90,0],"mirror":true,"cubes":[{"origin":[-24,21,-1],"size":[18,6,2],"uv":[0,19]}]},{"name":"right","pivot":[0,24,-9],"rotation":[0,-180,0],"mirror":true,"cubes":[{"origin":[-14,21,-10],"size":[28,6,2],"uv":[0,35]}]},{"name":"left","pivot":[0,24,9],"mirror":true,"cubes":[{"origin":[-14,21,8],"size":[28,6,2],"uv":[0,43]}]}]}}},"cat":{"identifier":"minecraft:cat","materials":{"default":"cat"},"textures":{"white":"textures/entity/cat/white","black":"textures/entity/cat/tuxedo","red":"textures/entity/cat/red","siamese":"textures/entity/cat/siamese","british":"textures/entity/cat/british_shorthair","calico":"textures/entity/cat/calico","persian":"textures/entity/cat/persian","ragdoll":"textures/entity/cat/ragdoll","tabby":"textures/entity/cat/tabby","jellie":"textures/entity/cat/jellie","all_black":"textures/entity/cat/all_black","white_tame":"textures/entity/cat/white","black_tame":"textures/entity/cat/tuxedo_tame","red_tame":"textures/entity/cat/red","siamese_tame":"textures/entity/cat/siamese","british_tame":"textures/entity/cat/british_shorthair","calico_tame":"textures/entity/cat/calico","persian_tame":"textures/entity/cat/persian","ragdoll_tame":"textures/entity/cat/ragdoll","tabby_tame":"textures/entity/cat/tabby","all_black_tame":"textures/entity/cat/all_black","jellie_tame":"textures/entity/cat/jellie"},"geometry":{"default":{"visible_bounds_width":2.5,"visible_bounds_height":1,"visible_bounds_offset":[0,0.5,0],"texturewidth":64,"textureheight":32,"bones":[{"pivot":[0,9,-9],"locators":{"lead":[0,9,-9]},"cubes":[{"origin":[-2.5,7,-12],"size":[5,4,5],"uv":[0,0]},{"origin":[-1.5,7.01562,-13],"size":[3,2,2],"uv":[0,24]},{"origin":[-2,11,-9],"size":[1,1,2],"uv":[0,10]},{"origin":[1,11,-9],"size":[1,1,2],"uv":[6,10]}],"name":"head","parent":"body"},{"pivot":[0,7,1],"bind_pose_rotation":[90,0,0],"cubes":[{"origin":[-2,-1,-2],"size":[4,16,6],"uv":[20,0]}],"name":"body"},{"pivot":[0,9,8],"bind_pose_rotation":[90,0,0],"cubes":[{"origin":[-0.5,1,8],"size":[1,8,1],"uv":[0,15]}],"name":"tail1","parent":"body"},{"pivot":[0,9,16],"bind_pose_rotation":[90,0,0],"cubes":[{"origin":[-0.5,1,16],"size":[1,8,1],"uv":[4,15],"inflate":0,"mirror":false}],"name":"tail2","parent":"tail1"},{"pivot":[1.1,6,7],"cubes":[{"origin":[0.1,0,6],"size":[2,6,2],"uv":[8,13],"inflate":0,"mirror":false}],"name":"backLegL","parent":"body"},{"pivot":[-1.1,6,7],"cubes":[{"origin":[-2.1,0,6],"size":[2,6,2],"uv":[8,13],"inflate":0,"mirror":false}],"name":"backLegR","parent":"body"},{"pivot":[1.2,10,-4],"cubes":[{"origin":[0.2,0.2,-5],"size":[2,10,2],"uv":[40,0],"inflate":0,"mirror":false}],"name":"frontLegL","parent":"body"},{"pivot":[-1.2,10,-4],"cubes":[{"origin":[-2.2,0.2,-5],"size":[2,10,2],"uv":[40,0],"inflate":0,"mirror":false}],"name":"frontLegR","parent":"body"}]}},"animations":{"sneak":{"loop":true,"bones":{"backlegl":{"position":[0,1,0],"rotation":["math.cos(query.modified_distance_moved * 38.17) * 57.3 * query.modified_move_speed",0,0]},"backlegr":{"position":[0,1,0],"rotation":["math.cos(query.modified_distance_moved * 38.17 + 180.0) * 57.3 * query.modified_move_speed",0,0]},"body":{"position":[0,-1,0]},"frontlegl":{"position":[0,1,0],"rotation":["math.cos(query.modified_distance_moved * 38.17 + 180.0) * 57.3 * query.modified_move_speed",0,0]},"frontlegr":{"position":[0,1,0],"rotation":["math.cos(query.modified_distance_moved * 38.17) * 57.3 * query.modified_move_speed",0,0]},"head":{"position":[0,-1,0]},"tail1":{"position":[0,1,0]},"tail2":{"rotation":["62.0 + math.cos(query.modified_distance_moved * 57.3) * 27.0 * query.modified_move_speed",0,0]}}},"walk":{"loop":true,"bones":{"backlegl":{"rotation":["math.cos(query.modified_distance_moved * 38.17) * 57.3 * query.modified_move_speed",0,0]},"backlegr":{"rotation":["math.cos(query.modified_distance_moved * 38.17 + 180.0) * 57.3 * query.modified_move_speed",0,0]},"frontlegl":{"rotation":["math.cos(query.modified_distance_moved * 38.17 + 180.0) * 57.3 * query.modified_move_speed",0,0]},"frontlegr":{"rotation":["math.cos(query.modified_distance_moved * 38.17) * 57.3 * query.modified_move_speed",0,0]},"tail1":{"rotation":[-51.57,0,0]},"tail2":{"rotation":["62.0 + math.cos(query.modified_distance_moved * 57.3) * 45.0 * query.modified_move_speed",0,0]}}},"sprint":{"loop":true,"bones":{"backlegl":{"rotation":["math.cos(query.modified_distance_moved * 38.17) * 57.3 * query.modified_move_speed",0,0]},"backlegr":{"rotation":["math.cos(query.modified_distance_moved * 38.17 + 17.19) * 57.3 * query.modified_move_speed",0,0]},"frontlegl":{"rotation":["math.cos(query.modified_distance_moved * 38.17 + 197.19) * 57.3 * query.modified_move_speed",0,0]},"frontlegr":{"rotation":["math.cos(query.modified_distance_moved * 38.17 + 180.0) * 57.3 * query.modified_move_speed",0,0]},"tail1":{"rotation":[0,0,0]},"tail2":{"rotation":["62.0 + math.cos(query.modified_distance_moved * 57.3) * 18.0 * query.modified_move_speed",0,0]}}},"sit":{"loop":true,"bones":{"backlegl":{"position":[0,0,1],"rotation":[-45,0,0]},"backlegr":{"position":[0,0,1],"rotation":[-45,0,0]},"body":{"position":[0,-1,0],"rotation":[-45,0,0]},"frontlegl":{"position":[0,-4.5,-1],"rotation":[42.15,0,0]},"frontlegr":{"position":[0,-4.5,-1],"rotation":[42.15,0,0]},"tail1":{"position":[0,-3,1],"rotation":[45,0,0]},"tail2":{"position":[0,0,0],"rotation":[45,0,0]}}},"look_at_target":{"loop":true,"bones":{"head":{"relative_to":{"rotation":"entity"},"rotation":["query.target_x_rotation - this","query.target_y_rotation - this",0]}}},"baby_transform":{"loop":true,"bones":{"head":{"scale":1.5}}},"lie_down":{"loop":true,"bones":{"backlegl":{"position":[0,-0.7,0],"rotation":[-22.92,0,0]},"backlegr":{"position":[0.1,-1.2,0],"rotation":[28.65,0,-28.65]},"body":{"position":[0,"variable.liedownamount * -4.5 + variable.lieonplayer * (4.5 + query.is_baby * 6)",0],"rotation":[0,0,"math.lerprotate(0.0, 90.0, variable.liedownamount)"]},"frontlegl":{"position":[0,-1,-1.5],"rotation":[-72.81,0,0]},"frontlegr":{"position":[0.2,-0.9,0],"rotation":[-30,0,-14.46]},"head":{"position":[-0.1,0,-0.5],"rotation":[-10,"math.lerprotate(this, 75.81, variable.liedownamount)",0]},"tail1":{"position":[0,0,0],"rotation":["math.lerprotate(this, -33.84, variable.liedownamounttail)",0,0]},"tail2":{"position":[0,0,0],"rotation":["math.lerprotate(this, -68.92, variable.liedownamounttail)",0,0]}}}},"animation_controllers":{"look_at_target":{"initial_state":"default","states":{"default":{"animations":["look_at_target"]}}},"move":{"initial_state":"lie_down","states":{"lie_down":{"animations":["lie_down"],"transitions":[{"sneaking":"variable.state == 0"},{"sprinting":"variable.state == 1"},{"sitting":"variable.state == 2"},{"walking":"variable.state == 3"}]},"sitting":{"animations":["sit"],"transitions":[{"sneaking":"variable.state == 0"},{"sprinting":"variable.state == 1"},{"walking":"variable.state == 3"},{"lie_down":"variable.state == 4"}]},"sneaking":{"animations":["sneak"],"transitions":[{"sprinting":"variable.state == 1"},{"sitting":"variable.state == 2"},{"walking":"variable.state == 3"},{"lie_down":"variable.state == 4"}]},"sprinting":{"animations":["sprint"],"transitions":[{"sneaking":"variable.state == 0"},{"sitting":"variable.state == 2"},{"walking":"variable.state == 3"},{"lie_down":"variable.state == 4"}]},"walking":{"animations":["walk"],"transitions":[{"sneaking":"variable.state == 0"},{"sprinting":"variable.state == 1"},{"sitting":"variable.state == 2"},{"lie_down":"variable.state == 4"}]}}},"baby":{"initial_state":"baby","states":{"baby":{"animations":[{"baby_transform":"query.is_baby"}]}}}},"render_controllers":["controller.render.cat"],"spawn_egg":{"texture":"spawn_egg","texture_index":53}},"cave_spider":{"identifier":"minecraft:cave_spider","min_engine_version":"1.8.0","materials":{"default":"spider","invisible":"spider_invisible"},"textures":{"default":"textures/entity/spider/cave_spider"},"geometry":{"default":{"visible_bounds_width":2,"visible_bounds_height":1,"visible_bounds_offset":[0,0.5,0],"texturewidth":64,"textureheight":32,"bones":[{"name":"head","pivot":[0,9,-3],"cubes":[{"origin":[-4,5,-11],"size":[8,8,8],"uv":[32,4]}],"parent":"body0"},{"name":"body0","pivot":[0,9,0],"cubes":[{"origin":[-3,6,-3],"size":[6,6,6],"uv":[0,0]}]},{"name":"body1","pivot":[0,9,9],"cubes":[{"origin":[-5,5,3],"size":[10,8,12],"uv":[0,12]}],"parent":"body0"},{"name":"leg0","pivot":[-4,9,2],"cubes":[{"origin":[-19,8,1],"size":[16,2,2],"uv":[18,0]}],"parent":"body0"},{"name":"leg1","pivot":[4,9,2],"cubes":[{"origin":[3,8,1],"size":[16,2,2],"uv":[18,0]}],"parent":"body0"},{"name":"leg2","pivot":[-4,9,1],"cubes":[{"origin":[-19,8,0],"size":[16,2,2],"uv":[18,0]}],"parent":"body0"},{"name":"leg3","pivot":[4,9,1],"cubes":[{"origin":[3,8,0],"size":[16,2,2],"uv":[18,0]}],"parent":"body0"},{"name":"leg4","pivot":[-4,9,0],"cubes":[{"origin":[-19,8,-1],"size":[16,2,2],"uv":[18,0]}],"parent":"body0"},{"name":"leg5","pivot":[4,9,0],"cubes":[{"origin":[3,8,-1],"size":[16,2,2],"uv":[18,0]}],"parent":"body0"},{"name":"leg6","pivot":[-4,9,-1],"cubes":[{"origin":[-19,8,-2],"size":[16,2,2],"uv":[18,0]}],"parent":"body0"},{"name":"leg7","pivot":[4,9,-1],"cubes":[{"origin":[3,8,-2],"size":[16,2,2],"uv":[18,0]}],"parent":"body0"}]}},"scripts":{"scale":"0.7"},"animations":{"default_leg_pose":{"loop":true,"bones":{"leg0":{"rotation":[0,"45.0 - this","-45.0 - this"]},"leg1":{"rotation":[0,"-45.0 - this","45.0 - this"]},"leg2":{"rotation":[0,"22.5 - this","-33.3 - this"]},"leg3":{"rotation":[0,"-22.5 - this","33.3 - this"]},"leg4":{"rotation":[0,"-22.5 - this","-33.3 - this"]},"leg5":{"rotation":[0,"22.5 - this","33.3 - this"]},"leg6":{"rotation":[0,"-45.0 - this","-45.0 - this"]},"leg7":{"rotation":[0,"45.0 - this","45.0 - this"]}}},"look_at_target":{"loop":true,"bones":{"head":{"rotation":["query.target_x_rotation","query.target_y_rotation",0]}}},"walk":{"anim_time_update":"query.modified_distance_moved","loop":true,"bones":{"leg0":{"rotation":[0,"-math.abs(math.cos(query.anim_time * 76.34 + 90 * 0) * 22.92)","math.abs(math.sin(query.anim_time * 38.17 + 90 * 0) * 22.92)"]},"leg1":{"rotation":[0,"math.abs(math.cos(query.anim_time * 76.34 + 90 * 0) * 22.92)","-math.abs(math.sin(query.anim_time * 38.17 + 90 * 0) * 22.92)"]},"leg2":{"rotation":[0,"-math.abs(math.cos(query.anim_time * 76.34 + 90 * 1) * 22.92)","math.abs(math.sin(query.anim_time * 38.17 + 90 * 1) * 22.92)"]},"leg3":{"rotation":[0,"math.abs(math.cos(query.anim_time * 76.34 + 90 * 1) * 22.92)","-math.abs(math.sin(query.anim_time * 38.17 + 90 * 1) * 22.92)"]},"leg4":{"rotation":[0,"-math.abs(math.cos(query.anim_time * 76.34 + 90 * 2) * 22.92)","math.abs(math.sin(query.anim_time * 38.17 + 90 * 2) * 22.92)"]},"leg5":{"rotation":[0,"math.abs(math.cos(query.anim_time * 76.34 + 90 * 2) * 22.92)","-math.abs(math.sin(query.anim_time * 38.17 + 90 * 2) * 22.92)"]},"leg6":{"rotation":[0,"-math.abs(math.cos(query.anim_time * 76.34 + 90 * 3) * 22.92)","math.abs(math.sin(query.anim_time * 38.17 + 90 * 3) * 22.92)"]},"leg7":{"rotation":[0,"math.abs(math.cos(query.anim_time * 76.34 + 90 * 3) * 22.92)","-math.abs(math.sin(query.anim_time * 38.17 + 90 * 3) * 22.92)"]}}}},"animation_controllers":{"move":{"initial_state":"default","states":{"default":{"animations":["default_leg_pose",{"walk":"query.modified_move_speed"},"look_at_target"]}}}},"render_controllers":["controller.render.spider"],"spawn_egg":{"texture":"spawn_egg","texture_index":22}},"chest_minecart":{"identifier":"minecraft:chest_minecart","min_engine_version":"1.8.0","materials":{"default":"minecart"},"textures":{"default":"textures/entity/minecart"},"geometry":{"default":{"bones":[{"name":"bottom","pivot":[0,6,0],"cubes":[{"origin":[-10,-6.5,-1],"size":[20,16,2],"rotation":[90,0,0],"uv":[0,10]}]},{"name":"back","pivot":[0,0,0],"cubes":[{"origin":[-17,2.5,-1],"size":[16,8,2],"rotation":[0,270,0],"uv":[0,0]}],"parent":"bottom"},{"name":"front","pivot":[0,0,0],"cubes":[{"origin":[1,2.5,-1],"size":[16,8,2],"rotation":[0,90,0],"uv":[0,0]}],"parent":"bottom"},{"name":"right","pivot":[0,0,0],"cubes":[{"origin":[-8,2.5,-8],"size":[16,8,2],"rotation":[0,180,0],"uv":[0,0]}],"parent":"bottom"},{"name":"left","pivot":[0,0,0],"cubes":[{"origin":[-8,2.5,6],"size":[16,8,2],"uv":[0,0]}],"parent":"bottom"}],"texturewidth":64,"textureheight":32}},"scripts":{"pre_animation":["variable.hurt = query.hurt_time - query.frame_alpha;"],"animate":["move"]},"animations":{"move":{"loop":true,"bones":{"bottom":{"position":["variable.rail_offset.x / query.model_scale","variable.rail_offset.y / query.model_scale","variable.rail_offset.z / query.model_scale"],"rotation":["variable.hurt > 0 ? -Math.sin(variable.hurt * 360 / (Math.pi * 2)) * variable.hurt * (((20 * 2 - query.structural_integrity) - query.frame_alpha) < 0 ? 0: (20 * 2 - query.structural_integrity) - query.frame_alpha) / 10 * query.hurt_direction : 0",0,"-variable.rail_rotation.z"]}}}},"render_controllers":["controller.render.minecart"]},"chicken":{"identifier":"minecraft:chicken","min_engine_version":"1.12.0","materials":{"default":"chicken","legs":"chicken_legs"},"textures":{"default":"textures/entity/chicken"},"geometry":{"default":{"bones":[{"name":"body","pivot":[0,8,0],"cubes":[{"origin":[-3,4,-3],"rotation":[90,0,0],"size":[6,8,6],"uv":[0,9]}]},{"name":"head","pivot":[0,9,-4],"cubes":[{"origin":[-2,9,-6],"size":[4,6,3],"uv":[0,0]}],"locators":{"lead":[0,9,-4]}},{"name":"comb","parent":"head","pivot":[0,9,-4],"cubes":[{"origin":[-1,9,-7],"size":[2,2,2],"uv":[14,4]}]},{"name":"beak","parent":"head","pivot":[0,9,-4],"cubes":[{"origin":[-2,11,-8],"size":[4,2,2],"uv":[14,0]}]},{"name":"leg0","pivot":[-2,5,1],"cubes":[{"origin":[-3,0,-2],"size":[3,5,3],"uv":[26,0]}]},{"name":"leg1","pivot":[1,5,1],"cubes":[{"origin":[0,0,-2],"size":[3,5,3],"uv":[26,0]}]},{"name":"wing0","pivot":[-3,11,0],"cubes":[{"origin":[-4,7,-3],"size":[1,4,6],"uv":[24,13]}]},{"name":"wing1","pivot":[3,11,0],"cubes":[{"origin":[3,7,-3],"size":[1,4,6],"uv":[24,13]}]}],"visible_bounds_width":1.5,"visible_bounds_height":1.5,"visible_bounds_offset":[0,0.5,0],"texturewidth":64,"textureheight":32}},"animations":{"move":{"anim_time_update":"query.modified_distance_moved","loop":true,"bones":{"leg0":{"rotation":["math.cos(query.anim_time * 38.17) *  80.0",0,0]},"leg1":{"rotation":["math.cos(query.anim_time * 38.17) * -80.0",0,0]}}},"general":{"loop":true,"bones":{"body":{"rotation":["-this",0,0]},"wing0":{"rotation":[0,0,"variable.wing_flap - this"]},"wing1":{"rotation":[0,0,"-variable.wing_flap - this"]}}},"look_at_target":{"loop":true,"bones":{"head":{"relative_to":{"rotation":"entity"},"rotation":["query.target_x_rotation - this","query.target_y_rotation - this",0]}}},"baby_transform":{"loop":true,"bones":{"head":{"scale":2}}}},"scripts":{"animate":["general",{"move":"query.modified_move_speed"},"look_at_target",{"baby_transform":"query.is_baby"}]},"render_controllers":["controller.render.chicken"],"spawn_egg":{"texture":"spawn_egg","texture_index":0}},"cod":{"identifier":"minecraft:cod","materials":{"default":"cod"},"textures":{"default":"textures/entity/fish/cod"},"geometry":{"default":{"visible_bounds_width":0.5,"visible_bounds_height":0.5,"texturewidth":32,"textureheight":32,"bones":[{"name":"body","cubes":[{"origin":[-1,0,1],"size":[2,4,7],"uv":[0,0]},{"origin":[0,4,0],"size":[0,1,6],"uv":[20,-6]},{"origin":[0,-1,3],"size":[0,1,2],"uv":[22,-1]}]},{"name":"head","parent":"body","pivot":[0,2,0],"cubes":[{"origin":[-0.9992,1.0008,-3],"size":[2,3,1],"uv":[0,0]},{"origin":[-1,0,-2],"size":[2,4,3],"uv":[11,0]}]},{"name":"leftFin","parent":"body","pivot":[1,1,0],"rotation":[0,0,35],"cubes":[{"origin":[1,0,0],"size":[2,1,2],"uv":[24,4]}]},{"name":"rightFin","parent":"body","pivot":[-1,1,0],"rotation":[0,0,-35],"cubes":[{"origin":[-3,0,0],"size":[2,1,2],"uv":[24,1]}]},{"name":"tailfin","parent":"body","pivot":[0,0,8],"cubes":[{"origin":[0,0,8],"size":[0,4,6],"uv":[20,1]}]},{"name":"waist","parent":"body","cubes":[]}]}},"scripts":{"pre_animation":["variable.ZRot = !query.is_in_water ? Math.cos((query.time_stamp + query.frame_alpha) * 14.32) * 90 : 0.0;","variable.AnimationAmountBlend = Math.lerp(variable.AnimationAmountPrev, variable.AnimationAmount, query.frame_alpha);"]},"animations":{"flop":{"loop":true,"bones":{"body":{"rotation":[0,"math.cos(variable.animationamountblend * 45.0) * 2.0","variable.zrot"]},"head":{"rotation":[0,"math.cos(variable.animationamountblend * 45.0) * 4.0",0]},"tailfin":{"rotation":[0,"math.cos(variable.animationamountblend * 45.0) * -25.75",0]}}},"swim":{"loop":true,"bones":{"body":{"rotation":[0,"math.cos(variable.animationamountblend * 30.0) * 2.0",0]},"head":{"rotation":[0,"math.cos(variable.animationamountblend * 30.0) * 4.0",0]},"tailfin":{"rotation":[0,"math.cos(variable.animationamountblend * 30.0) * -25.75",0]}}}},"animation_controllers":{"general":{"initial_state":"flopping","states":{"flopping":{"animations":["flop"],"transitions":[{"swimming":"query.is_in_water || query.is_levitating"}]},"swimming":{"animations":["swim"],"transitions":[{"flopping":"!query.is_in_water && !query.is_levitating"}]}}}},"render_controllers":["controller.render.cod"],"spawn_egg":{"texture":"spawn_egg","texture_index":45}},"command_block_minecart":{"identifier":"minecraft:command_block_minecart","min_engine_version":"1.8.0","materials":{"default":"minecart"},"textures":{"default":"textures/entity/minecart"},"geometry":{"default":{"bones":[{"name":"bottom","pivot":[0,6,0],"cubes":[{"origin":[-10,-6.5,-1],"size":[20,16,2],"rotation":[90,0,0],"uv":[0,10]}]},{"name":"back","pivot":[0,0,0],"cubes":[{"origin":[-17,2.5,-1],"size":[16,8,2],"rotation":[0,270,0],"uv":[0,0]}],"parent":"bottom"},{"name":"front","pivot":[0,0,0],"cubes":[{"origin":[1,2.5,-1],"size":[16,8,2],"rotation":[0,90,0],"uv":[0,0]}],"parent":"bottom"},{"name":"right","pivot":[0,0,0],"cubes":[{"origin":[-8,2.5,-8],"size":[16,8,2],"rotation":[0,180,0],"uv":[0,0]}],"parent":"bottom"},{"name":"left","pivot":[0,0,0],"cubes":[{"origin":[-8,2.5,6],"size":[16,8,2],"uv":[0,0]}],"parent":"bottom"}],"texturewidth":64,"textureheight":32}},"scripts":{"pre_animation":["variable.hurt = query.hurt_time - query.frame_alpha;"],"animate":["move"]},"animations":{"move":{"loop":true,"bones":{"bottom":{"position":["variable.rail_offset.x / query.model_scale","variable.rail_offset.y / query.model_scale","variable.rail_offset.z / query.model_scale"],"rotation":["variable.hurt > 0 ? -Math.sin(variable.hurt * 360 / (Math.pi * 2)) * variable.hurt * (((20 * 2 - query.structural_integrity) - query.frame_alpha) < 0 ? 0: (20 * 2 - query.structural_integrity) - query.frame_alpha) / 10 * query.hurt_direction : 0",0,"-variable.rail_rotation.z"]}}}},"render_controllers":["controller.render.minecart"]},"cow":{"identifier":"minecraft:cow","min_engine_version":"1.8.0","materials":{"default":"cow"},"textures":{"default":"textures/entity/cow/cow"},"geometry":{"default":{"visible_bounds_width":2,"visible_bounds_height":1.75,"visible_bounds_offset":[0,0.75,0],"texturewidth":64,"textureheight":32,"bones":[{"name":"body","pivot":[0,19,2],"bind_pose_rotation":[90,0,0],"cubes":[{"origin":[-6,11,-5],"size":[12,18,10],"uv":[18,4]},{"origin":[-2,11,-6],"size":[4,6,1],"uv":[52,0]}]},{"name":"head","parent":"body","pivot":[0,20,-8],"locators":{"lead":[0,20,-8]},"cubes":[{"origin":[-4,16,-14],"size":[8,8,6],"uv":[0,0]},{"origin":[-5,22,-12],"size":[1,3,1],"uv":[22,0]},{"origin":[4,22,-12],"size":[1,3,1],"uv":[22,0]}]},{"name":"leg0","parent":"body","pivot":[-4,12,7],"cubes":[{"origin":[-6,0,5],"size":[4,12,4],"uv":[0,16]}]},{"name":"leg1","parent":"body","mirror":true,"pivot":[4,12,7],"cubes":[{"origin":[2,0,5],"size":[4,12,4],"uv":[0,16]}]},{"name":"leg2","parent":"body","pivot":[-4,12,-6],"cubes":[{"origin":[-6,0,-7],"size":[4,12,4],"uv":[0,16]}]},{"name":"leg3","parent":"body","mirror":true,"pivot":[4,12,-6],"cubes":[{"origin":[2,0,-7],"size":[4,12,4],"uv":[0,16]}]}]}},"animations":{"setup":{"loop":true,"bones":{"body":{"rotation":["-this",0,0]}}},"walk":{"anim_time_update":"query.modified_distance_moved","loop":true,"bones":{"leg0":{"rotation":["math.cos(query.anim_time * 38.17) *  80.0",0,0]},"leg1":{"rotation":["math.cos(query.anim_time * 38.17) * -80.0",0,0]},"leg2":{"rotation":["math.cos(query.anim_time * 38.17) * -80.0",0,0]},"leg3":{"rotation":["math.cos(query.anim_time * 38.17) *  80.0",0,0]}}},"look_at_target":{"loop":true,"bones":{"head":{"relative_to":{"rotation":"entity"},"rotation":["query.target_x_rotation - this","query.target_y_rotation - this",0]}}},"baby_transform":{"loop":true,"bones":{"head":{"position":[0,4,4],"scale":2}}}},"scripts":{"animate":["setup",{"walk":"query.modified_move_speed"},"look_at_target",{"baby_transform":"query.is_baby"}]},"render_controllers":["controller.render.cow"],"spawn_egg":{"texture":"spawn_egg","texture_index":1}},"creeper":{"identifier":"minecraft:creeper","min_engine_version":"1.8.0","materials":{"default":"creeper","charged":"charged_creeper"},"textures":{"default":"textures/entity/creeper/creeper","charged":"textures/entity/creeper/creeper_armor"},"geometry":{"default":{"visible_bounds_width":1,"visible_bounds_height":2,"visible_bounds_offset":[0,0.75,0],"texturewidth":64,"textureheight":32,"bones":[{"name":"body","cubes":[{"origin":[-4,6,-2],"size":[8,12,4],"uv":[16,16]}]},{"name":"head","parent":"body","pivot":[0,18,0],"cubes":[{"origin":[-4,18,-4],"size":[8,8,8],"uv":[0,0]}]},{"name":"leg0","parent":"body","pivot":[-2,6,4],"cubes":[{"origin":[-4,0,2],"size":[4,6,4],"uv":[0,16]}]},{"name":"leg1","parent":"body","pivot":[2,6,4],"cubes":[{"origin":[0,0,2],"size":[4,6,4],"uv":[0,16]}]},{"name":"leg2","parent":"body","pivot":[-2,6,-4],"cubes":[{"origin":[-4,0,-6],"size":[4,6,4],"uv":[0,16]}]},{"name":"leg3","parent":"body","pivot":[2,6,-4],"cubes":[{"origin":[0,0,-6],"size":[4,6,4],"uv":[0,16]}]}]},"charged":{"visible_bounds_width":1,"visible_bounds_height":2,"visible_bounds_offset":[0,0.75,0],"texturewidth":64,"textureheight":32,"bones":[{"name":"body","cubes":[{"origin":[-4,6,-2],"size":[8,12,4],"uv":[16,16]}],"inflate":2},{"name":"head","parent":"body","pivot":[0,18,0],"cubes":[{"origin":[-4,18,-4],"size":[8,8,8],"uv":[0,0]}],"inflate":2},{"name":"leg0","parent":"body","pivot":[-2,6,4],"cubes":[{"origin":[-4,0,2],"size":[4,6,4],"uv":[0,16]}],"inflate":2},{"name":"leg1","parent":"body","pivot":[2,6,4],"cubes":[{"origin":[0,0,2],"size":[4,6,4],"uv":[0,16]}],"inflate":2},{"name":"leg2","parent":"body","pivot":[-2,6,-4],"cubes":[{"origin":[-4,0,-6],"size":[4,6,4],"uv":[0,16]}],"inflate":2},{"name":"leg3","parent":"body","pivot":[2,6,-4],"cubes":[{"origin":[0,0,-6],"size":[4,6,4],"uv":[0,16]}],"inflate":2}]}},"spawn_egg":{"texture":"spawn_egg","texture_index":6},"scripts":{"pre_animation":["variable.wobble = Math.sin(query.swell_amount * 5730) * query.swell_amount * 0.01 + 1.0;","variable.swelling_scale1 = (Math.pow(Math.clamp(query.swell_amount, 0.0, 1.0), 4.0) * 0.4 + 1.0) * variable.wobble;","variable.swelling_scale2 = (Math.pow(Math.clamp(query.swell_amount, 0.0, 1.0), 4.0) * 0.1 + 1.0) / variable.wobble;","variable.leg_rot = Math.cos(query.modified_distance_moved * 38.17326) * 80.22 * query.modified_move_speed;","variable.flash = Math.mod(Math.Round(query.swell_amount * 10.0), 2.0);"]},"animations":{"creeper_head":{"loop":true,"bones":{"head":{"relative_to":{"rotation":"entity"},"rotation":["query.target_x_rotation - this","query.target_y_rotation - this",0]}}},"creeper_legs":{"loop":true,"bones":{"leg0":{"rotation":["variable.leg_rot - this",0,0]},"leg1":{"rotation":["-variable.leg_rot - this",0,0]},"leg2":{"rotation":["-variable.leg_rot - this",0,0]},"leg3":{"rotation":["variable.leg_rot - this",0,0]}}},"creeper_swelling":{"loop":true,"bones":{"body":{"scale":["variable.swelling_scale1","variable.swelling_scale2","variable.swelling_scale1"]},"head":{"scale":["variable.swelling_scale1","variable.swelling_scale2","variable.swelling_scale1"]},"leg0":{"scale":["variable.swelling_scale1","variable.swelling_scale2","variable.swelling_scale1"]},"leg1":{"scale":["variable.swelling_scale1","variable.swelling_scale2","variable.swelling_scale1"]},"leg2":{"scale":["variable.swelling_scale1","variable.swelling_scale2","variable.swelling_scale1"]},"leg3":{"scale":["variable.swelling_scale1","variable.swelling_scale2","variable.swelling_scale1"]}}}},"animation_controllers":{"creeper_head":{"initial_state":"default","states":{"default":{"animations":["creeper_head"]}}},"creeper_legs":{"initial_state":"default","states":{"default":{"animations":["creeper_legs"]}}},"creeper_swelling":{"initial_state":"default","states":{"default":{"animations":["creeper_swelling"]}}}},"render_controllers":["controller.render.creeper","controller.render.creeper_armor"]},"dolphin":{"identifier":"minecraft:dolphin","materials":{"default":"dolphin"},"textures":{"default":"textures/entity/dolphin"},"geometry":{"default":{"bones":[{"pivot":[0,0,-3],"locators":{"lead":[0,0,0]},"cubes":[{"origin":[-4,0,-9],"size":[8,7,6],"uv":[0,0],"inflate":0,"mirror":false}],"name":"head","parent":"body"},{"pivot":[0,0,-3],"cubes":[{"origin":[-4,0,-3],"size":[8,7,13],"uv":[0,13],"inflate":0,"mirror":false}],"name":"body"},{"pivot":[0,2.5,11],"cubes":[{"origin":[-2,0,10],"size":[4,5,11],"uv":[0,33],"inflate":0,"mirror":false}],"name":"tail","parent":"body"},{"pivot":[0,2.5,20],"cubes":[{"origin":[-5,2,19],"size":[10,1,6],"uv":[0,49],"inflate":0,"mirror":false}],"name":"tail_fin","parent":"tail"},{"pivot":[0,7,2],"rotation":[-30,0,0],"cubes":[{"origin":[-0.5,6.25,1],"size":[1,5,4],"uv":[29,0],"inflate":0,"mirror":false}],"name":"back_fin","parent":"body"},{"pivot":[3,1,-1],"rotation":[0,-25,20],"cubes":[{"origin":[3,1,-2.5],"size":[8,1,4],"uv":[40,0],"inflate":0,"mirror":false}],"name":"left_fin","parent":"body"},{"pivot":[-3,1,-1],"rotation":[0,25,-20],"cubes":[{"origin":[-11,1,-2.5],"size":[8,1,4],"uv":[40,6],"inflate":0,"mirror":false}],"name":"right_fin","parent":"body"},{"pivot":[0,0,-13],"cubes":[{"origin":[-1,0,-13],"size":[2,2,4],"uv":[0,13],"inflate":0,"mirror":false}],"name":"nose","parent":"head"}],"texturewidth":64,"textureheight":64}},"animations":{"move":{"loop":true,"bones":{"body":{"rotation":["query.target_x_rotation - 2.865 + (-2.865 * math.cos(query.life_time * 343.8))","query.target_y_rotation",0]},"left_fin":{"rotation":[0,0,"17.19 * math.cos(query.life_time * 229.2) + 22.92"]},"right_fin":{"rotation":[0,0,"-17.19 * math.cos(query.life_time * 229.2) - 22.92"]},"tail":{"rotation":["-5.73 * math.cos(query.life_time * 343.8)",0,0]},"tail_fin":{"rotation":["-11.46 * math.cos(query.life_time * 343.8)",0,0]}}}},"animation_controllers":{"general":{"initial_state":"default","states":{"default":{"animations":["move"]}}}},"render_controllers":["controller.render.dolphin"],"spawn_egg":{"texture":"spawn_egg","texture_index":49}},"donkey":{"identifier":"minecraft:donkey","textures":{"base_brown":"textures/entity/horse/horse_brown","base_white":"textures/entity/horse/horse_white","base_chestnut":"textures/entity/horse/horse_chestnut","base_creamy":"textures/entity/horse/horse_creamy","base_black":"textures/entity/horse/horse_black","base_gray":"textures/entity/horse/horse_gray","base_darkbrown":"textures/entity/horse/horse_darkbrown","markings_none":"textures/entity/horse/horse_markings_none","markings_white":"textures/entity/horse/horse_markings_white","markings_whitefield":"textures/entity/horse/horse_markings_whitefield","markings_whitedots":"textures/entity/horse/horse_markings_whitedots","markings_blackdots":"textures/entity/horse/horse_markings_blackdots","mule":"textures/entity/horse/mule","donkey":"textures/entity/horse/donkey","skeleton":"textures/entity/horse/horse_skeleton","zombie":"textures/entity/horse/horse_zombie","armor_none":"textures/entity/horse/armor/horse_armor_none","armor_leather":"textures/entity/horse/armor/horse_armor_leather","armor_iron":"textures/entity/horse/armor/horse_armor_iron","armor_gold":"textures/entity/horse/armor/horse_armor_gold","armor_diamond":"textures/entity/horse/armor/horse_armor_diamond"},"geometry":{"default":{"visible_bounds_width":2,"visible_bounds_height":3,"visible_bounds_offset":[0,1,0],"texturewidth":128,"textureheight":128,"bones":[{"name":"Body","pivot":[0,13,9],"rotation":[0,0,0],"cubes":[{"origin":[-5,11,-10],"size":[10,10,24],"uv":[0,34]}]},{"name":"TailA","pivot":[0,21,14],"rotation":[-65,0,0],"cubes":[{"origin":[-1,20,14],"size":[2,2,3],"uv":[44,0]}]},{"name":"TailB","pivot":[0,21,14],"rotation":[-65,0,0],"cubes":[{"origin":[-1.5,19,17],"size":[3,4,7],"uv":[38,7]}]},{"name":"TailC","pivot":[0,21,14],"rotation":[-80.34,0,0],"cubes":[{"origin":[-1.5,21.5,23],"size":[3,4,7],"uv":[24,3]}]},{"name":"Leg1A","pivot":[4,15,11],"rotation":[0,0,0],"cubes":[{"origin":[1.5,8,8.5],"size":[4,9,5],"uv":[78,29]}]},{"name":"Leg1B","pivot":[4,8,11],"rotation":[0,0,0],"cubes":[{"origin":[2,3,9.5],"size":[3,5,3],"uv":[78,43]}]},{"name":"Leg1C","pivot":[4,8,11],"rotation":[0,0,0],"cubes":[{"origin":[1.5,-0.1,9],"size":[4,3,4],"uv":[78,51]}]},{"name":"Leg2A","pivot":[-4,15,11],"rotation":[0,0,0],"cubes":[{"origin":[-5.5,8,8.5],"size":[4,9,5],"uv":[96,29]}]},{"name":"Leg2B","pivot":[-4,8,11],"rotation":[0,0,0],"cubes":[{"origin":[-5,3,9.5],"size":[3,5,3],"uv":[96,43]}]},{"name":"Leg2C","pivot":[-4,8,11],"rotation":[0,0,0],"cubes":[{"origin":[-5.5,-0.1,9],"size":[4,3,4],"uv":[96,51]}]},{"name":"Leg3A","pivot":[4,15,-8],"rotation":[0,0,0],"cubes":[{"origin":[2.1,8,-10.1],"size":[3,8,4],"uv":[44,29]}]},{"name":"Leg3B","pivot":[4,8,-8],"rotation":[0,0,0],"cubes":[{"origin":[2.1,3,-9.6],"size":[3,5,3],"uv":[44,41]}]},{"name":"Leg3C","pivot":[4,8,-8],"rotation":[0,0,0],"cubes":[{"origin":[1.6,-0.1,-10.1],"size":[4,3,4],"uv":[44,51]}]},{"name":"Leg4A","pivot":[-4,15,-8],"rotation":[0,0,0],"cubes":[{"origin":[-5.1,8,-10.1],"size":[3,8,4],"uv":[60,29]}]},{"name":"Leg4B","pivot":[-4,8,-8],"rotation":[0,0,0],"cubes":[{"origin":[-5.1,3,-9.6],"size":[3,5,3],"uv":[60,41]}]},{"name":"Leg4C","pivot":[-4,8,-8],"rotation":[0,0,0],"cubes":[{"origin":[-5.6,-0.1,-10.1],"size":[4,3,4],"uv":[60,51]}]},{"name":"Head","pivot":[0,20,-10],"rotation":[30,0,0],"cubes":[{"origin":[-2.5,25,-11.5],"size":[5,5,7],"uv":[0,0]}]},{"name":"UMouth","pivot":[0,20.05,-10],"rotation":[30,0,0],"cubes":[{"origin":[-2,27.05,-17],"size":[4,3,6],"uv":[24,18]}]},{"name":"LMouth","pivot":[0,20,-10],"rotation":[30,0,0],"cubes":[{"origin":[-2,25,-16.5],"size":[4,2,5],"uv":[24,27]}]},{"name":"Ear1","pivot":[0,20,-10],"rotation":[30,0,0],"cubes":[{"origin":[0.45,29,-6],"size":[2,3,1],"uv":[0,0]}]},{"name":"Ear2","pivot":[0,20,-10],"rotation":[30,0,0],"cubes":[{"origin":[-2.45,29,-6],"size":[2,3,1],"uv":[0,0]}]},{"name":"MuleEarL","pivot":[0,20,-10],"rotation":[30,0,15],"cubes":[{"origin":[-2,29,-6],"size":[2,7,1],"uv":[0,12]}]},{"name":"MuleEarR","pivot":[0,20,-10],"rotation":[30,0,-15],"cubes":[{"origin":[0,29,-6],"size":[2,7,1],"uv":[0,12]}]},{"name":"Neck","pivot":[0,20,-10],"rotation":[30,0,0],"cubes":[{"origin":[-2.05,15.8,-12],"size":[4,14,8],"uv":[0,12]}]},{"name":"Bag1","pivot":[-7.5,21,10],"rotation":[0,90,0],"cubes":[{"origin":[-10.5,13,10],"size":[8,8,3],"uv":[0,34]}]},{"name":"Bag2","pivot":[4.5,21,10],"rotation":[0,90,0],"cubes":[{"origin":[1.5,13,10],"size":[8,8,3],"uv":[0,47]}]},{"name":"Saddle","pivot":[0,22,2],"rotation":[0,0,0],"cubes":[{"origin":[-5,21,-1],"size":[10,1,8],"uv":[80,0]}]},{"name":"SaddleB","pivot":[0,22,2],"rotation":[0,0,0],"cubes":[{"origin":[-1.5,22,-1],"size":[3,1,2],"uv":[106,9]}]},{"name":"SaddleC","pivot":[0,22,2],"rotation":[0,0,0],"cubes":[{"origin":[-4,22,5],"size":[8,1,2],"uv":[80,9]}]},{"name":"SaddleL2","pivot":[5,21,2],"rotation":[0,0,0],"cubes":[{"origin":[4.5,13,1],"size":[1,2,2],"uv":[74,0]}]},{"name":"SaddleL","pivot":[5,21,2],"rotation":[0,0,0],"cubes":[{"origin":[4.5,15,1.5],"size":[1,6,1],"uv":[70,0]}]},{"name":"SaddleR2","pivot":[-5,21,2],"rotation":[0,0,0],"cubes":[{"origin":[-5.5,13,1],"size":[1,2,2],"uv":[74,4]}]},{"name":"SaddleR","pivot":[-5,21,2],"rotation":[0,0,0],"cubes":[{"origin":[-5.5,15,1.5],"size":[1,6,1],"uv":[80,0]}]},{"name":"SaddleMouthL","pivot":[0,20,-10],"rotation":[30,0,0],"cubes":[{"origin":[1.5,26,-14],"size":[1,2,2],"uv":[74,13]}]},{"name":"SaddleMouthR","pivot":[0,20,-10],"rotation":[30,0,0],"cubes":[{"origin":[-2.5,26,-14],"size":[1,2,2],"uv":[74,13]}]},{"name":"SaddleMouthLine","pivot":[0,20,-10],"rotation":[0,0,0],"cubes":[{"origin":[2.6,23,-16],"size":[0,3,16],"uv":[44,10]}]},{"name":"SaddleMouthLineR","pivot":[0,20,-10],"rotation":[0,0,0],"cubes":[{"origin":[-2.6,23,-16],"size":[0,3,16],"uv":[44,5]}]},{"name":"Mane","pivot":[0,20,-10],"rotation":[30,0,0],"cubes":[{"origin":[-1,15.5,-5],"size":[2,16,4],"uv":[58,0]}]},{"name":"HeadSaddle","pivot":[0,20,-10],"rotation":[30,0,0],"cubes":[{"origin":[-2.5,25.1,-17],"size":[5,5,12],"uv":[80,12],"inflate":0.05}]}]}},"spawn_egg":{"texture":"spawn_egg","texture_index":30}},"dragon_fireball":{"identifier":"minecraft:dragon_fireball","materials":{"default":"fireball"},"textures":{"default":"textures/entity/enderdragon/dragon_fireball"},"geometry":{"default":{"bones":[{"name":"body","pivot":[0,0,0],"cubes":[{"origin":[-8,-4,0],"size":[16,16,0],"uv":{"south":{"uv":[0,0]}}}]}],"texturewidth":16,"textureheight":16}},"animations":{"face_player":{"loop":true,"bones":{"body":{"rotation":["query.camera_rotation(0)","query.camera_rotation(1)",0]}}}},"scripts":{"scale":"2.0","animate":["face_player"]},"render_controllers":["controller.render.fireball"]},"drowned":{"identifier":"minecraft:drowned","min_engine_version":"1.16.0","materials":{"default":"drowned"},"textures":{"default":"textures/entity/zombie/drowned"},"geometry":{"default":{"bones":[{"name":"body","pivot":[0,24,0],"cubes":[{"origin":[-4,12,-2],"size":[8,12,4],"uv":[16,16]}]},{"name":"jacket","parent":"body","pivot":[0,24,0],"cubes":[{"origin":[-4,12,-2],"size":[8,12,4],"uv":[16,32],"inflate":0.5}]},{"name":"head","parent":"body","pivot":[0,24,0],"cubes":[{"origin":[-4,24,-4],"size":[8,8,8],"uv":[0,0],"inflate":0.5}]},{"name":"hat","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-4,24,-4],"size":[8,8,8],"uv":[32,0],"inflate":1}]},{"name":"rightArm","parent":"body","pivot":[-5,22,0],"cubes":[{"origin":[-7,12,-2],"size":[4,12,4],"uv":[0,16]}]},{"name":"leftArm","parent":"body","pivot":[5,22,0],"cubes":[{"origin":[4,12,-2],"size":[4,12,4],"uv":[40,16],"mirror":true}]},{"name":"rightSleeve","parent":"rightArm","pivot":[-5,22,0],"cubes":[{"origin":[-7,12,-2],"size":[4,12,4],"uv":[48,48],"inflate":0.5}]},{"name":"leftSleeve","parent":"leftArm","pivot":[5,22,0],"cubes":[{"origin":[4,12,-2],"size":[4,12,4],"uv":[40,32],"inflate":0.5,"mirror":true}]},{"name":"rightLeg","parent":"body","pivot":[-1.9,12,0],"cubes":[{"origin":[-4.05,0,-2],"size":[4,12,4],"uv":[16,48]}]},{"name":"leftLeg","parent":"body","pivot":[1.9,12,0],"cubes":[{"origin":[0.05,0,-2],"size":[4,12,4],"uv":[32,48],"mirror":true}]},{"name":"rightPants","parent":"rightLeg","pivot":[-1.9,12,0],"cubes":[{"origin":[-4.25,0,-2],"size":[4,12,4],"uv":[0,48],"inflate":0.25}]},{"name":"leftPants","parent":"leftLeg","pivot":[1.9,12,0],"cubes":[{"origin":[0.25,0,-2],"size":[4,12,4],"uv":[0,32],"inflate":0.25,"mirror":true}]},{"name":"waist","parent":"body","pivot":[0,12,0]},{"name":"rightItem","parent":"rightArm","pivot":[-6,15,1]},{"name":"leftItem","parent":"leftArm","pivot":[6,15,1]}],"visible_bounds_width":2.5,"visible_bounds_height":2.5,"visible_bounds_offset":[0,1.25,0],"texturewidth":64,"textureheight":64}},"scripts":{"pre_animation":["variable.tcos0 = (Math.cos(query.modified_distance_moved * 38.17) * query.modified_move_speed / variable.gliding_speed_value) * 57.3;"],"animate":[{"humanoid_big_head":"query.is_baby"},"look_at_target","move",{"riding.arms":"query.is_riding"},{"riding.legs":"query.is_riding"},"holding",{"charging":"query.is_charging"},"attack_controller",{"brandish_spear":"variable.is_brandishing_spear"},"bob",{"damage_nearby_mobs":"variable.damage_nearby_mobs"},{"use_item_progress":"( variable.use_item_interval_progress > 0.0 ) || ( variable.use_item_startup_progress > 0.0 )"},{"swimming":"variable.swim_amount > 0.0"}]},"animations":{"humanoid_big_head":{"loop":true,"bones":{"head":{"scale":1.4}}},"look_at_target_default":{"loop":true,"bones":{"head":{"relative_to":{"rotation":"entity"},"rotation":["query.target_x_rotation","query.target_y_rotation",0]}}},"look_at_target_gliding":{"loop":true,"bones":{"head":{"rotation":[-45,"query.target_y_rotation",0]}}},"look_at_target_swimming":{"loop":true,"bones":{"head":{"rotation":["math.lerp(query.target_x_rotation, -45.0, variable.swim_amount)","query.target_y_rotation",0]}}},"move":{"loop":true,"bones":{"leftarm":{"rotation":["variable.tcos0",0,0]},"leftleg":{"rotation":["variable.tcos0 * -1.4",0,0]},"rightarm":{"rotation":["-variable.tcos0",0,0]},"rightleg":{"rotation":["variable.tcos0 * 1.4",0,0]}}},"riding.arms":{"loop":true,"bones":{"leftarm":{"rotation":[-36,0,0]},"rightarm":{"rotation":[-36,0,0]}}},"riding.legs":{"loop":true,"bones":{"leftleg":{"rotation":["-72.0 - this","-18.0 - this","-this"]},"rightleg":{"rotation":["-72.0 - this","18.0 - this","-this"]}}},"holding":{"loop":true,"bones":{"leftarm":{"rotation":["variable.is_holding_left ? (-this * 0.5 - 18.0) : 0.0",0,0]},"rightarm":{"rotation":["variable.is_holding_right ? (-this * 0.5 - 18.0) : 0.0",0,0]}}},"brandish_spear":{"loop":true,"bones":{"rightarm":{"rotation":["this * -0.5 - 157.5 - 22.5 * variable.charge_amount","-this",0]}}},"charging":{"loop":true,"bones":{"rightarm":{"rotation":["22.5 * variable.charge_amount - this","-this",0]}}},"bob":{"loop":true,"bones":{"leftarm":{"rotation":[0,0,"((math.cos(query.life_time * 103.2) * 2.865) + 2.865) *-1.0"]},"rightarm":{"rotation":[0,0,"(math.cos(query.life_time * 103.2) * 2.865) + 2.865"]}}},"damage_nearby_mobs":{"loop":true,"bones":{"leftarm":{"rotation":["-45.0-this","-this","-this"]},"leftleg":{"rotation":["45.0-this","-this","-this"]},"rightarm":{"rotation":["45.0-this","-this","-this"]},"rightleg":{"rotation":["-45.0-this","-this","-this"]}}},"use_item_progress":{"loop":true,"bones":{"rightarm":{"rotation":["variable.use_item_startup_progress * -60.0 + variable.use_item_interval_progress * 11.25","variable.use_item_startup_progress * -22.5 + variable.use_item_interval_progress * 11.25","variable.use_item_startup_progress * -5.625 + variable.use_item_interval_progress * 11.25"]}}},"zombie_attack_bare_hand":{"loop":true,"bones":{"leftarm":{"rotation":["-90.0 - ((math.sin(variable.attack_time * 180.0) * 57.3) * 1.2 - (math.sin((1.0 - (1.0 - variable.attack_time) * (1.0 - variable.attack_time)) * 180.0) * 57.3) * 0.4) - (math.sin(query.life_time * 76.776372) * 2.865) - this","5.73 - ((math.sin(variable.attack_time * 180.0) * 57.3) * 0.6) - this","math.cos(query.life_time * 103.13244) * -2.865 - 2.865 - this"]},"rightarm":{"rotation":["90.0 * (variable.is_brandishing_spear - 1.0) - ((math.sin(variable.attack_time * 180.0) * 57.3) * 1.2 - (math.sin((1.0 - (1.0 - variable.attack_time) * (1.0 - variable.attack_time)) * 180.0) * 57.3) * 0.4) + (math.sin(query.life_time * 76.776372) * 2.865) - this","(math.sin(variable.attack_time * 180.0) * 57.3) * 0.6 - 5.73 - this","math.cos(query.life_time * 103.13244) * 2.865 + 2.865 - this"]}}},"attack_rotations":{"loop":true,"bones":{"body":{"rotation":[0,"math.sin(math.sqrt(variable.attack_time) * 360.0) * 11.46",0]},"leftarm":{"rotation":["-(math.sin((1.0 - (1.0 - variable.attack_time) * (1.0 - variable.attack_time)) * 180.0) + math.sin(variable.attack_time * 180.0)) * 5.73",0,0]},"rightarm":{"rotation":["-(math.sin((1.0 - (1.0 - variable.attack_time) * (1.0 - variable.attack_time)) * 180.0) * 34.38 + math.sin(variable.attack_time * 180.0) * 28.65) * (variable.is_brandishing_spear ? -2.5 : 1.0 )","variable.is_brandishing_spear ? 0.0 : math.sin(math.sqrt(variable.attack_time) * 360.0) * 22.92",0]}}},"swimming":{"loop":true,"bones":{"body":{"position":[0,"variable.swim_amount * -10.0 - this","variable.swim_amount * 9.0 - this"],"rotation":["variable.swim_amount * (90.0 + query.target_x_rotation)",0,0]},"leftarm":{"rotation":["math.lerp(this, -180.0, variable.swim_amount) - (variable.swim_amount * ((math.sin(variable.attack_time * 180.0) * 57.3) * 1.2 - (math.sin((1.0 - (1.0 - variable.attack_time) * (1.0 - variable.attack_time)) * 180.0) * 57.3) * 0.4)) - (variable.swim_amount * (math.sin(query.life_time * 76.776372) * 2.865)) - this","math.lerp(this, 14.325, variable.swim_amount) - this","math.lerp(this, 14.325, variable.swim_amount) - (variable.swim_amount * (math.cos(query.life_time * 103.13244) * 2.865 + 2.865)) - this"]},"leftleg":{"rotation":["math.lerp(this, math.cos(query.life_time * 390.0 + 180.0) * 0.3, variable.swim_amount)",0,0]},"rightarm":{"rotation":["math.lerp(this, -180.0, variable.swim_amount) - (variable.swim_amount * ((math.sin(variable.attack_time * 180.0) * 57.3) * 1.2 - (math.sin((1.0 - (1.0 - variable.attack_time) * (1.0 - variable.attack_time)) * 180.0) * 57.3) * 0.4)) + (variable.swim_amount * (math.sin(query.life_time * 76.776372) * 2.865)) - this","math.lerp(this, 14.325, variable.swim_amount) - this","math.lerp(this, -14.325, variable.swim_amount) + (variable.swim_amount * (math.cos(query.life_time * 103.13244) * 2.865 + 2.865)) - this"]},"rightleg":{"rotation":["math.lerp(this, math.cos(query.life_time * 390.0) * 0.3, variable.swim_amount)",0,0]}}}},"render_controllers":["controller.render.drowned"],"enable_attachables":true,"spawn_egg":{"texture":"spawn_egg","texture_index":48},"animation_controllers":{"look_at_target":{"initial_state":"default","states":{"default":{"animations":["look_at_target_default"],"transitions":[{"gliding":"query.is_gliding"},{"swimming":"query.is_swimming"}]},"gliding":{"animations":["look_at_target_gliding"],"transitions":[{"swimming":"query.is_swimming"},{"default":"!query.is_gliding"}]},"swimming":{"animations":["look_at_target_swimming"],"transitions":[{"gliding":"query.is_gliding"},{"default":"!query.is_swimming"}]}}},"attack_controller":{"initial_state":"default","states":{"default":{"animations":["zombie_attack_bare_hand"],"transitions":[{"one_hand_attack":"query.is_item_equipped(\'off_hand\')"},{"spear_attack":"variable.is_brandishing_spear && !query.is_item_equipped(\'off_hand\')"}]},"one_hand_attack":{"animations":["attack_rotations"],"transitions":[{"default":"!query.is_item_equipped(\'off_hand\')"},{"spear_attack":"variable.is_brandishing_spear && !query.is_item_equipped(\'off_hand\')"}]},"spear_attack":{"animations":["zombie_attack_bare_hand","attack_rotations"],"transitions":[{"default":"!query.is_item_equipped(\'off_hand\') && !variable.is_brandishing_spear"},{"one_hand_attack":"query.is_item_equipped(\'off_hand\')"}]}}}}},"egg":{"identifier":"minecraft:egg","materials":{"default":"egg"},"textures":{"default":"textures/items/egg"},"geometry":{"default":{"bones":[{"name":"body","pivot":[0,0,0],"cubes":[{"origin":[-8,-8,0],"size":[16,16,0],"uv":[0,0],"rotation":[0,0,0]}]}],"texturewidth":16,"textureheight":16}},"render_controllers":["controller.render.item_sprite"],"animations":{"flying":{"loop":true,"bones":{"body":{"rotation":["query.camera_rotation(0)","query.camera_rotation(1)",0]}}}},"scripts":{"animate":["flying"]}},"elder_guardian":{"identifier":"minecraft:elder_guardian","min_engine_version":"1.8.0","materials":{"default":"guardian","ghost":"guardian_ghost"},"textures":{"default":"textures/entity/guardian","elder":"textures/entity/guardian_elder","beam":"textures/entity/guardian_beam"},"geometry":{"default":{"visible_bounds_width":3.5,"visible_bounds_height":2,"visible_bounds_offset":[0,0.5,0],"texturewidth":64,"textureheight":64,"bones":[{"name":"head","pivot":[0,0,0],"mirror":true,"cubes":[{"mirror":false,"origin":[-6,2,-8],"size":[12,12,16],"uv":[0,0]},{"mirror":false,"origin":[-8,2,-6],"size":[2,12,12],"uv":[0,28]},{"origin":[6,2,-6],"size":[2,12,12],"uv":[0,28]},{"origin":[-6,14,-6],"size":[12,2,12],"uv":[16,40]},{"origin":[-6,0,-6],"size":[12,2,12],"uv":[16,40]}]},{"name":"eye","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,6,0],"size":[2,2,1],"uv":[8,0]}]},{"name":"tailpart0","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-2,6,7],"size":[4,4,8],"uv":[40,0]}]},{"name":"tailpart1","parent":"tailpart0","pivot":[0,24,0],"cubes":[{"origin":[0,7,0],"size":[3,3,7],"uv":[0,54]}]},{"name":"tailpart2","parent":"tailpart1","pivot":[0,24,0],"cubes":[{"origin":[0,8,0],"size":[2,2,6],"uv":[41,32]},{"origin":[1,4.5,3],"size":[1,9,9],"uv":[25,19]}]},{"name":"spikepart0","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,19.5,-1],"size":[2,9,2],"uv":[0,0]}]},{"name":"spikepart1","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,19.5,-1],"size":[2,9,2],"uv":[0,0]}]},{"name":"spikepart2","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,19.5,-1],"size":[2,9,2],"uv":[0,0]}]},{"name":"spikepart3","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,19.5,-1],"size":[2,9,2],"uv":[0,0]}]},{"name":"spikepart4","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,19.5,-1],"size":[2,9,2],"uv":[0,0]}]},{"name":"spikepart5","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,19.5,-1],"size":[2,9,2],"uv":[0,0]}]},{"name":"spikepart6","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,19.5,-1],"size":[2,9,2],"uv":[0,0]}]},{"name":"spikepart7","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,19.5,-1],"size":[2,9,2],"uv":[0,0]}]},{"name":"spikepart8","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,19.5,-1],"size":[2,9,2],"uv":[0,0]}]},{"name":"spikepart9","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,19.5,-1],"size":[2,9,2],"uv":[0,0]}]},{"name":"spikepart10","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,19.5,-1],"size":[2,9,2],"uv":[0,0]}]},{"name":"spikepart11","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,19.5,-1],"size":[2,9,2],"uv":[0,0]}]}]},"ghost":{"visible_bounds_width":3.5,"visible_bounds_height":2,"visible_bounds_offset":[0,0.5,0],"texturewidth":64,"textureheight":64,"bones":[{"name":"head","pivot":[0,24,0],"mirror":true,"cubes":[{"mirror":false,"origin":[-6,2,-8],"size":[12,12,16],"uv":[0,0]},{"mirror":false,"origin":[-8,2,-6],"size":[2,12,12],"uv":[0,28]},{"origin":[6,2,-6],"size":[2,12,12],"uv":[0,28]},{"origin":[-6,14,-6],"size":[12,2,12],"uv":[16,40]},{"origin":[-6,0,-6],"size":[12,2,12],"uv":[16,40]}]},{"name":"eye","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,7,0],"size":[2,2,1],"uv":[8,0]}]},{"name":"tailpart0","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-2,6,7],"size":[4,4,8],"uv":[40,0]}]},{"name":"tailpart1","parent":"tailpart0","pivot":[0,24,0],"cubes":[{"origin":[0,7,0],"size":[3,3,7],"uv":[0,54]}]},{"name":"tailpart2","parent":"tailpart1","pivot":[0,24,0],"cubes":[{"origin":[0,8,0],"size":[2,2,6],"uv":[41,32]},{"origin":[1,4.5,3],"size":[1,9,9],"uv":[25,19]}]},{"name":"spikepart0","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,19.5,-1],"size":[2,9,2],"uv":[0,0]}]},{"name":"spikepart1","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,19.5,-1],"size":[2,9,2],"uv":[0,0]}]},{"name":"spikepart2","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,19.5,-1],"size":[2,9,2],"uv":[0,0]}]},{"name":"spikepart3","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,19.5,-1],"size":[2,9,2],"uv":[0,0]}]},{"name":"spikepart4","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,19.5,-1],"size":[2,9,2],"uv":[0,0]}]},{"name":"spikepart5","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,19.5,-1],"size":[2,9,2],"uv":[0,0]}]},{"name":"spikepart6","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,19.5,-1],"size":[2,9,2],"uv":[0,0]}]},{"name":"spikepart7","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,19.5,-1],"size":[2,9,2],"uv":[0,0]}]},{"name":"spikepart8","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,19.5,-1],"size":[2,9,2],"uv":[0,0]}]},{"name":"spikepart9","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,19.5,-1],"size":[2,9,2],"uv":[0,0]}]},{"name":"spikepart10","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,19.5,-1],"size":[2,9,2],"uv":[0,0]}]},{"name":"spikepart11","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,19.5,-1],"size":[2,9,2],"uv":[0,0]}]}]}},"animations":{"setup":{"loop":true,"bones":{"spikepart0":{"rotation":["-45.0 - this","0.0 - this","0.0 - this"]},"spikepart1":{"rotation":["45.0 - this","0.0 - this","0.0 - this"]},"spikepart10":{"rotation":["0.0 - this","0.0 - this"," 135.0 - this"]},"spikepart11":{"rotation":["0.0 - this","0.0 - this"," -135.0 - this"]},"spikepart2":{"rotation":["0.0 - this","0.0 - this","45.0 - this"]},"spikepart3":{"rotation":["0.0 - this","0.0  - this","-45.0 - this"]},"spikepart4":{"rotation":["90.0 - this","45.0 - this"," 0.0 - this"]},"spikepart5":{"rotation":["90.0 - this","-45.0 - this"," 0.0 - this"]},"spikepart6":{"rotation":["90.0 - this","-135.0 - this","0.0 - this"]},"spikepart7":{"rotation":["90.0 - this","135.0 - this"," 0.0 - this"]},"spikepart8":{"rotation":["-135.0 - this","0.0 - this"," 0.0 - this"]},"spikepart9":{"rotation":["135.0 - this","0.0 - this"," 0.0 - this"]}}},"spikes":{"loop":true,"bones":{"spikepart0":{"position":["-this","24 + -8 * (1 + math.cos(query.life_time * 20 * 1.5) * 0.01 + (variable.spike_extension + variable.spike_shake)) - this","8 * (1 + math.cos(query.life_time * 20 * 1.5) * 0.01 - (variable.spike_extension + variable.spike_shake)) - this"]},"spikepart1":{"position":["-this","24 + -8 * (1 + math.cos(query.life_time * 20 * 1.5 + 1) * 0.01 + (variable.spike_extension + variable.spike_shake)) - this","-8 * (1 + math.cos(query.life_time * 20 * 1.5 + 1) * 0.01 - (variable.spike_extension + variable.spike_shake)) - this"]},"spikepart10":{"position":["8 * (1 + math.cos(query.life_time * 20 * 1.5 + 10) * 0.01 - (variable.spike_extension + variable.spike_shake)) - this","-8 + 8 * (1 + math.cos(query.life_time * 20 * 1.5 + 10) * 0.01 + (variable.spike_extension + variable.spike_shake)) - this","-this"]},"spikepart11":{"position":["-8 * (1 + math.cos(query.life_time * 20 * 1.5 + 11) * 0.01 - (variable.spike_extension + variable.spike_shake)) - this","-8 + 8 * (1 + math.cos(query.life_time * 20 * 1.5 + 11) * 0.01 + (variable.spike_extension + variable.spike_shake)) - this","-this"]},"spikepart2":{"position":["8 * (1 + math.cos(query.life_time * 20 * 1.5 + 2) * 0.01 - (variable.spike_extension + variable.spike_shake)) - this","24 + -8 * (1 + math.cos(query.life_time * 20 * 1.5 + 2) * 0.01 + (variable.spike_extension + variable.spike_shake)) - this","-this"]},"spikepart3":{"position":["-8 * (1 + math.cos(query.life_time * 20 * 1.5 + 3) * 0.01 - (variable.spike_extension + variable.spike_shake)) - this","24 + -8 * (1 + math.cos(query.life_time * 20 * 1.5 + 3) * 0.01 + (variable.spike_extension + variable.spike_shake)) - this",0]},"spikepart4":{"position":["-8 * (1 + math.cos(query.life_time * 20 * 1.5 + 4) * 0.01 - (variable.spike_extension - variable.spike_shake)) - this","8 - this","-8 * (1 + math.cos(query.life_time * 20 * 1.5 + 4) * 0.01 - (variable.spike_extension - variable.spike_shake)) - this"]},"spikepart5":{"position":["8 * (1 + math.cos(query.life_time * 20 * 1.5 + 5) * 0.01 - (variable.spike_extension - variable.spike_shake)) - this","8 - this","-8 * (1 + math.cos(query.life_time * 20 * 1.5 + 5) * 0.01 - (variable.spike_extension - variable.spike_shake)) - this"]},"spikepart6":{"position":["8 * (1 + math.cos(query.life_time * 20 * 1.5 + 6) * 0.01 - (variable.spike_extension - variable.spike_shake)) - this","8 - this","8 * (1 + math.cos(query.life_time * 20 * 1.5 + 6) * 0.01 - (variable.spike_extension - variable.spike_shake)) - this"]},"spikepart7":{"position":["-8 * (1 + math.cos(query.life_time * 20 * 1.5 + 7) * 0.01 - (variable.spike_extension - variable.spike_shake)) - this","8 - this","8 * (1 + math.cos(query.life_time * 20 * 1.5 + 7) * 0.01 - (variable.spike_extension - variable.spike_shake)) - this"]},"spikepart8":{"position":["-this","-8  + 8 * (1 + math.cos(query.life_time * 20 * 1.5 + 8) * 0.01 + (variable.spike_extension + variable.spike_shake)) - this","8 * (1 + math.cos(query.life_time * 20 * 1.5 + 8) * 0.01 - (variable.spike_extension + variable.spike_shake)) - this"]},"spikepart9":{"position":["-this","-8 + 8 * (1 + math.cos(query.life_time * 20 * 1.5 + 9) * 0.01 + (variable.spike_extension + variable.spike_shake)) - this","-8 * (1 + math.cos(query.life_time * 20 * 1.5 + 9) * 0.01 - (variable.spike_extension + variable.spike_shake)) - this"]}}},"swim":{"loop":true,"bones":{"tailpart0":{"rotation":[0,"variable.tail_base_angle * 11.6 - this",0]},"tailpart1":{"position":["-1.5 - this","-0.5 - this","14.0 - this"],"rotation":[0,"variable.tail_base_angle * 22.8 - this",0]},"tailpart2":{"position":["0.5 - this","-0.5 - this","6.0 - this"],"rotation":[0,"variable.tail_base_angle * 34.4 - this",0]}}},"look_at_target":{"loop":true,"bones":{"head":{"relative_to":{"rotation":"entity"},"rotation":["query.target_x_rotation - this","query.target_y_rotation - this",0]}}},"move_eye":{"loop":true,"bones":{"eye":{"position":["query.eye_target_x_rotation - this","24 + query.eye_target_y_rotation - this","-8.25 - this"]}}}},"scripts":{"pre_animation":["variable.spike_shake = Math.sin(query.life_time * 2000)/50;","variable.spike_animation_speed = query.life_time < 0.1 ? 0.0 : (!query.is_in_water ? (Math.round(Math.sin(query.life_time * 2000)) == 0.0 ? (Math.random(0.0, 1.0)) : (variable.spike_animation_speed)) : (query.is_moving ? (variable.spike_animation_speed - variable.spike_animation_speed * 0.06) : (variable.spike_animation_speed + (1.0 - variable.spike_animation_speed) * 0.06)));","variable.spike_extension = (1.0 - variable.spike_animation_speed) * 0.55;","variable.tail_animation_speed = query.life_time < 0.1 ? 0.0 : (!query.is_in_water ? 2.0 : query.is_moving ? (variable.tail_animation_speed < 0.5 ? 4.0 : variable.tail_animation_speed + (0.5 - variable.tail_animation_speed) * 0.1) : variable.tail_animation_speed + (0.125 - variable.tail_animation_speed) * 0.2);","variable.tail_swim = query.life_time < 0.1 ? 0.0 : (variable.tail_swim + variable.tail_animation_speed);","variable.tail_base_angle = Math.sin(variable.tail_swim*20.0);"],"scale":"2.35","animate":["setup","spikes","swim","look_at_target","move_eye"]},"render_controllers":["controller.render.guardian"],"spawn_egg":{"texture":"spawn_egg","texture_index":36}},"ender_dragon":{"identifier":"minecraft:ender_dragon","textures":{"default":"textures/entity/enderdragon/dragon","exploding":"textures/entity/enderdragon/dragon_exploding","beam":"textures/entity/end_crystal/end_crystal_beam"},"geometry":{"default":{"visible_bounds_width":14,"visible_bounds_height":13,"visible_bounds_offset":[0,2,0],"texturewidth":256,"textureheight":256,"bones":[{"name":"head","pivot":[0,24,0],"cubes":[{"origin":[-6,20,-24],"size":[12,5,16],"uv":[176,44]},{"origin":[-8,16,-10],"size":[16,16,16],"uv":[112,30]},{"mirror":true,"origin":[-5,32,-4],"size":[2,4,6],"uv":[0,0]},{"mirror":true,"origin":[-5,25,-22],"size":[2,2,4],"uv":[112,0]},{"origin":[3,32,-4],"size":[2,4,6],"uv":[0,0]},{"origin":[3,25,-22],"size":[2,2,4],"uv":[112,0]}]},{"name":"jaw","pivot":[0,20,-8],"cubes":[{"origin":[-6,16,-24],"size":[12,4,16],"uv":[176,65]}]},{"name":"neck","pivot":[0,24,0],"cubes":[{"origin":[-5,19,-5],"size":[10,10,10],"uv":[192,104]},{"origin":[-1,29,-3],"size":[2,4,6],"uv":[48,0]}]},{"name":"body","pivot":[0,20,8],"cubes":[{"origin":[-12,-4,-8],"size":[24,24,64],"uv":[0,0]},{"origin":[-1,20,-2],"size":[2,6,12],"uv":[220,53]},{"origin":[-1,20,18],"size":[2,6,12],"uv":[220,53]},{"origin":[-1,20,38],"size":[2,6,12],"uv":[220,53]}]},{"name":"wing","pivot":[-12,19,2],"cubes":[{"origin":[-68,15,-2],"size":[56,8,8],"uv":[112,88]},{"origin":[-68,19,4],"size":[56,0,56],"uv":[-56,88]}]},{"name":"wingtip","pivot":[-56,24,0],"cubes":[{"origin":[-112,22,-2],"size":[56,4,4],"uv":[112,136]},{"origin":[-112,24,2],"size":[56,0,56],"uv":[-56,144]}]},{"name":"wing1","pivot":[12,19,2],"cubes":[{"origin":[-44,15,-2],"size":[56,8,8],"uv":[112,88]},{"origin":[-44,19,4],"size":[56,0,56],"uv":[-56,88]}]},{"name":"wingtip1","pivot":[-56,24,0],"cubes":[{"origin":[-112,22,-2],"size":[56,4,4],"uv":[112,136]},{"origin":[-112,24,2],"size":[56,0,56],"uv":[-56,144]}]},{"name":"rearleg","pivot":[-16,8,42],"cubes":[{"origin":[-24,-20,34],"size":[16,32,16],"uv":[0,0]}]},{"name":"rearleg1","pivot":[16,8,42],"cubes":[{"origin":[8,-20,34],"size":[16,32,16],"uv":[0,0]}]},{"name":"frontleg","pivot":[-12,4,2],"cubes":[{"origin":[-16,-16,-2],"size":[8,24,8],"uv":[112,104]}]},{"name":"frontleg1","pivot":[12,4,2],"cubes":[{"origin":[8,-16,-2],"size":[8,24,8],"uv":[112,104]}]},{"name":"rearlegtip","pivot":[0,-8,-4],"cubes":[{"origin":[-6,-38,-4],"size":[12,32,12],"uv":[196,0]}]},{"name":"rearlegtip1","pivot":[0,-8,-4],"cubes":[{"origin":[-6,-38,-4],"size":[12,32,12],"uv":[196,0]}]},{"name":"frontlegtip","pivot":[0,4,-1],"cubes":[{"origin":[-3,-19,-4],"size":[6,24,6],"uv":[226,138]}]},{"name":"frontlegtip1","pivot":[0,4,-1],"cubes":[{"origin":[-3,-19,-4],"size":[6,24,6],"uv":[226,138]}]},{"name":"rearfoot","pivot":[0,-7,4],"cubes":[{"origin":[-9,-13,-16],"size":[18,6,24],"uv":[112,0]}]},{"name":"rearfoot1","pivot":[0,-7,4],"cubes":[{"origin":[-9,-13,-16],"size":[18,6,24],"uv":[112,0]}]},{"name":"frontfoot","pivot":[0,1,0],"cubes":[{"origin":[-4,-3,-12],"size":[8,4,16],"uv":[144,104]}]},{"name":"frontfoot1","pivot":[0,1,0],"cubes":[{"origin":[-4,-3,-12],"size":[8,4,16],"uv":[144,104]}]}]}}},"eye_of_ender":{"identifier":"minecraft:eye_of_ender_signal","materials":{"default":"eye_of_ender_signal"},"textures":{"default":"textures/items/ender_eye"},"geometry":{"default":{"bones":[{"name":"body","pivot":[0,0,0],"cubes":[{"origin":[-8,-8,0],"size":[16,16,0],"uv":[0,0],"rotation":[0,0,0]}]}],"texturewidth":16,"textureheight":16}},"render_controllers":["controller.render.item_sprite"],"animations":{"flying":{"loop":true,"bones":{"body":{"rotation":["query.camera_rotation(0)","query.camera_rotation(1)",0]}}}},"scripts":{"animate":["flying"]}},"ender_pearl":{"identifier":"minecraft:ender_pearl","materials":{"default":"ender_pearl"},"textures":{"default":"textures/items/ender_pearl"},"geometry":{"default":{"bones":[{"name":"body","pivot":[0,0,0],"cubes":[{"origin":[-8,-8,0],"size":[16,16,0],"uv":[0,0],"rotation":[0,0,0]}]}],"texturewidth":16,"textureheight":16}},"render_controllers":["controller.render.item_sprite"],"animations":{"flying":{"loop":true,"bones":{"body":{"rotation":["query.camera_rotation(0)","query.camera_rotation(1)",0]}}}},"scripts":{"animate":["flying"]}},"enderman":{"identifier":"minecraft:enderman","min_engine_version":"1.8.0","materials":{"default":"enderman","invisible":"enderman_invisible"},"textures":{"default":"textures/entity/enderman/enderman"},"geometry":{"default":{"visible_bounds_width":1.5,"visible_bounds_height":3,"visible_bounds_offset":[0,1.5,0],"texturewidth":64,"textureheight":32,"bones":[{"name":"hat","parent":"head","reset":true,"pivot":[0,38,0],"cubes":[{"origin":[-4,37.5,-4],"size":[8,8,8],"uv":[0,16],"inflate":-0.5}],"neverRender":false},{"name":"head","parent":"body","pivot":[0,24,0],"cubes":[{"origin":[-4,24,-4],"size":[8,8,8],"uv":[0,0]}]},{"name":"body","reset":true,"pivot":[0,38,0],"cubes":[{"origin":[-4,26,-2],"size":[8,12,4],"uv":[32,16]}]},{"name":"rightArm","parent":"body","reset":true,"pivot":[-3,36,0],"cubes":[{"origin":[-4,8,-1],"size":[2,30,2],"uv":[56,0]}]},{"name":"rightItem","pivot":[-6,15,1],"neverRender":true,"parent":"rightArm"},{"name":"leftArm","parent":"body","reset":true,"mirror":true,"pivot":[5,36,0],"cubes":[{"origin":[4,8,-1],"size":[2,30,2],"uv":[56,0]}]},{"name":"rightLeg","parent":"body","reset":true,"pivot":[-2,26,0],"cubes":[{"origin":[-3,-4,-1],"size":[2,30,2],"uv":[56,0]}]},{"name":"leftLeg","parent":"body","reset":true,"mirror":true,"pivot":[2,26,0],"cubes":[{"origin":[1,-4,-1],"size":[2,30,2],"uv":[56,0]}]}]}},"scripts":{"pre_animation":["variable.tcos0 = (Math.cos(query.modified_distance_moved * 38.17) * query.modified_move_speed / variable.gliding_speed_value) * 28.65;"]},"animations":{"look_at_target_default":{"loop":true,"bones":{"head":{"relative_to":{"rotation":"entity"},"rotation":["query.target_x_rotation","query.target_y_rotation",0]}}},"look_at_target_gliding":{"loop":true,"bones":{"head":{"rotation":[-45,"query.target_y_rotation",0]}}},"look_at_target_swimming":{"loop":true,"bones":{"head":{"rotation":["math.lerp(query.target_x_rotation, -45.0, variable.swim_amount)","query.target_y_rotation",0]}}},"move":{"loop":true,"bones":{"leftarm":{"rotation":["variable.tcos0",0,0]},"leftleg":{"rotation":["variable.tcos0 * -1.4",0,0]},"rightarm":{"rotation":["-variable.tcos0",0,0]},"rightleg":{"rotation":["variable.tcos0 * 1.4",0,0]}}},"attack.rotations":{"loop":true,"bones":{"body":{"rotation":[0,"math.sin(math.sqrt(variable.attack_time) * 360) * 11.46 - this",0]},"leftarm":{"rotation":["math.sin(math.sqrt(variable.attack_time) * 360) * 11.46",0,0]},"rightarm":{"rotation":["math.sin(1.0 - math.pow(1.0 - variable.attack_time, 3.0) * 180.0) * (variable.is_brandishing_spear ? -1.0 : 1.0 )","variable.is_brandishing_spear ? 0.0 : (math.sin(math.sqrt(variable.attack_time) * 360) * 11.46) * 2.0",0]}}},"bob":{"loop":true,"bones":{"leftarm":{"rotation":[0,0,"((math.cos(query.life_time * 103.2) * 2.865) + 2.865) *-1.0"]},"rightarm":{"rotation":[0,0,"(math.cos(query.life_time * 103.2) * 2.865) + 2.865"]}}},"base_pose":{"loop":true,"bones":{"body":{"position":["-this","11.0 - this","-this"],"rotation":["-this",0,0]},"hat":{"position":["-this","-this","-this"],"rotation":["-this","-this","-this"]},"head":{"position":["-this","-this","-this"]},"leftarm":{"position":["4.0-this",0,"-this"]},"leftleg":{"position":[0,"-5.0 - this",0]},"rightarm":{"position":["-4.0-this",0,"-this"]},"rightleg":{"position":[0,"-5.0 - this",0]}}},"arms_legs":{"loop":true,"bones":{"leftarm":{"rotation":["math.clamp(this, -22.92, 22.92) - this",0,0]},"leftleg":{"rotation":["math.clamp(this, -22.92, 22.92) - this",0,0]},"rightarm":{"rotation":["math.clamp(this, -22.92, 22.92) - this",0,0]},"rightleg":{"rotation":["math.clamp(this, -22.92, 22.92) - this",0,0]}}},"carrying":{"loop":true,"bones":{"leftarm":{"rotation":["-28.65 - this",0,"-2.87 - this"]},"rightarm":{"rotation":["-28.65 - this",0,"2.87 - this"]}}},"scary_face":{"loop":true,"bones":{"hat":{"position":[0,"-5.0 - this",0]},"head":{"position":[0,"5.0 - this",0]}}}},"animation_controllers":{"look_at_target":{"initial_state":"default","states":{"default":{"animations":["look_at_target_default"],"transitions":[{"gliding":"query.is_gliding"},{"swimming":"query.is_swimming"}]},"gliding":{"animations":["look_at_target_gliding"],"transitions":[{"swimming":"query.is_swimming"},{"default":"!query.is_gliding"}]},"swimming":{"animations":["look_at_target_swimming"],"transitions":[{"gliding":"query.is_gliding"},{"default":"!query.is_swimming"}]}}},"move":{"initial_state":"default","states":{"default":{"animations":["move"]}}},"attack":{"initial_state":"default","states":{"attacking":{"animations":["attack.rotations"],"transitions":[{"default":"variable.attack_time < 0.0"}]},"default":{"transitions":[{"attacking":"variable.attack_time >= 0.0"}]}}},"bob":{"initial_state":"default","states":{"default":{"animations":["bob"]}}},"base_pose":{"initial_state":"default","states":{"default":{"animations":["base_pose","arms_legs"]}}},"carrying":{"initial_state":"default","states":{"carry":{"animations":["carrying"],"transitions":[{"default":"!query.is_carrying_block"}]},"default":{"transitions":[{"carry":"query.is_carrying_block"}]}}},"scary_face":{"initial_state":"default","states":{"default":{"transitions":[{"scary":"query.is_angry"}]},"scary":{"animations":["scary_face"],"transitions":[{"default":"!query.is_angry"}]}}}},"render_controllers":["controller.render.enderman"],"spawn_egg":{"texture":"spawn_egg","texture_index":7}},"endermite":{"identifier":"minecraft:endermite","materials":{"default":"endermite"},"textures":{"default":"textures/entity/endermite"},"geometry":{"default":{"texturewidth":64,"textureheight":32,"bones":[{"name":"section_0","parent":"section_2","pivot":[0,0,0],"cubes":[{"origin":[-2,0,-4.4],"size":[4,3,2],"uv":[0,0]}]},{"name":"section_1","parent":"section_2","pivot":[0,0,0],"cubes":[{"origin":[-3,0,-2.4],"size":[6,4,5],"uv":[0,5]}]},{"name":"section_2","pivot":[0,0,2.5],"cubes":[{"origin":[-1.5,0,2.5],"size":[3,3,1],"uv":[0,14]}]},{"name":"section_3","parent":"section_2","pivot":[0,0,0],"cubes":[{"origin":[-0.5,0,3.5],"size":[1,2,1],"uv":[0,18]}]}]}},"animations":{"move":{"loop":true,"bones":{"section_0":{"position":["(math.cos(-query.life_time * 928.26) * 1.26) - this",0,0],"rotation":[0,"(math.cos(query.life_time * 928.26) * 26.9) - this",0]},"section_1":{"position":["(math.sin(query.life_time * 928.26) * 0.63) - this",0,0],"rotation":[0,"(math.cos(query.life_time * 928.26) * 16) - this",0]},"section_2":{"position":[0,0,0],"rotation":[0,"(math.cos(query.life_time * 928.26) * 9.17) - this",0]},"section_3":{"position":["(math.cos(query.life_time * 928.26) * 0.8) - this",0,0]}}}},"animation_controllers":{"move":{"initial_state":"default","states":{"default":{"animations":["move"]}}}},"render_controllers":["controller.render.endermite"],"spawn_egg":{"texture":"spawn_egg","texture_index":25}},"evoker_fangs":{"identifier":"minecraft:evocation_fang","materials":{"default":"fang"},"textures":{"default":"textures/entity/illager/evoker_fangs"},"geometry":{"default":{"visible_bounds_width":1.5,"visible_bounds_height":3,"visible_bounds_offset":[0,1.5,0],"texturewidth":64,"textureheight":32,"bones":[{"name":"upper_jaw","parent":"base","pivot":[0,11,0],"cubes":[{"origin":[-1.5,0,-4],"size":[4,14,8],"uv":[40,0],"inflate":0.01}]},{"name":"lower_jaw","parent":"base","pivot":[0,11,0],"bind_pose_rotation":[0,180,0],"cubes":[{"origin":[-1.5,0,-4],"size":[4,14,8],"uv":[40,0]}]},{"name":"base","pivot":[0,0,0],"bind_pose_rotation":[0,90,0],"cubes":[{"origin":[-5,0,-5],"size":[10,12,10],"uv":[0,0]}]}]}},"scripts":{"pre_animation":["variable.remaining_life = (query.life_span - 2.0) - (query.life_time*20.0);","variable.animation_progress = query.life_span == 0.0 ? 0.0 : (variable.remaining_life < 1.0 ? 1.0 : 1.0 - Math.min(1.0, variable.remaining_life / 20.0));","variable.bite_amount = (1 - Math.Pow(Math.Clamp(variable.animation_progress*2.0, 0, 1.0), 3.0)) * 0.35 * 180;","variable.y_offset = (variable.animation_progress + Math.sin(variable.animation_progress*2.7*80.0)) * 0.6 * 12.0;"],"animate":["bite"],"scale":"variable.animation_progress > 0.9 ? (1.0 - variable.animation_progress) / 0.1 : 1.0"},"animations":{"bite":{"loop":true,"bones":{"base":{"position":[0,"-12.0 + variable.y_offset",0]},"lower_jaw":{"rotation":[0,0,"180.0 + variable.bite_amount"]},"upper_jaw":{"rotation":[0,0,"180.0 - variable.bite_amount"]}}}},"render_controllers":["controller.render.evocation_fang"]},"evoker":{"identifier":"minecraft:evocation_illager","min_engine_version":"1.8.0","materials":{"default":"evoker"},"textures":{"default":"textures/entity/illager/evoker"},"geometry":{"default":{"visible_bounds_width":1.5,"visible_bounds_height":2.5,"visible_bounds_offset":[0,1.25,0],"texturewidth":64,"textureheight":64,"bones":[{"name":"head","parent":"body","pivot":[0,24,0],"cubes":[{"origin":[-4,24,-4],"size":[8,10,8],"uv":[0,0]}]},{"name":"nose","parent":"head","pivot":[0,26,0],"cubes":[{"origin":[-1,23,-6],"size":[2,4,2],"uv":[24,0]}]},{"name":"body","pivot":[0,24,0],"cubes":[{"origin":[-4,12,-3],"size":[8,12,6],"uv":[16,20]},{"origin":[-4,6,-3],"size":[8,18,6],"uv":[0,38],"inflate":0.5}]},{"name":"arms","parent":"body","pivot":[0,22,0],"cubes":[{"origin":[-8,16,-2],"size":[4,8,4],"uv":[44,22]},{"origin":[4,16,-2],"size":[4,8,4],"uv":[44,22]},{"origin":[-4,16,-2],"size":[8,4,4],"uv":[40,38]}]},{"name":"leg0","parent":"body","pivot":[-2,12,0],"cubes":[{"origin":[-4,0,-2],"size":[4,12,4],"uv":[0,22]}]},{"name":"leg1","parent":"body","pivot":[2,12,0],"mirror":true,"cubes":[{"origin":[0,0,-2],"size":[4,12,4],"uv":[0,22]}]},{"name":"rightArm","parent":"body","pivot":[-5,22,0],"locators":{"right_hand":[-6,12,0]},"cubes":[{"origin":[-8,12,-2],"size":[4,12,4],"uv":[40,46]}]},{"name":"rightItem","pivot":[-5.5,16,0.5],"neverRender":true,"parent":"rightArm"},{"name":"leftArm","parent":"body","pivot":[5,22,0],"locators":{"left_hand":[6,12,0]},"mirror":true,"cubes":[{"origin":[4,12,-2],"size":[4,12,4],"uv":[40,46]}]}]}},"scripts":{"scale":"0.9375","animate":["controller_general","controller_move"]},"animations":{"general":{"loop":true,"bones":{"arms":{"position":[0,"-3.0 - this","-1.0 - this"],"rotation":["-42.97 - this","- this","- this"],"scale":1},"leftarm":{"scale":0},"rightarm":{"scale":0}}},"casting":{"loop":true,"bones":{"arms":{"scale":0},"leftarm":{"rotation":["math.cos(query.life_time * 763.4) * 14.3239 - this","-this","-135.0 - this"],"scale":1},"rightarm":{"rotation":["math.cos(query.life_time * 763.4) * 14.3239 - this","-this","135.0 - this"],"scale":1}}},"look_at_target":{"loop":true,"bones":{"head":{"relative_to":{"rotation":"entity"},"rotation":["query.target_x_rotation - this","query.target_y_rotation - this",0]}}},"move":{"anim_time_update":"query.modified_distance_moved","loop":true,"bones":{"leg0":{"rotation":["(math.cos(query.anim_time * 38.17) * 40.0) - this","-this",0]},"leg1":{"rotation":["(math.cos(query.anim_time * 38.17 + 180) * 40.0) - this","-this",0]}}},"celebrating":{"loop":true,"bones":{"leftarm":{"rotation":["(math.cos(query.life_time * 800.0) * 2.865)",180,-135]},"rightarm":{"rotation":["(math.cos(query.life_time * 800.0) * 2.865)",180,153]}}}},"particle_effects":{"spell":"minecraft:evoker_spell"},"render_controllers":["controller.render.evoker"],"spawn_egg":{"texture":"spawn_egg","texture_index":40},"animation_controllers":{"controller_general":{"initial_state":"default","states":{"casting":{"animations":["look_at_target","casting"],"particle_effects":[{"effect":"spell","locator":"left_hand"},{"effect":"spell","locator":"right_hand"}],"transitions":[{"default":"!query.is_casting"}]},"celebrating":{"animations":["celebrating"],"blend_transition":0.2,"blend_via_shortest_path":true,"transitions":[{"default":"!query.is_celebrating"}]},"default":{"animations":["look_at_target","general"],"blend_transition":0.2,"blend_via_shortest_path":true,"transitions":[{"casting":"query.is_casting"},{"celebrating":"query.is_celebrating"}]}}},"controller_move":{"initial_state":"default","states":{"default":{"animations":[{"move":"query.modified_move_speed"}]}}}}},"experience_bottle":{"identifier":"minecraft:xp_bottle","materials":{"default":"xp_bottle"},"textures":{"default":"textures/items/experience_bottle","enchanted":"textures/misc/enchanted_item_glint"},"geometry":{"default":{"bones":[{"name":"body","pivot":[0,0,0],"cubes":[{"origin":[-8,-8,0],"size":[16,16,0],"uv":[0,0],"rotation":[0,0,0]}]}],"texturewidth":16,"textureheight":16}},"render_controllers":["controller.render.experience_bottle"],"animations":{"flying":{"loop":true,"bones":{"body":{"rotation":["query.camera_rotation(0)","query.camera_rotation(1)",0]}}}},"scripts":{"animate":["flying"]}},"experience_orb":{"identifier":"minecraft:xp_orb","materials":{"default":"experience_orb"},"textures":{"default":"textures/entity/experience_orb"},"geometry":{"default":{"bones":[{"name":"body","pivot":[8,8,0],"cubes":[{"origin":[0,0,0],"size":[16,16,0],"uv":{"south":{"uv":[0,0]}}}]}],"texturewidth":64,"textureheight":64}},"animations":{"face_player":{"loop":true,"bones":{"body":{"rotation":["query.camera_rotation(0)","query.camera_rotation(1)",0]}}}},"scripts":{"scale":"0.3","pre_animation":["variable.u = Math.mod(query.texture_frame_index, 4) * 16.0 / 64.0;","variable.v = math.round(query.texture_frame_index / 4) * 16.0 / 64.0;"],"animate":["face_player"]},"render_controllers":["controller.render.experience_orb"]},"fireball":{"identifier":"minecraft:fireball","materials":{"default":"fireball"},"textures":{"default":"textures/items/fire_charge"},"geometry":{"default":{"bones":[{"name":"body","pivot":[0,0,0],"cubes":[{"origin":[-8,-4,0],"size":[16,16,0],"uv":{"south":{"uv":[0,0]}}}]}],"texturewidth":16,"textureheight":16}},"animations":{"face_player":{"loop":true,"bones":{"body":{"rotation":["query.camera_rotation(0)","query.camera_rotation(1)",0]}}}},"scripts":{"scale":"2.0","animate":["face_player"]},"render_controllers":["controller.render.fireball"]},"firework_rocket":{"identifier":"minecraft:fireworks_rocket","materials":{"default":"fireworks_rocket"},"textures":{"default":"textures/entity/fireworks"},"geometry":{"default":{"bones":[{"name":"body","pivot":[0,0,0],"cubes":[{"origin":[-8,-8,0],"rotation":[0,90,0],"size":[16,16,0],"uv":{"north":{"uv":[0,0]}}},{"origin":[-8,-8,0],"rotation":[90,90,0],"size":[16,16,0],"uv":{"north":{"uv":[0,0]}}}]}],"texturewidth":32,"textureheight":32}},"animations":{"move":{"loop":true,"bones":{"body":{"position":[0,-3.5,0],"rotation":["-query.target_x_rotation","-query.target_y_rotation",0],"scale":0.6}}}},"scripts":{"animate":["move"]},"render_controllers":["controller.render.fireworks_rocket"]},"fishing_bobber":{"identifier":"minecraft:fishing_hook","materials":{"default":"fishing_hook"},"textures":{"default":"textures/entity/fishing_hook"},"geometry":{"default":{"bones":[{"name":"body","pivot":[0,0,0],"cubes":[{"origin":[-1.5,-1.5,-1.5],"size":[3,3,3],"rotation":[0,0,180],"uv":{"up":{"uv":[0,0]},"down":{"uv":[3,0]},"south":{"uv":[9,0],"uv_size":[-3,3]},"north":{"uv":[9,0]},"east":{"uv":[12,0]},"west":{"uv":[15,0]}}},{"origin":[0,-4.5,-0.5],"size":[0,3,3],"uv":{"east":{"uv":[18,0]}}},{"origin":[0,1.5,-1.5],"size":[0,3,3],"uv":{"east":{"uv":[21,0]}}},{"origin":[-1.5,1.5,0],"size":[3,3,0],"uv":{"north":{"uv":[21,0]}}}]}],"texturewidth":24,"textureheight":3}},"render_controllers":["controller.render.fishing_hook"]},"fox":{"identifier":"minecraft:fox","materials":{"default":"fox"},"textures":{"red":"textures/entity/fox/fox","arctic":"textures/entity/fox/snow_fox"},"geometry":{"default":{"texturewidth":64,"textureheight":32,"bones":[{"name":"world","pivot":[0,0,0],"bind_pose_rotation":[0,0,0],"cubes":[]},{"name":"root","parent":"world","pivot":[0,0,0],"bind_pose_rotation":[0,0,0],"cubes":[]},{"name":"head","parent":"body","pivot":[0,8,-3],"locators":{"held_item":[-2,5,-10],"lead":[0,4,-4]},"bind_pose_rotation":[0,0,0],"cubes":[{"origin":[-4,4,-9],"size":[8,6,6],"uv":[0,0]},{"origin":[-4,10,-8],"size":[2,2,1],"uv":[0,0]},{"origin":[2,10,-8],"size":[2,2,1],"uv":[22,0]},{"origin":[-2,4,-12],"size":[4,2,3],"uv":[0,24]}]},{"name":"head_sleeping","parent":"head","pivot":[0,8,-3],"bind_pose_rotation":[0,0,0],"cubes":[{"origin":[-4,4,-9],"size":[8,6,6],"uv":[0,12]},{"origin":[-4,10,-8],"size":[2,2,1],"uv":[0,0]},{"origin":[2,10,-8],"size":[2,2,1],"uv":[22,0]},{"origin":[-2,4,-12],"size":[4,2,3],"uv":[0,24]}]},{"name":"body","parent":"root","pivot":[0,8,0],"bind_pose_rotation":[90,0,0],"cubes":[{"origin":[-3,0,-3],"size":[6,11,6],"uv":[30,15]}]},{"name":"leg0","parent":"body","pivot":[-3,6,6],"bind_pose_rotation":[0,0,0],"cubes":[{"origin":[-3.005,0,5],"size":[2,6,2],"uv":[14,24]}]},{"name":"leg1","parent":"body","pivot":[1,6,6],"bind_pose_rotation":[0,0,0],"cubes":[{"origin":[1.005,0,5],"size":[2,6,2],"uv":[22,24]}]},{"name":"leg2","parent":"body","pivot":[-3,6,-1],"bind_pose_rotation":[0,0,0],"cubes":[{"origin":[-3.005,0,-2],"size":[2,6,2],"uv":[14,24]}]},{"name":"leg3","parent":"body","pivot":[1,6,-1],"bind_pose_rotation":[0,0,0],"cubes":[{"origin":[1.005,0,-2],"size":[2,6,2],"uv":[22,24]}]},{"name":"tail","parent":"body","pivot":[0,8,7],"bind_pose_rotation":[80,0,0],"cubes":[{"origin":[-2,-2,4.75],"size":[4,9,5],"uv":[28,0]}]}]}},"animations":{"walk":{"anim_time_update":"query.modified_distance_moved","loop":true,"bones":{"leg0":{"rotation":["math.cos(query.anim_time * 38.17) *  80.0",0,0]},"leg1":{"rotation":["math.cos(query.anim_time * 38.17) * -80.0",0,0]},"leg2":{"rotation":["math.cos(query.anim_time * 38.17) * -80.0",0,0]},"leg3":{"rotation":["math.cos(query.anim_time * 38.17) *  80.0",0,0]}}},"look_at_target":{"loop":true,"bones":{"head":{"relative_to":{"rotation":"entity"},"rotation":["query.target_x_rotation - this","query.target_y_rotation - this",0]}}},"baby_transform":{"loop":true,"bones":{"head":{"position":[0,"query.is_baby ? 4.0 : 0.0","query.is_baby ? 4.0 : 0.0"],"scale":"query.is_baby ? 1.3 : 1.0"}}},"crouch":{"loop":true,"bones":{"body":{"position":[0,-1.8,0],"rotation":[0,0,0]},"head":{"position":[0,-0.8,0],"rotation":[0,0,0]},"leg0":{"position":[0,1.6,0],"rotation":[0,0,0]},"leg1":{"position":[0,1.6,0],"rotation":[0,0,0]},"leg2":{"position":[0,1.6,0],"rotation":[0,0,0]},"leg3":{"position":[0,1.6,0],"rotation":[0,0,0]}}},"sleep":{"loop":true,"bones":{"body":{"position":[0,-4.8,0],"rotation":[0,0,-90]},"head":{"position":[1.8,-0.4,-2],"rotation":[0,-115,"math.cos(query.anim_time * 160.0) + 90 -this"]},"tail":{"position":[0,0,1.5],"rotation":[-125,0,0]}}},"setup":{"loop":true,"bones":{"body":{"rotation":["-this",0,0]}}},"sit":{"loop":true,"bones":{"body":{"position":[0,1,0],"rotation":[-60,0,0]},"head":{"position":[0,3,-3],"rotation":[60,0,0]},"leg0":{"position":[0,4,2.5],"rotation":[-15,0,0]},"leg1":{"position":[0,4,2.5],"rotation":[-15,0,0]},"leg2":{"position":[0,0.75,3.5],"rotation":[40,0,0]},"leg3":{"position":[0,0.75,3.5],"rotation":[40,0,0]},"tail":{"position":[0,-0.075,-0.15],"rotation":[60,0,0]}}},"wiggle":{"loop":true,"bones":{"body":{"position":[0,-1.8,0],"rotation":[0,"math.cos(query.life_time * 20.0 * 53.7) * 5.0 -this",0]},"head":{"position":[0,-0.8,0],"rotation":["math.clamp(-5.0 * (query.anim_time / 2.0), -5.0, 0)",0,"math.clamp(25.0 * (query.anim_time / 2.0), 0, 25.0)"]},"leg0":{"position":[0,1.6,0],"rotation":[0,0,0]},"leg1":{"position":[0,1.6,0],"rotation":[0,0,0]},"leg2":{"position":[0,1.6,0],"rotation":[0,0,0]},"leg3":{"position":[0,1.6,0],"rotation":[0,0,0]},"tail":{"rotation":[0,"math.cos(query.life_time * 20.0 * 53.7) * 10.0 -this",0]}}},"stuck":{"loop":true,"bones":{"body":{"position":[0,-0.3,0],"rotation":[60,0,0]}}},"pounce":{"loop":true,"bones":{"body":{"position":[0,0,0],"rotation":["query.vertical_speed * -7.0",0,0]},"head":{"position":[0,0,0],"rotation":["query.vertical_speed * -7.0",0,0]}}}},"scripts":{"animate":["setup",{"baby_transform":"query.is_baby"},"move"]},"render_controllers":["controller.render.fox"],"spawn_egg":{"texture":"spawn_egg","texture_index":55},"animation_controllers":{"move":{"initial_state":"default","states":{"crouch":{"animations":["look_at_target","crouch",{"walk":"query.modified_move_speed"}],"blend_transition":0.4,"transitions":[{"default":"!query.is_stalking && !query.is_interested"},{"wiggle":"query.is_interested"}]},"default":{"animations":["look_at_target",{"walk":"query.modified_move_speed"}],"blend_transition":0.1,"transitions":[{"crouch":"query.is_stalking"},{"sleep":"query.is_sleeping"},{"stuck":"query.is_stunned"},{"sit":"query.is_sitting"}]},"pounce":{"animations":["look_at_target","pounce",{"walk":"query.modified_move_speed"}],"transitions":[{"default":"query.is_on_ground"}]},"sit":{"animations":["sit"],"blend_transition":0.2,"transitions":[{"default":"!query.is_sitting"}]},"sleep":{"animations":["sleep"],"blend_transition":0.2,"transitions":[{"default":"!query.is_sleeping"}]},"stuck":{"animations":["stuck",{"walk":"math.cos(query.life_time * 20.0 * 53.7)"}],"blend_transition":0.2,"transitions":[{"default":"!query.is_stunned"}]},"wiggle":{"animations":["look_at_target","wiggle",{"walk":"query.modified_move_speed"}],"blend_transition":0.2,"transitions":[{"default":"query.is_on_ground && !query.is_interested && !query.is_stalking"},{"crouch":"query.is_on_ground && !query.is_interested && query.is_stalking"},{"pounce":"!query.is_on_ground"}]}}}}},"ghast":{"identifier":"minecraft:ghast","materials":{"default":"ghast"},"textures":{"default":"textures/entity/ghast/ghast","shooting":"textures/entity/ghast/ghast_shooting"},"geometry":{"default":{"visible_bounds_width":6,"visible_bounds_height":9,"visible_bounds_offset":[0,4.5,0],"texturewidth":64,"textureheight":32,"bones":[{"name":"tentacles_0","parent":"body","pivot":[-3.8,1,-5],"cubes":[{"origin":[-4.8,-8,-6],"size":[2,9,2],"uv":[0,0]}]},{"name":"tentacles_1","parent":"body","pivot":[1.3,1,-5],"cubes":[{"origin":[0.3,-10,-6],"size":[2,11,2],"uv":[0,0]}]},{"name":"tentacles_2","parent":"body","pivot":[6.3,1,-5],"cubes":[{"origin":[5.3,-7,-6],"size":[2,8,2],"uv":[0,0]}]},{"name":"tentacles_3","parent":"body","pivot":[-6.3,1,0],"cubes":[{"origin":[-7.3,-8,-1],"size":[2,9,2],"uv":[0,0]}]},{"name":"tentacles_4","parent":"body","pivot":[-1.3,1,0],"cubes":[{"origin":[-2.3,-12,-1],"size":[2,13,2],"uv":[0,0]}]},{"name":"tentacles_5","parent":"body","pivot":[3.8,1,0],"cubes":[{"origin":[2.8,-10,-1],"size":[2,11,2],"uv":[0,0]}]},{"name":"tentacles_6","parent":"body","pivot":[-3.8,1,5],"cubes":[{"origin":[-4.8,-11,4],"size":[2,12,2],"uv":[0,0]}]},{"name":"tentacles_7","parent":"body","pivot":[1.3,1,5],"cubes":[{"origin":[0.3,-11,4],"size":[2,12,2],"uv":[0,0]}]},{"name":"tentacles_8","parent":"body","pivot":[6.3,1,5],"cubes":[{"origin":[5.3,-12,4],"size":[2,13,2],"uv":[0,0]}]},{"name":"body","pivot":[0,1.5,0],"cubes":[{"origin":[-8,0,-8],"size":[16,16,16],"uv":[0,0]}]}]}},"spawn_egg":{"texture":"spawn_egg","texture_index":19},"animations":{"move":{"loop":true,"bones":{"tentacles_0":{"rotation":["math.sin(query.life_time * 360.0 + 0) * 11.5 + 23",0,0]},"tentacles_1":{"rotation":["math.sin(query.life_time * 360.0 + 57) * 11.5 + 23",0,0]},"tentacles_2":{"rotation":["math.sin(query.life_time * 360.0 + 115) * 11.5 + 23",0,0]},"tentacles_3":{"rotation":["math.sin(query.life_time * 360.0 + 172) * 11.5 + 23",0,0]},"tentacles_4":{"rotation":["math.sin(query.life_time * 360.0 + 229) * 11.5 + 23",0,0]},"tentacles_5":{"rotation":["math.sin(query.life_time * 360.0 + 286) * 11.5 + 23",0,0]},"tentacles_6":{"rotation":["math.sin(query.life_time * 360.0 + 344) * 11.5 + 23",0,0]},"tentacles_7":{"rotation":["math.sin(query.life_time * 360.0 + 402) * 11.5 + 23",0,0]},"tentacles_8":{"rotation":["math.sin(query.life_time * 360.0 + 458) * 11.5 + 23",0,0]}}},"scale":{"loop":true,"bones":{"body":{"scale":4.5}}}},"animation_controllers":{"move":{"initial_state":"default","states":{"default":{"animations":["move"]}}},"scale":{"initial_state":"default","states":{"default":{"animations":["scale"]}}}},"render_controllers":["controller.render.ghast"]},"guardian":{"identifier":"minecraft:guardian","min_engine_version":"1.8.0","materials":{"default":"guardian","ghost":"guardian_ghost"},"textures":{"default":"textures/entity/guardian","elder":"textures/entity/guardian_elder","beam":"textures/entity/guardian_beam"},"geometry":{"default":{"visible_bounds_width":3.5,"visible_bounds_height":2,"visible_bounds_offset":[0,0.5,0],"texturewidth":64,"textureheight":64,"bones":[{"name":"head","pivot":[0,0,0],"mirror":true,"cubes":[{"mirror":false,"origin":[-6,2,-8],"size":[12,12,16],"uv":[0,0]},{"mirror":false,"origin":[-8,2,-6],"size":[2,12,12],"uv":[0,28]},{"origin":[6,2,-6],"size":[2,12,12],"uv":[0,28]},{"origin":[-6,14,-6],"size":[12,2,12],"uv":[16,40]},{"origin":[-6,0,-6],"size":[12,2,12],"uv":[16,40]}]},{"name":"eye","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,6,0],"size":[2,2,1],"uv":[8,0]}]},{"name":"tailpart0","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-2,6,7],"size":[4,4,8],"uv":[40,0]}]},{"name":"tailpart1","parent":"tailpart0","pivot":[0,24,0],"cubes":[{"origin":[0,7,0],"size":[3,3,7],"uv":[0,54]}]},{"name":"tailpart2","parent":"tailpart1","pivot":[0,24,0],"cubes":[{"origin":[0,8,0],"size":[2,2,6],"uv":[41,32]},{"origin":[1,4.5,3],"size":[1,9,9],"uv":[25,19]}]},{"name":"spikepart0","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,19.5,-1],"size":[2,9,2],"uv":[0,0]}]},{"name":"spikepart1","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,19.5,-1],"size":[2,9,2],"uv":[0,0]}]},{"name":"spikepart2","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,19.5,-1],"size":[2,9,2],"uv":[0,0]}]},{"name":"spikepart3","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,19.5,-1],"size":[2,9,2],"uv":[0,0]}]},{"name":"spikepart4","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,19.5,-1],"size":[2,9,2],"uv":[0,0]}]},{"name":"spikepart5","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,19.5,-1],"size":[2,9,2],"uv":[0,0]}]},{"name":"spikepart6","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,19.5,-1],"size":[2,9,2],"uv":[0,0]}]},{"name":"spikepart7","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,19.5,-1],"size":[2,9,2],"uv":[0,0]}]},{"name":"spikepart8","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,19.5,-1],"size":[2,9,2],"uv":[0,0]}]},{"name":"spikepart9","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,19.5,-1],"size":[2,9,2],"uv":[0,0]}]},{"name":"spikepart10","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,19.5,-1],"size":[2,9,2],"uv":[0,0]}]},{"name":"spikepart11","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,19.5,-1],"size":[2,9,2],"uv":[0,0]}]}]},"ghost":{"visible_bounds_width":3.5,"visible_bounds_height":2,"visible_bounds_offset":[0,0.5,0],"texturewidth":64,"textureheight":64,"bones":[{"name":"head","pivot":[0,24,0],"mirror":true,"cubes":[{"mirror":false,"origin":[-6,2,-8],"size":[12,12,16],"uv":[0,0]},{"mirror":false,"origin":[-8,2,-6],"size":[2,12,12],"uv":[0,28]},{"origin":[6,2,-6],"size":[2,12,12],"uv":[0,28]},{"origin":[-6,14,-6],"size":[12,2,12],"uv":[16,40]},{"origin":[-6,0,-6],"size":[12,2,12],"uv":[16,40]}]},{"name":"eye","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,7,0],"size":[2,2,1],"uv":[8,0]}]},{"name":"tailpart0","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-2,6,7],"size":[4,4,8],"uv":[40,0]}]},{"name":"tailpart1","parent":"tailpart0","pivot":[0,24,0],"cubes":[{"origin":[0,7,0],"size":[3,3,7],"uv":[0,54]}]},{"name":"tailpart2","parent":"tailpart1","pivot":[0,24,0],"cubes":[{"origin":[0,8,0],"size":[2,2,6],"uv":[41,32]},{"origin":[1,4.5,3],"size":[1,9,9],"uv":[25,19]}]},{"name":"spikepart0","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,19.5,-1],"size":[2,9,2],"uv":[0,0]}]},{"name":"spikepart1","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,19.5,-1],"size":[2,9,2],"uv":[0,0]}]},{"name":"spikepart2","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,19.5,-1],"size":[2,9,2],"uv":[0,0]}]},{"name":"spikepart3","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,19.5,-1],"size":[2,9,2],"uv":[0,0]}]},{"name":"spikepart4","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,19.5,-1],"size":[2,9,2],"uv":[0,0]}]},{"name":"spikepart5","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,19.5,-1],"size":[2,9,2],"uv":[0,0]}]},{"name":"spikepart6","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,19.5,-1],"size":[2,9,2],"uv":[0,0]}]},{"name":"spikepart7","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,19.5,-1],"size":[2,9,2],"uv":[0,0]}]},{"name":"spikepart8","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,19.5,-1],"size":[2,9,2],"uv":[0,0]}]},{"name":"spikepart9","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,19.5,-1],"size":[2,9,2],"uv":[0,0]}]},{"name":"spikepart10","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,19.5,-1],"size":[2,9,2],"uv":[0,0]}]},{"name":"spikepart11","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-1,19.5,-1],"size":[2,9,2],"uv":[0,0]}]}]}},"animations":{"setup":{"loop":true,"bones":{"spikepart0":{"rotation":["-45.0 - this","0.0 - this","0.0 - this"]},"spikepart1":{"rotation":["45.0 - this","0.0 - this","0.0 - this"]},"spikepart10":{"rotation":["0.0 - this","0.0 - this"," 135.0 - this"]},"spikepart11":{"rotation":["0.0 - this","0.0 - this"," -135.0 - this"]},"spikepart2":{"rotation":["0.0 - this","0.0 - this","45.0 - this"]},"spikepart3":{"rotation":["0.0 - this","0.0  - this","-45.0 - this"]},"spikepart4":{"rotation":["90.0 - this","45.0 - this"," 0.0 - this"]},"spikepart5":{"rotation":["90.0 - this","-45.0 - this"," 0.0 - this"]},"spikepart6":{"rotation":["90.0 - this","-135.0 - this","0.0 - this"]},"spikepart7":{"rotation":["90.0 - this","135.0 - this"," 0.0 - this"]},"spikepart8":{"rotation":["-135.0 - this","0.0 - this"," 0.0 - this"]},"spikepart9":{"rotation":["135.0 - this","0.0 - this"," 0.0 - this"]}}},"spikes":{"loop":true,"bones":{"spikepart0":{"position":["-this","24 + -8 * (1 + math.cos(query.life_time * 20 * 1.5) * 0.01 + (variable.spike_extension + variable.spike_shake)) - this","8 * (1 + math.cos(query.life_time * 20 * 1.5) * 0.01 - (variable.spike_extension + variable.spike_shake)) - this"]},"spikepart1":{"position":["-this","24 + -8 * (1 + math.cos(query.life_time * 20 * 1.5 + 1) * 0.01 + (variable.spike_extension + variable.spike_shake)) - this","-8 * (1 + math.cos(query.life_time * 20 * 1.5 + 1) * 0.01 - (variable.spike_extension + variable.spike_shake)) - this"]},"spikepart10":{"position":["8 * (1 + math.cos(query.life_time * 20 * 1.5 + 10) * 0.01 - (variable.spike_extension + variable.spike_shake)) - this","-8 + 8 * (1 + math.cos(query.life_time * 20 * 1.5 + 10) * 0.01 + (variable.spike_extension + variable.spike_shake)) - this","-this"]},"spikepart11":{"position":["-8 * (1 + math.cos(query.life_time * 20 * 1.5 + 11) * 0.01 - (variable.spike_extension + variable.spike_shake)) - this","-8 + 8 * (1 + math.cos(query.life_time * 20 * 1.5 + 11) * 0.01 + (variable.spike_extension + variable.spike_shake)) - this","-this"]},"spikepart2":{"position":["8 * (1 + math.cos(query.life_time * 20 * 1.5 + 2) * 0.01 - (variable.spike_extension + variable.spike_shake)) - this","24 + -8 * (1 + math.cos(query.life_time * 20 * 1.5 + 2) * 0.01 + (variable.spike_extension + variable.spike_shake)) - this","-this"]},"spikepart3":{"position":["-8 * (1 + math.cos(query.life_time * 20 * 1.5 + 3) * 0.01 - (variable.spike_extension + variable.spike_shake)) - this","24 + -8 * (1 + math.cos(query.life_time * 20 * 1.5 + 3) * 0.01 + (variable.spike_extension + variable.spike_shake)) - this",0]},"spikepart4":{"position":["-8 * (1 + math.cos(query.life_time * 20 * 1.5 + 4) * 0.01 - (variable.spike_extension - variable.spike_shake)) - this","8 - this","-8 * (1 + math.cos(query.life_time * 20 * 1.5 + 4) * 0.01 - (variable.spike_extension - variable.spike_shake)) - this"]},"spikepart5":{"position":["8 * (1 + math.cos(query.life_time * 20 * 1.5 + 5) * 0.01 - (variable.spike_extension - variable.spike_shake)) - this","8 - this","-8 * (1 + math.cos(query.life_time * 20 * 1.5 + 5) * 0.01 - (variable.spike_extension - variable.spike_shake)) - this"]},"spikepart6":{"position":["8 * (1 + math.cos(query.life_time * 20 * 1.5 + 6) * 0.01 - (variable.spike_extension - variable.spike_shake)) - this","8 - this","8 * (1 + math.cos(query.life_time * 20 * 1.5 + 6) * 0.01 - (variable.spike_extension - variable.spike_shake)) - this"]},"spikepart7":{"position":["-8 * (1 + math.cos(query.life_time * 20 * 1.5 + 7) * 0.01 - (variable.spike_extension - variable.spike_shake)) - this","8 - this","8 * (1 + math.cos(query.life_time * 20 * 1.5 + 7) * 0.01 - (variable.spike_extension - variable.spike_shake)) - this"]},"spikepart8":{"position":["-this","-8  + 8 * (1 + math.cos(query.life_time * 20 * 1.5 + 8) * 0.01 + (variable.spike_extension + variable.spike_shake)) - this","8 * (1 + math.cos(query.life_time * 20 * 1.5 + 8) * 0.01 - (variable.spike_extension + variable.spike_shake)) - this"]},"spikepart9":{"position":["-this","-8 + 8 * (1 + math.cos(query.life_time * 20 * 1.5 + 9) * 0.01 + (variable.spike_extension + variable.spike_shake)) - this","-8 * (1 + math.cos(query.life_time * 20 * 1.5 + 9) * 0.01 - (variable.spike_extension + variable.spike_shake)) - this"]}}},"swim":{"loop":true,"bones":{"tailpart0":{"rotation":[0,"variable.tail_base_angle * 11.6 - this",0]},"tailpart1":{"position":["-1.5 - this","-0.5 - this","14.0 - this"],"rotation":[0,"variable.tail_base_angle * 22.8 - this",0]},"tailpart2":{"position":["0.5 - this","-0.5 - this","6.0 - this"],"rotation":[0,"variable.tail_base_angle * 34.4 - this",0]}}},"look_at_target":{"loop":true,"bones":{"head":{"relative_to":{"rotation":"entity"},"rotation":["query.target_x_rotation - this","query.target_y_rotation - this",0]}}},"move_eye":{"loop":true,"bones":{"eye":{"position":["query.eye_target_x_rotation - this","24 + query.eye_target_y_rotation - this","-8.25 - this"]}}}},"scripts":{"pre_animation":["variable.spike_shake = Math.sin(query.life_time * 2000)/50;","variable.spike_animation_speed = query.life_time < 0.1 ? 0.0 : (!query.is_in_water ? (Math.round(Math.sin(query.life_time * 2000)) == 0.0 ? (Math.random(0.0, 1.0)) : (variable.spike_animation_speed)) : (query.is_moving ? (variable.spike_animation_speed - variable.spike_animation_speed * 0.06) : (variable.spike_animation_speed + (1.0 - variable.spike_animation_speed) * 0.06)));","variable.spike_extension = (1.0 - variable.spike_animation_speed) * 0.55;","variable.tail_animation_speed = query.life_time < 0.1 ? 0.0 : (!query.is_in_water ? 2.0 : query.is_moving ? (variable.tail_animation_speed < 0.5 ? 4.0 : variable.tail_animation_speed + (0.5 - variable.tail_animation_speed) * 0.1) : variable.tail_animation_speed + (0.125 - variable.tail_animation_speed) * 0.2);","variable.tail_swim = query.life_time < 0.1 ? 0.0 : (variable.tail_swim + variable.tail_animation_speed);","variable.tail_base_angle = Math.sin(variable.tail_swim*20.0);"],"animate":["setup","spikes","swim","look_at_target","move_eye"]},"render_controllers":["controller.render.guardian"],"spawn_egg":{"texture":"spawn_egg","texture_index":26}},"hoglin":{"identifier":"minecraft:hoglin","materials":{"default":"hoglin"},"textures":{"default":"textures/entity/hoglin/hoglin"},"geometry":{"default":{"bones":[{"name":"body","pivot":[0,19,-3],"cubes":[{"origin":[-8,11,-7],"size":[16,14,26],"inflate":0.02,"uv":[1,1]},{"origin":[0,22,-10],"size":[0,10,19],"inflate":0.02,"uv":[90,33]}],"locators":{"lead":[0,20,-5]}},{"name":"head","parent":"body","pivot":[0,22,-5],"rotation":[50,0,0],"cubes":[{"origin":[-7,21,-24],"size":[14,6,19],"uv":[61,1]},{"origin":[-8,22,-19],"size":[2,11,2],"uv":[1,13]},{"origin":[6,22,-19],"size":[2,11,2],"uv":[1,13]}]},{"name":"right_ear","parent":"head","pivot":[-7,27,-7],"rotation":[0,0,-50],"cubes":[{"origin":[-13,26,-10],"size":[6,1,4],"uv":[1,1]}]},{"name":"left_ear","parent":"head","pivot":[7,27,-7],"rotation":[0,0,50],"cubes":[{"origin":[7,26,-10],"size":[6,1,4],"uv":[1,6]}]},{"name":"leg_back_right","pivot":[6,8,17],"cubes":[{"origin":[-8,0,13],"size":[5,11,5],"uv":[21,45]}]},{"name":"leg_back_left","pivot":[-6,8,17],"cubes":[{"origin":[3,0,13],"size":[5,11,5],"uv":[0,45]}]},{"name":"leg_front_right","pivot":[-6,12,-3],"cubes":[{"origin":[-8,0,-6],"size":[6,14,6],"uv":[66,42]}]},{"name":"leg_front_left","pivot":[6,12,-3],"cubes":[{"origin":[2,0,-6],"size":[6,14,6],"uv":[41,42]}]}],"visible_bounds_width":4,"visible_bounds_height":3,"visible_bounds_offset":[0,1.5,0],"texturewidth":128,"textureheight":64}},"spawn_egg":{"base_color":"#C66E55","overlay_color":"#5f6464"},"scripts":{"pre_animation":["variable.tcos_right_side = (Math.cos(query.modified_distance_moved * 38.17) * query.modified_move_speed / variable.gliding_speed_value) * 57.3;","variable.tcos_left_side = -variable.tcos_right_side;","variable.attack_head_rot =  Math.sin(variable.attack_time * 180.0) * -37.3;"]},"animations":{"walk":{"loop":true,"bones":{"left_ear":{"rotation":[0,0,"variable.tcos_left_side * 0.5"]},"right_ear":{"rotation":[0,0,"variable.tcos_right_side * 0.5"]},"leg_back_right":{"rotation":["variable.tcos_right_side",0,0]},"leg_back_left":{"rotation":["variable.tcos_left_side",0,0]},"leg_front_right":{"rotation":["-variable.tcos_right_side",0,0]},"leg_front_left":{"rotation":["-variable.tcos_left_side",0,0]}}},"look_at_target":{"loop":true,"bones":{"head":{"relative_to":{"rotation":"entity"},"rotation":[0,"query.target_y_rotation - this",0]}}},"attack":{"loop":true,"bones":{"head":{"rotation":["variable.attack_head_rot",0,0]}}},"hoglin_baby_scaling":{"loop":true,"bones":{"head":{"position":[0,10,4],"scale":1.4}}}},"animation_controllers":{"look_at_target":{"initial_state":"default","states":{"default":{"animations":["look_at_target"]}}},"walk":{"initial_state":"walking","states":{"walking":{"animations":["walk"]}}},"attack":{"initial_state":"default","states":{"attack":{"animations":["attack"],"transitions":[{"default":"!variable.has_target || variable.attack_time < 0.0"}]},"default":{"transitions":[{"attack":"variable.has_target && variable.attack_time >= 0.0"}]}}},"hoglin_baby_scaling":{"initial_state":"default","states":{"baby":{"animations":["hoglin_baby_scaling"],"transitions":[{"default":"!query.is_baby"}]},"default":{"transitions":[{"baby":"query.is_baby"}]}}}},"render_controllers":["controller.render.hoglin"]},"hopper_minecart":{"identifier":"minecraft:hopper_minecart","min_engine_version":"1.8.0","materials":{"default":"minecart"},"textures":{"default":"textures/entity/minecart"},"geometry":{"default":{"bones":[{"name":"bottom","pivot":[0,6,0],"cubes":[{"origin":[-10,-6.5,-1],"size":[20,16,2],"rotation":[90,0,0],"uv":[0,10]}]},{"name":"back","pivot":[0,0,0],"cubes":[{"origin":[-17,2.5,-1],"size":[16,8,2],"rotation":[0,270,0],"uv":[0,0]}],"parent":"bottom"},{"name":"front","pivot":[0,0,0],"cubes":[{"origin":[1,2.5,-1],"size":[16,8,2],"rotation":[0,90,0],"uv":[0,0]}],"parent":"bottom"},{"name":"right","pivot":[0,0,0],"cubes":[{"origin":[-8,2.5,-8],"size":[16,8,2],"rotation":[0,180,0],"uv":[0,0]}],"parent":"bottom"},{"name":"left","pivot":[0,0,0],"cubes":[{"origin":[-8,2.5,6],"size":[16,8,2],"uv":[0,0]}],"parent":"bottom"}],"texturewidth":64,"textureheight":32}},"scripts":{"pre_animation":["variable.hurt = query.hurt_time - query.frame_alpha;"],"animate":["move"]},"animations":{"move":{"loop":true,"bones":{"bottom":{"position":["variable.rail_offset.x / query.model_scale","variable.rail_offset.y / query.model_scale","variable.rail_offset.z / query.model_scale"],"rotation":["variable.hurt > 0 ? -Math.sin(variable.hurt * 360 / (Math.pi * 2)) * variable.hurt * (((20 * 2 - query.structural_integrity) - query.frame_alpha) < 0 ? 0: (20 * 2 - query.structural_integrity) - query.frame_alpha) / 10 * query.hurt_direction : 0",0,"-variable.rail_rotation.z"]}}}},"render_controllers":["controller.render.minecart"]},"horse":{"identifier":"minecraft:horse","textures":{"base_brown":"textures/entity/horse/horse_brown","base_white":"textures/entity/horse/horse_white","base_chestnut":"textures/entity/horse/horse_chestnut","base_creamy":"textures/entity/horse/horse_creamy","base_black":"textures/entity/horse/horse_black","base_gray":"textures/entity/horse/horse_gray","base_darkbrown":"textures/entity/horse/horse_darkbrown","markings_none":"textures/entity/horse/horse_markings_none","markings_white":"textures/entity/horse/horse_markings_white","markings_whitefield":"textures/entity/horse/horse_markings_whitefield","markings_whitedots":"textures/entity/horse/horse_markings_whitedots","markings_blackdots":"textures/entity/horse/horse_markings_blackdots","mule":"textures/entity/horse/mule","donkey":"textures/entity/horse/donkey","skeleton":"textures/entity/horse/horse_skeleton","zombie":"textures/entity/horse/horse_zombie","armor_none":"textures/entity/horse/armor/horse_armor_none","armor_leather":"textures/entity/horse/armor/horse_armor_leather","armor_iron":"textures/entity/horse/armor/horse_armor_iron","armor_gold":"textures/entity/horse/armor/horse_armor_gold","armor_diamond":"textures/entity/horse/armor/horse_armor_diamond"},"geometry":{"default":{"visible_bounds_width":2,"visible_bounds_height":3,"visible_bounds_offset":[0,1,0],"texturewidth":128,"textureheight":128,"bones":[{"name":"Body","pivot":[0,13,9],"rotation":[0,0,0],"cubes":[{"origin":[-5,11,-10],"size":[10,10,24],"uv":[0,34]}]},{"name":"TailA","pivot":[0,21,14],"rotation":[-65,0,0],"cubes":[{"origin":[-1,20,14],"size":[2,2,3],"uv":[44,0]}]},{"name":"TailB","pivot":[0,21,14],"rotation":[-65,0,0],"cubes":[{"origin":[-1.5,19,17],"size":[3,4,7],"uv":[38,7]}]},{"name":"TailC","pivot":[0,21,14],"rotation":[-80.34,0,0],"cubes":[{"origin":[-1.5,21.5,23],"size":[3,4,7],"uv":[24,3]}]},{"name":"Leg1A","pivot":[4,15,11],"rotation":[0,0,0],"cubes":[{"origin":[1.5,8,8.5],"size":[4,9,5],"uv":[78,29]}]},{"name":"Leg1B","pivot":[4,8,11],"rotation":[0,0,0],"cubes":[{"origin":[2,3,9.5],"size":[3,5,3],"uv":[78,43]}]},{"name":"Leg1C","pivot":[4,8,11],"rotation":[0,0,0],"cubes":[{"origin":[1.5,-0.1,9],"size":[4,3,4],"uv":[78,51]}]},{"name":"Leg2A","pivot":[-4,15,11],"rotation":[0,0,0],"cubes":[{"origin":[-5.5,8,8.5],"size":[4,9,5],"uv":[96,29]}]},{"name":"Leg2B","pivot":[-4,8,11],"rotation":[0,0,0],"cubes":[{"origin":[-5,3,9.5],"size":[3,5,3],"uv":[96,43]}]},{"name":"Leg2C","pivot":[-4,8,11],"rotation":[0,0,0],"cubes":[{"origin":[-5.5,-0.1,9],"size":[4,3,4],"uv":[96,51]}]},{"name":"Leg3A","pivot":[4,15,-8],"rotation":[0,0,0],"cubes":[{"origin":[2.1,8,-10.1],"size":[3,8,4],"uv":[44,29]}]},{"name":"Leg3B","pivot":[4,8,-8],"rotation":[0,0,0],"cubes":[{"origin":[2.1,3,-9.6],"size":[3,5,3],"uv":[44,41]}]},{"name":"Leg3C","pivot":[4,8,-8],"rotation":[0,0,0],"cubes":[{"origin":[1.6,-0.1,-10.1],"size":[4,3,4],"uv":[44,51]}]},{"name":"Leg4A","pivot":[-4,15,-8],"rotation":[0,0,0],"cubes":[{"origin":[-5.1,8,-10.1],"size":[3,8,4],"uv":[60,29]}]},{"name":"Leg4B","pivot":[-4,8,-8],"rotation":[0,0,0],"cubes":[{"origin":[-5.1,3,-9.6],"size":[3,5,3],"uv":[60,41]}]},{"name":"Leg4C","pivot":[-4,8,-8],"rotation":[0,0,0],"cubes":[{"origin":[-5.6,-0.1,-10.1],"size":[4,3,4],"uv":[60,51]}]},{"name":"Head","pivot":[0,20,-10],"rotation":[30,0,0],"cubes":[{"origin":[-2.5,25,-11.5],"size":[5,5,7],"uv":[0,0]}]},{"name":"UMouth","pivot":[0,20.05,-10],"rotation":[30,0,0],"cubes":[{"origin":[-2,27.05,-17],"size":[4,3,6],"uv":[24,18]}]},{"name":"LMouth","pivot":[0,20,-10],"rotation":[30,0,0],"cubes":[{"origin":[-2,25,-16.5],"size":[4,2,5],"uv":[24,27]}]},{"name":"Ear1","pivot":[0,20,-10],"rotation":[30,0,0],"cubes":[{"origin":[0.45,29,-6],"size":[2,3,1],"uv":[0,0]}]},{"name":"Ear2","pivot":[0,20,-10],"rotation":[30,0,0],"cubes":[{"origin":[-2.45,29,-6],"size":[2,3,1],"uv":[0,0]}]},{"name":"MuleEarL","pivot":[0,20,-10],"rotation":[30,0,15],"cubes":[{"origin":[-2,29,-6],"size":[2,7,1],"uv":[0,12]}]},{"name":"MuleEarR","pivot":[0,20,-10],"rotation":[30,0,-15],"cubes":[{"origin":[0,29,-6],"size":[2,7,1],"uv":[0,12]}]},{"name":"Neck","pivot":[0,20,-10],"rotation":[30,0,0],"cubes":[{"origin":[-2.05,15.8,-12],"size":[4,14,8],"uv":[0,12]}]},{"name":"Bag1","pivot":[-7.5,21,10],"rotation":[0,90,0],"cubes":[{"origin":[-10.5,13,10],"size":[8,8,3],"uv":[0,34]}]},{"name":"Bag2","pivot":[4.5,21,10],"rotation":[0,90,0],"cubes":[{"origin":[1.5,13,10],"size":[8,8,3],"uv":[0,47]}]},{"name":"Saddle","pivot":[0,22,2],"rotation":[0,0,0],"cubes":[{"origin":[-5,21,-1],"size":[10,1,8],"uv":[80,0]}]},{"name":"SaddleB","pivot":[0,22,2],"rotation":[0,0,0],"cubes":[{"origin":[-1.5,22,-1],"size":[3,1,2],"uv":[106,9]}]},{"name":"SaddleC","pivot":[0,22,2],"rotation":[0,0,0],"cubes":[{"origin":[-4,22,5],"size":[8,1,2],"uv":[80,9]}]},{"name":"SaddleL2","pivot":[5,21,2],"rotation":[0,0,0],"cubes":[{"origin":[4.5,13,1],"size":[1,2,2],"uv":[74,0]}]},{"name":"SaddleL","pivot":[5,21,2],"rotation":[0,0,0],"cubes":[{"origin":[4.5,15,1.5],"size":[1,6,1],"uv":[70,0]}]},{"name":"SaddleR2","pivot":[-5,21,2],"rotation":[0,0,0],"cubes":[{"origin":[-5.5,13,1],"size":[1,2,2],"uv":[74,4]}]},{"name":"SaddleR","pivot":[-5,21,2],"rotation":[0,0,0],"cubes":[{"origin":[-5.5,15,1.5],"size":[1,6,1],"uv":[80,0]}]},{"name":"SaddleMouthL","pivot":[0,20,-10],"rotation":[30,0,0],"cubes":[{"origin":[1.5,26,-14],"size":[1,2,2],"uv":[74,13]}]},{"name":"SaddleMouthR","pivot":[0,20,-10],"rotation":[30,0,0],"cubes":[{"origin":[-2.5,26,-14],"size":[1,2,2],"uv":[74,13]}]},{"name":"SaddleMouthLine","pivot":[0,20,-10],"rotation":[0,0,0],"cubes":[{"origin":[2.6,23,-16],"size":[0,3,16],"uv":[44,10]}]},{"name":"SaddleMouthLineR","pivot":[0,20,-10],"rotation":[0,0,0],"cubes":[{"origin":[-2.6,23,-16],"size":[0,3,16],"uv":[44,5]}]},{"name":"Mane","pivot":[0,20,-10],"rotation":[30,0,0],"cubes":[{"origin":[-1,15.5,-5],"size":[2,16,4],"uv":[58,0]}]},{"name":"HeadSaddle","pivot":[0,20,-10],"rotation":[30,0,0],"cubes":[{"origin":[-2.5,25.1,-17],"size":[5,5,12],"uv":[80,12],"inflate":0.05}]}]}},"spawn_egg":{"texture":"spawn_egg","texture_index":23}},"husk":{"identifier":"minecraft:husk","min_engine_version":"1.8.0","materials":{"default":"husk"},"textures":{"default":"textures/entity/zombie/husk"},"geometry":{"default":{"visible_bounds_width":1.5,"visible_bounds_height":2.5,"visible_bounds_offset":[0,1.25,0],"texturewidth":64,"textureheight":32,"bones":[{"name":"body","pivot":[0,24,0],"cubes":[{"origin":[-4,12,-2],"size":[8,12,4],"uv":[16,16]}],"parent":"waist"},{"name":"waist","neverRender":true,"pivot":[0,12,0]},{"name":"head","pivot":[0,24,0],"cubes":[{"origin":[-4,24,-4],"size":[8,8,8],"uv":[0,0]}],"parent":"body"},{"name":"hat","pivot":[0,24,0],"cubes":[{"origin":[-4,24,-4],"size":[8,8,8],"uv":[32,0],"inflate":0.5}],"neverRender":true,"parent":"head"},{"name":"rightArm","pivot":[-5,22,0],"cubes":[{"origin":[-8,12,-2],"size":[4,12,4],"uv":[40,16]}],"parent":"body"},{"name":"rightItem","pivot":[-6,15,1],"neverRender":true,"parent":"rightArm"},{"name":"leftArm","pivot":[5,22,0],"cubes":[{"origin":[4,12,-2],"size":[4,12,4],"uv":[40,16]}],"mirror":true,"parent":"body"},{"name":"rightLeg","pivot":[-1.9,12,0],"cubes":[{"origin":[-3.9,0,-2],"size":[4,12,4],"uv":[0,16]}],"parent":"body"},{"name":"leftLeg","pivot":[1.9,12,0],"cubes":[{"origin":[-0.1,0,-2],"size":[4,12,4],"uv":[0,16]}],"mirror":true,"parent":"body"}]}},"scripts":{"pre_animation":["variable.tcos0 = (Math.cos(query.modified_distance_moved * 38.17) * query.modified_move_speed / variable.gliding_speed_value) * 57.3;"]},"animations":{"humanoid_big_head":{"loop":true,"bones":{"head":{"scale":1.4}}},"look_at_target_default":{"loop":true,"bones":{"head":{"relative_to":{"rotation":"entity"},"rotation":["query.target_x_rotation","query.target_y_rotation",0]}}},"look_at_target_gliding":{"loop":true,"bones":{"head":{"rotation":[-45,"query.target_y_rotation",0]}}},"look_at_target_swimming":{"loop":true,"bones":{"head":{"rotation":["math.lerp(query.target_x_rotation, -45.0, variable.swim_amount)","query.target_y_rotation",0]}}},"move":{"loop":true,"bones":{"leftarm":{"rotation":["variable.tcos0",0,0]},"leftleg":{"rotation":["variable.tcos0 * -1.4",0,0]},"rightarm":{"rotation":["-variable.tcos0",0,0]},"rightleg":{"rotation":["variable.tcos0 * 1.4",0,0]}}},"riding.arms":{"loop":true,"bones":{"leftarm":{"rotation":[-36,0,0]},"rightarm":{"rotation":[-36,0,0]}}},"riding.legs":{"loop":true,"bones":{"leftleg":{"rotation":["-72.0 - this","-18.0 - this","-this"]},"rightleg":{"rotation":["-72.0 - this","18.0 - this","-this"]}}},"holding":{"loop":true,"bones":{"leftarm":{"rotation":["variable.is_holding_left ? (-this * 0.5 - 18.0) : 0.0",0,0]},"rightarm":{"rotation":["variable.is_holding_right ? (-this * 0.5 - 18.0) : 0.0",0,0]}}},"brandish_spear":{"loop":true,"bones":{"rightarm":{"rotation":["this * -0.5 - 157.5 - 22.5 * variable.charge_amount","-this",0]}}},"charging":{"loop":true,"bones":{"rightarm":{"rotation":["22.5 * variable.charge_amount - this","-this",0]}}},"attack.rotations":{"loop":true,"bones":{"body":{"rotation":[0,"math.sin(math.sqrt(variable.attack_time) * 360) * 11.46 - this",0]},"leftarm":{"rotation":["math.sin(math.sqrt(variable.attack_time) * 360) * 11.46",0,0]},"rightarm":{"rotation":["math.sin(1.0 - math.pow(1.0 - variable.attack_time, 3.0) * 180.0) * (variable.is_brandishing_spear ? -1.0 : 1.0 )","variable.is_brandishing_spear ? 0.0 : (math.sin(math.sqrt(variable.attack_time) * 360) * 11.46) * 2.0",0]}}},"sneaking":{"loop":true,"bones":{"body":{"rotation":["0.5 - this",0,0]},"head":{"position":[0,1,0]},"leftarm":{"rotation":[72,0,0]},"leftleg":{"position":[0,-3,4]},"rightarm":{"rotation":[72,0,0]},"rightleg":{"position":[0,-3,4]}}},"bob":{"loop":true,"bones":{"leftarm":{"rotation":[0,0,"((math.cos(query.life_time * 103.2) * 2.865) + 2.865) *-1.0"]},"rightarm":{"rotation":[0,0,"(math.cos(query.life_time * 103.2) * 2.865) + 2.865"]}}},"damage_nearby_mobs":{"loop":true,"bones":{"leftarm":{"rotation":["-45.0-this","-this","-this"]},"leftleg":{"rotation":["45.0-this","-this","-this"]},"rightarm":{"rotation":["45.0-this","-this","-this"]},"rightleg":{"rotation":["-45.0-this","-this","-this"]}}},"bow_and_arrow":{"loop":true,"bones":{"leftarm":{"rotation":["query.target_x_rotation - 90.0 - math.sin(query.life_time * 76.8) * 2.865 - this","query.target_y_rotation + 28.65","-(math.cos(query.life_time * 103.2) * 2.865) - 2.865"]},"rightarm":{"rotation":["query.target_x_rotation - 90.0 + math.sin(query.life_time * 76.8) * 2.865 - this","query.target_y_rotation - 5.73","(math.cos(query.life_time * 103.2) * 2.865) + 2.865"]}}},"use_item_progress":{"loop":true,"bones":{"rightarm":{"rotation":["variable.use_item_startup_progress * -60.0 + variable.use_item_interval_progress * 11.25","variable.use_item_startup_progress * -22.5 + variable.use_item_interval_progress * 11.25","variable.use_item_startup_progress * -5.625 + variable.use_item_interval_progress * 11.25"]}}},"zombie_attack_bare_hand":{"loop":true,"bones":{"leftarm":{"rotation":["-90.0 - ((math.sin(variable.attack_time * 180.0) * 57.3) * 1.2 - (math.sin((1.0 - (1.0 - variable.attack_time) * (1.0 - variable.attack_time)) * 180.0) * 57.3) * 0.4) - (math.sin(query.life_time * 76.776372) * 2.865) - this","5.73 - ((math.sin(variable.attack_time * 180.0) * 57.3) * 0.6) - this","math.cos(query.life_time * 103.13244) * -2.865 - 2.865 - this"]},"rightarm":{"rotation":["90.0 * (variable.is_brandishing_spear - 1.0) - ((math.sin(variable.attack_time * 180.0) * 57.3) * 1.2 - (math.sin((1.0 - (1.0 - variable.attack_time) * (1.0 - variable.attack_time)) * 180.0) * 57.3) * 0.4) + (math.sin(query.life_time * 76.776372) * 2.865) - this","(math.sin(variable.attack_time * 180.0) * 57.3) * 0.6 - 5.73 - this","math.cos(query.life_time * 103.13244) * 2.865 + 2.865 - this"]}}},"swimming":{"loop":true,"bones":{"body":{"position":[0,"variable.swim_amount * -10.0 - this","variable.swim_amount * 9.0 - this"],"rotation":["variable.swim_amount * (90.0 + query.target_x_rotation)",0,0]},"leftarm":{"rotation":["math.lerp(this, -180.0, variable.swim_amount) - (variable.swim_amount * ((math.sin(variable.attack_time * 180.0) * 57.3) * 1.2 - (math.sin((1.0 - (1.0 - variable.attack_time) * (1.0 - variable.attack_time)) * 180.0) * 57.3) * 0.4)) - (variable.swim_amount * (math.sin(query.life_time * 76.776372) * 2.865)) - this","math.lerp(this, 14.325, variable.swim_amount) - this","math.lerp(this, 14.325, variable.swim_amount) - (variable.swim_amount * (math.cos(query.life_time * 103.13244) * 2.865 + 2.865)) - this"]},"leftleg":{"rotation":["math.lerp(this, math.cos(query.life_time * 390.0 + 180.0) * 0.3, variable.swim_amount)",0,0]},"rightarm":{"rotation":["math.lerp(this, -180.0, variable.swim_amount) - (variable.swim_amount * ((math.sin(variable.attack_time * 180.0) * 57.3) * 1.2 - (math.sin((1.0 - (1.0 - variable.attack_time) * (1.0 - variable.attack_time)) * 180.0) * 57.3) * 0.4)) + (variable.swim_amount * (math.sin(query.life_time * 76.776372) * 2.865)) - this","math.lerp(this, 14.325, variable.swim_amount) - this","math.lerp(this, -14.325, variable.swim_amount) + (variable.swim_amount * (math.cos(query.life_time * 103.13244) * 2.865 + 2.865)) - this"]},"rightleg":{"rotation":["math.lerp(this, math.cos(query.life_time * 390.0) * 0.3, variable.swim_amount)",0,0]}}}},"animation_controllers":{"humanoid_baby_big_head":{"initial_state":"default","states":{"baby":{"animations":["humanoid_big_head"],"transitions":[{"default":"!query.is_baby"}]},"default":{"transitions":[{"baby":"query.is_baby"}]}}},"look_at_target":{"initial_state":"default","states":{"default":{"animations":["look_at_target_default"],"transitions":[{"gliding":"query.is_gliding"},{"swimming":"query.is_swimming"}]},"gliding":{"animations":["look_at_target_gliding"],"transitions":[{"swimming":"query.is_swimming"},{"default":"!query.is_gliding"}]},"swimming":{"animations":["look_at_target_swimming"],"transitions":[{"gliding":"query.is_gliding"},{"default":"!query.is_swimming"}]}}},"move":{"initial_state":"default","states":{"default":{"animations":["move"]}}},"riding":{"initial_state":"default","states":{"default":{"transitions":[{"riding":"query.is_riding"}]},"riding":{"animations":["riding.arms","riding.legs"],"transitions":[{"default":"!query.is_riding"}]}}},"holding":{"initial_state":"default","states":{"default":{"animations":["holding"]}}},"brandish_spear":{"initial_state":"default","states":{"brandish_spear":{"animations":["brandish_spear"],"transitions":[{"default":"!variable.is_brandishing_spear"}]},"default":{"transitions":[{"brandish_spear":"variable.is_brandishing_spear"}]}}},"charging":{"initial_state":"default","states":{"charging":{"animations":["charging"],"transitions":[{"default":"!query.is_charging"}]},"default":{"transitions":[{"charging":"query.is_charging"}]}}},"attack":{"initial_state":"default","states":{"attacking":{"animations":["attack.rotations"],"transitions":[{"default":"variable.attack_time < 0.0"}]},"default":{"transitions":[{"attacking":"variable.attack_time >= 0.0"}]}}},"sneaking":{"initial_state":"default","states":{"default":{"transitions":[{"sneaking":"query.is_sneaking"}]},"sneaking":{"animations":["sneaking"],"transitions":[{"default":"!query.is_sneaking"}]}}},"bob":{"initial_state":"default","states":{"default":{"animations":["bob"]}}},"damage_nearby_mobs":{"initial_state":"default","states":{"damage_nearby_mobs":{"animations":["damage_nearby_mobs"],"transitions":[{"default":"!variable.damage_nearby_mobs"}]},"default":{"transitions":[{"damage_nearby_mobs":"variable.damage_nearby_mobs"}]}}},"bow_and_arrow":{"initial_state":"default","states":{"bow_and_arrow":{"animations":["bow_and_arrow"],"transitions":[{"default":"!query.has_target"}]},"default":{"transitions":[{"bow_and_arrow":"query.has_target"}]}}},"use_item_progress":{"initial_state":"default","states":{"default":{"transitions":[{"use_item_progress":"( variable.use_item_interval_progress > 0.0 ) || ( variable.use_item_startup_progress > 0.0 )"}]},"use_item_progress":{"animations":["use_item_progress"],"transitions":[{"default":"( variable.use_item_interval_progress <= 0.0 ) && ( variable.use_item_startup_progress <= 0.0 )"}]}}},"zombie_attack_bare_hand":{"initial_state":"default","states":{"default":{"transitions":[{"is_bare_hand":"variable.is_holding_left != 1.0"}]},"is_bare_hand":{"animations":["zombie_attack_bare_hand"],"transitions":[{"default":"variable.is_holding_left == 1.0"}]}}},"swimming":{"initial_state":"default","states":{"default":{"transitions":[{"is_swimming":"variable.swim_amount > 0.0"}]},"is_swimming":{"animations":["swimming"],"transitions":[{"default":"variable.swim_amount <= 0.0"}]}}}},"render_controllers":["controller.render.husk"],"enable_attachables":true,"spawn_egg":{"texture":"spawn_egg","texture_index":28}},"iron_golem":{"identifier":"minecraft:iron_golem","materials":{"default":"iron_golem"},"textures":{"default":"textures/entity/iron_golem/iron_golem"},"geometry":{"default":{"visible_bounds_width":3,"visible_bounds_height":3,"visible_bounds_offset":[0,1.5,0],"texturewidth":128,"textureheight":128,"bones":[{"name":"body","pivot":[0,31,0],"cubes":[{"origin":[-9,21,-6],"size":[18,12,11],"uv":[0,40]},{"origin":[-4.5,16,-3],"size":[9,5,6],"uv":[0,70],"inflate":0.5}]},{"name":"head","parent":"body","pivot":[0,31,-2],"locators":{"lead":[0,31,-2]},"cubes":[{"origin":[-4,33,-7.5],"size":[8,10,8],"uv":[0,0]},{"origin":[-1,32,-9.5],"size":[2,4,2],"uv":[24,0]}]},{"name":"arm0","parent":"body","pivot":[0,31,0],"cubes":[{"origin":[-13,3.5,-3],"size":[4,30,6],"uv":[60,21]}]},{"name":"arm1","parent":"body","pivot":[0,31,0],"cubes":[{"origin":[9,3.5,-3],"size":[4,30,6],"uv":[60,58]}]},{"name":"leg0","parent":"body","pivot":[-4,13,0],"cubes":[{"origin":[-7.5,0,-3],"size":[6,16,5],"uv":[37,0]}]},{"name":"leg1","parent":"body","mirror":true,"pivot":[5,13,0],"cubes":[{"origin":[1.5,0,-3],"size":[6,16,5],"uv":[60,0]}]}]}},"animations":{"walk":{"loop":true,"bones":{"body":{"rotation":[0,0,"variable.modified_tcos0 / 1.5"]},"head":{"rotation":[0,0,"variable.modified_tcos0 / 1.5"]},"leg0":{"rotation":["variable.modified_tcos0 * 6.0",0,0]},"leg1":{"rotation":["-variable.modified_tcos0 * 6.0",0,0]}}},"move":{"loop":true,"bones":{"arm0":{"rotation":["-variable.modified_tcos0 * 2.0",0,0]},"arm1":{"rotation":["variable.modified_tcos0 * 2.0",0,0]}}},"walk_to_target":{"loop":true,"bones":{"body":{"rotation":[0,0,"2.0 * (math.abs(math.mod(query.modified_distance_moved + 6, 13.0) - 6.5) - 3.25)"]},"head":{"rotation":[0,0,"2.0 * (math.abs(math.mod(query.modified_distance_moved + 6, 13.0) - 6.5) - 3.25)"]},"leg0":{"rotation":["(math.cos(query.modified_distance_moved * 38.17) * 40.0)",0,0]},"leg1":{"rotation":["(math.cos(query.modified_distance_moved * 38.17 + 180) * 40.0)",0,0]}}},"move_to_target":{"loop":true,"bones":{"arm0":{"rotation":["((math.abs(math.mod(query.modified_distance_moved, 13) - 6.5) - 3.25) / 2.25) * 30.0",0,0]},"arm1":{"rotation":["((math.abs(math.mod(query.modified_distance_moved, 13) - 6.5) - 3.25) / 2.25) * -30.0",0,0]}}},"attack":{"loop":true,"bones":{"arm0":{"rotation":["-114 + ((1.5 * math.abs(math.mod(variable.attack_animation_tick - query.frame_alpha, 10) - 5) - 2.5) / 5) * 57.3",0,0]},"arm1":{"rotation":["-114 + ((1.5 * math.abs(math.mod(variable.attack_animation_tick - query.frame_alpha, 10) - 5) - 2.5) / 5) * 57.3",0,0]}}},"flower":{"loop":true,"bones":{"arm0":{"rotation":["-45.8 + ((0.25 * math.abs(math.mod(variable.offer_flower_tick, 70) - 35) - 17.5) / 35)",0,0]}}},"look_at_target":{"loop":true,"bones":{"head":{"relative_to":{"rotation":"entity"},"rotation":["query.target_x_rotation - this","query.target_y_rotation - this",0]}}}},"scripts":{"pre_animation":["variable.modified_tcos0 = Math.clamp(((Math.cos(query.modified_distance_moved * 13.5) * Math.min(query.modified_move_speed, 0.6) / variable.gliding_speed_value) * 25.0), -12.5, 12.5);"],"animate":["look_at_target","move_controller","arm_controller"]},"render_controllers":["controller.render.iron_golem"],"animation_controllers":{"move_controller":{"initial_state":"default","states":{"default":{"animations":[{"walk":"query.modified_move_speed"}],"transitions":[{"has_target":"query.has_target"}]},"has_target":{"animations":[{"walk_to_target":"query.modified_move_speed"}],"transitions":[{"default":"!query.has_target"}]}}},"arm_controller":{"initial_state":"default","states":{"attack":{"animations":["attack"],"transitions":[{"default":"!query.has_target && variable.attack_animation_tick <= 0.0"},{"has_target":"query.has_target && variable.attack_animation_tick <= 0.0"}]},"default":{"animations":["move"],"transitions":[{"attack":"variable.attack_animation_tick > 0.0"},{"flower":"variable.offer_flower_tick"},{"has_target":"query.has_target"}]},"flower":{"animations":["flower"],"transitions":[{"attack":"variable.attack_animation_tick > 0.0"},{"default":"variable.offer_flower_tick <= 0.0"},{"has_target":"query.has_target"}]},"has_target":{"animations":["move_to_target"],"transitions":[{"attack":"variable.attack_animation_tick > 0.0"},{"default":"!query.has_target"},{"flower":"variable.offer_flower_tick"}]}}}}},"leash_knot":{"identifier":"minecraft:leash_knot","materials":{"default":"leash_knot"},"textures":{"default":"textures/entity/lead_knot"},"geometry":{"default":{"bones":[{"name":"knot","cubes":[{"origin":[-3,2,-3],"size":[6,8,6]}]}],"texturewidth":32,"textureheight":32}},"render_controllers":["controller.render.leash_knot"]},"llama":{"identifier":"minecraft:llama","min_engine_version":"1.8.0","materials":{"default":"llama"},"textures":{"creamy":"textures/entity/llama/creamy","white":"textures/entity/llama/white","brown":"textures/entity/llama/brown","gray":"textures/entity/llama/gray","decor_none":"textures/entity/llama/decor/decor_none","decor_white":"textures/entity/llama/decor/white","decor_orange":"textures/entity/llama/decor/orange","decor_magenta":"textures/entity/llama/decor/magenta","decor_light_blue":"textures/entity/llama/decor/light_blue","decor_yellow":"textures/entity/llama/decor/yellow","decor_lime":"textures/entity/llama/decor/lime","decor_pink":"textures/entity/llama/decor/pink","decor_gray":"textures/entity/llama/decor/gray","decor_silver":"textures/entity/llama/decor/light_gray","decor_cyan":"textures/entity/llama/decor/cyan","decor_purple":"textures/entity/llama/decor/purple","decor_blue":"textures/entity/llama/decor/blue","decor_brown":"textures/entity/llama/decor/brown","decor_green":"textures/entity/llama/decor/green","decor_red":"textures/entity/llama/decor/red","decor_black":"textures/entity/llama/decor/black","decor_wandering_trader":"textures/entity/llama/decor/trader_llama"},"geometry":{"default":{"visible_bounds_width":2,"visible_bounds_height":2.5,"visible_bounds_offset":[0,1,0],"texturewidth":128,"textureheight":64,"bones":[{"name":"head","parent":"body","pivot":[0,17,-6],"locators":{"lead":[0,18,-11]},"cubes":[{"origin":[-2,27,-16],"size":[4,4,9],"uv":[0,0]},{"origin":[-4,15,-12],"size":[8,18,6],"uv":[0,14]},{"origin":[-4,33,-10],"size":[3,3,2],"uv":[17,0]},{"origin":[1,33,-10],"size":[3,3,2],"uv":[17,0]}]},{"name":"chest1","parent":"body","pivot":[-8.5,21,3],"rotation":[0,90,0],"cubes":[{"origin":[-11.5,13,3],"size":[8,8,3],"uv":[45,28]}]},{"name":"chest2","parent":"body","pivot":[5.5,21,3],"rotation":[0,90,0],"cubes":[{"origin":[2.5,13,3],"size":[8,8,3],"uv":[45,41]}]},{"name":"body","pivot":[0,19,2],"bind_pose_rotation":[90,0,0],"cubes":[{"origin":[-6,11,-5],"size":[12,18,10],"uv":[29,0]}]},{"name":"leg0","parent":"body","pivot":[-3.5,14,6],"cubes":[{"origin":[-5.5,0,4],"size":[4,14,4],"uv":[29,29]}]},{"name":"leg1","parent":"body","pivot":[3.5,14,6],"cubes":[{"origin":[1.5,0,4],"size":[4,14,4],"uv":[29,29]}]},{"name":"leg2","parent":"body","pivot":[-3.5,14,-5],"cubes":[{"origin":[-5.5,0,-7],"size":[4,14,4],"uv":[29,29]}]},{"name":"leg3","parent":"body","pivot":[3.5,14,-5],"cubes":[{"origin":[1.5,0,-7],"size":[4,14,4],"uv":[29,29]}]}]}},"animations":{"setup":{"loop":true,"bones":{"body":{"rotation":["-this",0,0]}}},"walk":{"anim_time_update":"query.modified_distance_moved","loop":true,"bones":{"leg0":{"rotation":["math.cos(query.anim_time * 38.17) *  80.0",0,0]},"leg1":{"rotation":["math.cos(query.anim_time * 38.17) * -80.0",0,0]},"leg2":{"rotation":["math.cos(query.anim_time * 38.17) * -80.0",0,0]},"leg3":{"rotation":["math.cos(query.anim_time * 38.17) *  80.0",0,0]}}},"look_at_target":{"loop":true,"bones":{"head":{"relative_to":{"rotation":"entity"},"rotation":["query.target_x_rotation - this","query.target_y_rotation - this",0]}}},"baby_transform":{"loop":true,"bones":{"body":{"position":[0,-5.5,-5],"scale":[1.2,1,1]},"head":{"position":[0,2,0],"scale":[1.3,1.2,1.2]},"leg0":{"position":[0,-1,0],"scale":[0.91,0.56,0.91]},"leg1":{"position":[0,-1,0],"scale":[0.91,0.56,0.91]},"leg2":{"position":[0,-1,0],"scale":[0.91,0.56,0.91]},"leg3":{"position":[0,-1,0],"scale":[0.91,0.56,0.91]}}}},"animation_controllers":{"move":{"initial_state":"default","states":{"default":{"animations":["setup",{"walk":"query.modified_move_speed"},"look_at_target"]}}},"baby":{"initial_state":"baby","states":{"baby":{"animations":[{"baby_transform":"query.is_baby"}]}}}},"render_controllers":["controller.render.llama"],"spawn_egg":{"texture":"spawn_egg","texture_index":38}},"llama_spit":{"identifier":"minecraft:llama_spit","materials":{"default":"llama_spit"},"textures":{"default":"textures/entity/llama/spit"},"geometry":{"default":{"visible_bounds_width":1,"visible_bounds_height":1,"visible_bounds_offset":[0,0.5,0],"texturewidth":64,"textureheight":64,"bones":[{"name":"body","pivot":[0,24,0],"cubes":[{"origin":[-4,22,0],"size":[2,2,2],"uv":[0,0]},{"origin":[0,26,0],"size":[2,2,2],"uv":[0,0]},{"origin":[0,22,-4],"size":[2,2,2],"uv":[0,0]},{"origin":[0,22,0],"size":[2,2,2],"uv":[0,0]},{"origin":[2,22,0],"size":[2,2,2],"uv":[0,0]},{"origin":[0,20,0],"size":[2,2,2],"uv":[0,0]},{"origin":[0,22,2],"size":[2,2,2],"uv":[0,0]}]}]}},"animations":{"setup":{"loop":true,"bones":{"body":{"position":[0,-15,0],"rotation":[0,"query.target_y_rotation - 90.0 - this","query.target_x_rotation - this"]}}}},"scripts":{"animate":["setup"]},"render_controllers":["controller.render.llama_spit"]},"magma_cube":{"identifier":"minecraft:magma_cube","materials":{"default":"magma_cube"},"textures":{"default":"textures/entity/slime/magmacube"},"geometry":{"default":{"visible_bounds_width":2.5,"visible_bounds_height":5,"visible_bounds_offset":[0,2.5,0],"texturewidth":64,"textureheight":32,"bones":[{"name":"bodyCube_0","parent":"insideCube","pivot":[0,24,0],"cubes":[{"origin":[-4,7,-4],"size":[8,1,8],"uv":[0,0]}]},{"name":"bodyCube_1","parent":"insideCube","pivot":[0,24,0],"cubes":[{"origin":[-4,6,-4],"size":[8,1,8],"uv":[0,1]}]},{"name":"bodyCube_2","parent":"insideCube","pivot":[0,24,0],"cubes":[{"origin":[-4,5,-4],"size":[8,1,8],"uv":[24,10]}]},{"name":"bodyCube_3","parent":"insideCube","pivot":[0,24,0],"cubes":[{"origin":[-4,4,-4],"size":[8,1,8],"uv":[24,19]}]},{"name":"bodyCube_4","parent":"insideCube","pivot":[0,24,0],"cubes":[{"origin":[-4,3,-4],"size":[8,1,8],"uv":[0,4]}]},{"name":"bodyCube_5","parent":"insideCube","pivot":[0,24,0],"cubes":[{"origin":[-4,2,-4],"size":[8,1,8],"uv":[0,5]}]},{"name":"bodyCube_6","parent":"insideCube","pivot":[0,24,0],"cubes":[{"origin":[-4,1,-4],"size":[8,1,8],"uv":[0,6]}]},{"name":"bodyCube_7","parent":"insideCube","pivot":[0,24,0],"cubes":[{"origin":[-4,0,-4],"size":[8,1,8],"uv":[0,7]}]},{"name":"insideCube","pivot":[0,0,0],"cubes":[{"origin":[-2,2,-2],"size":[4,4,4],"uv":[0,16]}]}]}},"scripts":{"pre_animation":["variable.slime_squish_factor = (query.previous_squish_value + (query.current_squish_value - query.previous_squish_value) * query.frame_alpha);","variable.bounce = 1 / ((variable.slime_squish_factor / (query.variant * 0.5 + 1)) + 1);","variable.horizontal_scale_amount = variable.bounce * query.variant;","variable.vertical_scale_amount = (1 / variable.bounce) * query.variant;"],"scaleX":"variable.horizontal_scale_amount","scaleY":"variable.vertical_scale_amount","scaleZ":"variable.horizontal_scale_amount"},"animations":{"move":{"loop":true,"bones":{"bodycube_0":{"position":[0,"3.0 * (variable.slime_squish_factor < 0.0 ? 0.0 : variable.slime_squish_factor) * 1.7",0]},"bodycube_1":{"position":[0,"2.0 * (variable.slime_squish_factor < 0.0 ? 0.0 : variable.slime_squish_factor) * 1.7",0]},"bodycube_2":{"position":[0,"1.0 * (variable.slime_squish_factor < 0.0 ? 0.0 : variable.slime_squish_factor) * 1.7",0]},"bodycube_4":{"position":[0,"-1.0 * (variable.slime_squish_factor < 0.0 ? 0.0 : variable.slime_squish_factor) * 1.7",0]},"bodycube_5":{"position":[0,"-2.0 * (variable.slime_squish_factor < 0.0 ? 0.0 : variable.slime_squish_factor) * 1.7",0]},"bodycube_6":{"position":[0,"-3.0 * (variable.slime_squish_factor < 0.0 ? 0.0 : variable.slime_squish_factor) * 1.7",0]},"bodycube_7":{"position":[0,"-4.0 * (variable.slime_squish_factor < 0.0 ? 0.0 : variable.slime_squish_factor) * 1.7",0]}}}},"animation_controllers":{"general":{"initial_state":"default","states":{"default":{"animations":["move"]}}}},"render_controllers":["controller.render.magma_cube"],"spawn_egg":{"texture":"spawn_egg","texture_index":20}},"minecart":{"identifier":"minecraft:minecart","min_engine_version":"1.8.0","materials":{"default":"minecart"},"textures":{"default":"textures/entity/minecart"},"geometry":{"default":{"bones":[{"name":"bottom","pivot":[0,6,0],"cubes":[{"origin":[-10,-6.5,-1],"size":[20,16,2],"rotation":[90,0,0],"uv":[0,10]}]},{"name":"back","pivot":[0,0,0],"cubes":[{"origin":[-17,2.5,-1],"size":[16,8,2],"rotation":[0,270,0],"uv":[0,0]}],"parent":"bottom"},{"name":"front","pivot":[0,0,0],"cubes":[{"origin":[1,2.5,-1],"size":[16,8,2],"rotation":[0,90,0],"uv":[0,0]}],"parent":"bottom"},{"name":"right","pivot":[0,0,0],"cubes":[{"origin":[-8,2.5,-8],"size":[16,8,2],"rotation":[0,180,0],"uv":[0,0]}],"parent":"bottom"},{"name":"left","pivot":[0,0,0],"cubes":[{"origin":[-8,2.5,6],"size":[16,8,2],"uv":[0,0]}],"parent":"bottom"}],"texturewidth":64,"textureheight":32}},"scripts":{"pre_animation":["variable.hurt = query.hurt_time - query.frame_alpha;"],"animate":["move"]},"animations":{"move":{"loop":true,"bones":{"bottom":{"position":["variable.rail_offset.x / query.model_scale","variable.rail_offset.y / query.model_scale","variable.rail_offset.z / query.model_scale"],"rotation":["variable.hurt > 0 ? -Math.sin(variable.hurt * 360 / (Math.pi * 2)) * variable.hurt * (((20 * 2 - query.structural_integrity) - query.frame_alpha) < 0 ? 0: (20 * 2 - query.structural_integrity) - query.frame_alpha) / 10 * query.hurt_direction : 0",0,"-variable.rail_rotation.z"]}}}},"render_controllers":["controller.render.minecart"]},"mooshroom":{"identifier":"minecraft:mooshroom","min_engine_version":"1.8.0","materials":{"default":"mooshroom"},"textures":{"default":"textures/entity/cow/red_mooshroom","brown":"textures/entity/cow/brown_mooshroom"},"geometry":{"default":{"visible_bounds_width":2,"visible_bounds_height":2,"visible_bounds_offset":[0,1,0],"texturewidth":64,"textureheight":32,"bones":[{"name":"body","pivot":[0,19,2],"bind_pose_rotation":[90,0,0],"cubes":[{"origin":[-6,11,-5],"size":[12,18,10],"uv":[18,4]},{"origin":[-2,11,-6],"size":[4,6,1],"uv":[52,0]}]},{"name":"head","pivot":[0,20,-8],"locators":{"lead":[0,20,-8]},"cubes":[{"origin":[-4,16,-14],"size":[8,8,6],"uv":[0,0]},{"origin":[-5,22,-12],"size":[1,3,1],"uv":[22,0]},{"origin":[4,22,-12],"size":[1,3,1],"uv":[22,0]}]},{"name":"leg0","parent":"body","pivot":[-4,12,7],"cubes":[{"origin":[-6,0,5],"size":[4,12,4],"uv":[0,16]}]},{"name":"leg1","parent":"body","mirror":true,"pivot":[4,12,7],"cubes":[{"origin":[2,0,5],"size":[4,12,4],"uv":[0,16]}]},{"name":"leg2","parent":"body","pivot":[-4,12,-6],"cubes":[{"origin":[-6,0,-7],"size":[4,12,4],"uv":[0,16]}]},{"name":"leg3","parent":"body","mirror":true,"pivot":[4,12,-6],"cubes":[{"origin":[2,0,-7],"size":[4,12,4],"uv":[0,16]}]}]}},"animations":{"setup":{"loop":true,"bones":{"body":{"rotation":["-this",0,0]}}},"walk":{"anim_time_update":"query.modified_distance_moved","loop":true,"bones":{"leg0":{"rotation":["math.cos(query.anim_time * 38.17) *  80.0",0,0]},"leg1":{"rotation":["math.cos(query.anim_time * 38.17) * -80.0",0,0]},"leg2":{"rotation":["math.cos(query.anim_time * 38.17) * -80.0",0,0]},"leg3":{"rotation":["math.cos(query.anim_time * 38.17) *  80.0",0,0]}}},"look_at_target":{"loop":true,"bones":{"head":{"relative_to":{"rotation":"entity"},"rotation":["query.target_x_rotation - this","query.target_y_rotation - this",0]}}},"baby_transform":{"loop":true,"bones":{"head":{"position":[0,"query.is_baby ? 4.0 : 0.0","query.is_baby ? 4.0 : 0.0"],"scale":"query.is_baby ? 2.0 : 1.0"}}}},"animation_controllers":{"setup":{"initial_state":"default","states":{"default":{"animations":["setup"]}}},"move":{"initial_state":"default","states":{"default":{"animations":[{"walk":"query.modified_move_speed"},"look_at_target"]}}},"baby":{"initial_state":"default","states":{"default":{"animations":["baby_transform"]}}}},"render_controllers":["controller.render.mooshroom"],"spawn_egg":{"texture":"spawn_egg","texture_index":5}},"mule":{"identifier":"minecraft:mule","textures":{"base_brown":"textures/entity/horse/horse_brown","base_white":"textures/entity/horse/horse_white","base_chestnut":"textures/entity/horse/horse_chestnut","base_creamy":"textures/entity/horse/horse_creamy","base_black":"textures/entity/horse/horse_black","base_gray":"textures/entity/horse/horse_gray","base_darkbrown":"textures/entity/horse/horse_darkbrown","markings_none":"textures/entity/horse/horse_markings_none","markings_white":"textures/entity/horse/horse_markings_white","markings_whitefield":"textures/entity/horse/horse_markings_whitefield","markings_whitedots":"textures/entity/horse/horse_markings_whitedots","markings_blackdots":"textures/entity/horse/horse_markings_blackdots","mule":"textures/entity/horse/mule","donkey":"textures/entity/horse/donkey","skeleton":"textures/entity/horse/horse_skeleton","zombie":"textures/entity/horse/horse_zombie","armor_none":"textures/entity/horse/armor/horse_armor_none","armor_leather":"textures/entity/horse/armor/horse_armor_leather","armor_iron":"textures/entity/horse/armor/horse_armor_iron","armor_gold":"textures/entity/horse/armor/horse_armor_gold","armor_diamond":"textures/entity/horse/armor/horse_armor_diamond"},"geometry":{"default":{"visible_bounds_width":2,"visible_bounds_height":3,"visible_bounds_offset":[0,1,0],"texturewidth":128,"textureheight":128,"bones":[{"name":"Body","pivot":[0,13,9],"rotation":[0,0,0],"cubes":[{"origin":[-5,11,-10],"size":[10,10,24],"uv":[0,34]}]},{"name":"TailA","pivot":[0,21,14],"rotation":[-65,0,0],"cubes":[{"origin":[-1,20,14],"size":[2,2,3],"uv":[44,0]}]},{"name":"TailB","pivot":[0,21,14],"rotation":[-65,0,0],"cubes":[{"origin":[-1.5,19,17],"size":[3,4,7],"uv":[38,7]}]},{"name":"TailC","pivot":[0,21,14],"rotation":[-80.34,0,0],"cubes":[{"origin":[-1.5,21.5,23],"size":[3,4,7],"uv":[24,3]}]},{"name":"Leg1A","pivot":[4,15,11],"rotation":[0,0,0],"cubes":[{"origin":[1.5,8,8.5],"size":[4,9,5],"uv":[78,29]}]},{"name":"Leg1B","pivot":[4,8,11],"rotation":[0,0,0],"cubes":[{"origin":[2,3,9.5],"size":[3,5,3],"uv":[78,43]}]},{"name":"Leg1C","pivot":[4,8,11],"rotation":[0,0,0],"cubes":[{"origin":[1.5,-0.1,9],"size":[4,3,4],"uv":[78,51]}]},{"name":"Leg2A","pivot":[-4,15,11],"rotation":[0,0,0],"cubes":[{"origin":[-5.5,8,8.5],"size":[4,9,5],"uv":[96,29]}]},{"name":"Leg2B","pivot":[-4,8,11],"rotation":[0,0,0],"cubes":[{"origin":[-5,3,9.5],"size":[3,5,3],"uv":[96,43]}]},{"name":"Leg2C","pivot":[-4,8,11],"rotation":[0,0,0],"cubes":[{"origin":[-5.5,-0.1,9],"size":[4,3,4],"uv":[96,51]}]},{"name":"Leg3A","pivot":[4,15,-8],"rotation":[0,0,0],"cubes":[{"origin":[2.1,8,-10.1],"size":[3,8,4],"uv":[44,29]}]},{"name":"Leg3B","pivot":[4,8,-8],"rotation":[0,0,0],"cubes":[{"origin":[2.1,3,-9.6],"size":[3,5,3],"uv":[44,41]}]},{"name":"Leg3C","pivot":[4,8,-8],"rotation":[0,0,0],"cubes":[{"origin":[1.6,-0.1,-10.1],"size":[4,3,4],"uv":[44,51]}]},{"name":"Leg4A","pivot":[-4,15,-8],"rotation":[0,0,0],"cubes":[{"origin":[-5.1,8,-10.1],"size":[3,8,4],"uv":[60,29]}]},{"name":"Leg4B","pivot":[-4,8,-8],"rotation":[0,0,0],"cubes":[{"origin":[-5.1,3,-9.6],"size":[3,5,3],"uv":[60,41]}]},{"name":"Leg4C","pivot":[-4,8,-8],"rotation":[0,0,0],"cubes":[{"origin":[-5.6,-0.1,-10.1],"size":[4,3,4],"uv":[60,51]}]},{"name":"Head","pivot":[0,20,-10],"rotation":[30,0,0],"cubes":[{"origin":[-2.5,25,-11.5],"size":[5,5,7],"uv":[0,0]}]},{"name":"UMouth","pivot":[0,20.05,-10],"rotation":[30,0,0],"cubes":[{"origin":[-2,27.05,-17],"size":[4,3,6],"uv":[24,18]}]},{"name":"LMouth","pivot":[0,20,-10],"rotation":[30,0,0],"cubes":[{"origin":[-2,25,-16.5],"size":[4,2,5],"uv":[24,27]}]},{"name":"Ear1","pivot":[0,20,-10],"rotation":[30,0,0],"cubes":[{"origin":[0.45,29,-6],"size":[2,3,1],"uv":[0,0]}]},{"name":"Ear2","pivot":[0,20,-10],"rotation":[30,0,0],"cubes":[{"origin":[-2.45,29,-6],"size":[2,3,1],"uv":[0,0]}]},{"name":"MuleEarL","pivot":[0,20,-10],"rotation":[30,0,15],"cubes":[{"origin":[-2,29,-6],"size":[2,7,1],"uv":[0,12]}]},{"name":"MuleEarR","pivot":[0,20,-10],"rotation":[30,0,-15],"cubes":[{"origin":[0,29,-6],"size":[2,7,1],"uv":[0,12]}]},{"name":"Neck","pivot":[0,20,-10],"rotation":[30,0,0],"cubes":[{"origin":[-2.05,15.8,-12],"size":[4,14,8],"uv":[0,12]}]},{"name":"Bag1","pivot":[-7.5,21,10],"rotation":[0,90,0],"cubes":[{"origin":[-10.5,13,10],"size":[8,8,3],"uv":[0,34]}]},{"name":"Bag2","pivot":[4.5,21,10],"rotation":[0,90,0],"cubes":[{"origin":[1.5,13,10],"size":[8,8,3],"uv":[0,47]}]},{"name":"Saddle","pivot":[0,22,2],"rotation":[0,0,0],"cubes":[{"origin":[-5,21,-1],"size":[10,1,8],"uv":[80,0]}]},{"name":"SaddleB","pivot":[0,22,2],"rotation":[0,0,0],"cubes":[{"origin":[-1.5,22,-1],"size":[3,1,2],"uv":[106,9]}]},{"name":"SaddleC","pivot":[0,22,2],"rotation":[0,0,0],"cubes":[{"origin":[-4,22,5],"size":[8,1,2],"uv":[80,9]}]},{"name":"SaddleL2","pivot":[5,21,2],"rotation":[0,0,0],"cubes":[{"origin":[4.5,13,1],"size":[1,2,2],"uv":[74,0]}]},{"name":"SaddleL","pivot":[5,21,2],"rotation":[0,0,0],"cubes":[{"origin":[4.5,15,1.5],"size":[1,6,1],"uv":[70,0]}]},{"name":"SaddleR2","pivot":[-5,21,2],"rotation":[0,0,0],"cubes":[{"origin":[-5.5,13,1],"size":[1,2,2],"uv":[74,4]}]},{"name":"SaddleR","pivot":[-5,21,2],"rotation":[0,0,0],"cubes":[{"origin":[-5.5,15,1.5],"size":[1,6,1],"uv":[80,0]}]},{"name":"SaddleMouthL","pivot":[0,20,-10],"rotation":[30,0,0],"cubes":[{"origin":[1.5,26,-14],"size":[1,2,2],"uv":[74,13]}]},{"name":"SaddleMouthR","pivot":[0,20,-10],"rotation":[30,0,0],"cubes":[{"origin":[-2.5,26,-14],"size":[1,2,2],"uv":[74,13]}]},{"name":"SaddleMouthLine","pivot":[0,20,-10],"rotation":[0,0,0],"cubes":[{"origin":[2.6,23,-16],"size":[0,3,16],"uv":[44,10]}]},{"name":"SaddleMouthLineR","pivot":[0,20,-10],"rotation":[0,0,0],"cubes":[{"origin":[-2.6,23,-16],"size":[0,3,16],"uv":[44,5]}]},{"name":"Mane","pivot":[0,20,-10],"rotation":[30,0,0],"cubes":[{"origin":[-1,15.5,-5],"size":[2,16,4],"uv":[58,0]}]},{"name":"HeadSaddle","pivot":[0,20,-10],"rotation":[30,0,0],"cubes":[{"origin":[-2.5,25.1,-17],"size":[5,5,12],"uv":[80,12],"inflate":0.05}]}]}},"spawn_egg":{"texture":"spawn_egg","texture_index":31}},"ocelot":{"identifier":"minecraft:ocelot","min_engine_version":"1.8.0","materials":{"default":"ocelot"},"textures":{"black":"textures/entity/cat/black","red":"textures/entity/cat/red","siamese":"textures/entity/cat/siamese","wild":"textures/entity/cat/ocelot"},"geometry":{"default":{"visible_bounds_width":2.5,"visible_bounds_height":1,"visible_bounds_offset":[0,0.5,0],"texturewidth":64,"textureheight":32,"bones":[{"pivot":[0,9,-9],"locators":{"lead":[0,9,-9]},"cubes":[{"origin":[-2.5,7,-12],"size":[5,4,5],"uv":[0,0]},{"origin":[-1.5,7.01562,-13],"size":[3,2,2],"uv":[0,24]},{"origin":[-2,11,-9],"size":[1,1,2],"uv":[0,10]},{"origin":[1,11,-9],"size":[1,1,2],"uv":[6,10]}],"name":"head","parent":"body"},{"pivot":[0,7,1],"bind_pose_rotation":[90,0,0],"cubes":[{"origin":[-2,-1,-2],"size":[4,16,6],"uv":[20,0]}],"name":"body"},{"pivot":[0,9,8],"bind_pose_rotation":[90,0,0],"cubes":[{"origin":[-0.5,1,8],"size":[1,8,1],"uv":[0,15]}],"name":"tail1","parent":"body"},{"pivot":[0,9,16],"bind_pose_rotation":[90,0,0],"cubes":[{"origin":[-0.5,1,16],"size":[1,8,1],"uv":[4,15]}],"name":"tail2","parent":"tail1"},{"pivot":[1.1,6,7],"cubes":[{"origin":[0.1,0,6],"size":[2,6,2],"uv":[8,13]}],"name":"backLegL","parent":"body"},{"pivot":[-1.1,6,7],"cubes":[{"origin":[-2.1,0,6],"size":[2,6,2],"uv":[8,13]}],"name":"backLegR","parent":"body"},{"pivot":[1.2,10,-4],"cubes":[{"origin":[0.2,0.2,-5],"size":[2,10,2],"uv":[40,0]}],"name":"frontLegL","parent":"body"},{"pivot":[-1.2,10,-4],"cubes":[{"origin":[-2.2,0.2,-5],"size":[2,10,2],"uv":[40,0]}],"name":"frontLegR","parent":"body"}]}},"animations":{"sneak":{"loop":true,"bones":{"backlegl":{"position":[0,"1.0 - this",0],"rotation":["math.cos(query.modified_distance_moved * 38.17) * 57.3 * query.modified_move_speed - this",0,0]},"backlegr":{"position":[0,"1.0 - this",0],"rotation":["math.cos(query.modified_distance_moved * 38.17 + 180.0) * 57.3 * query.modified_move_speed - this",0,0]},"body":{"position":[0,-1,0]},"frontlegl":{"position":[0,"1.0 - this",0],"rotation":["math.cos(query.modified_distance_moved * 38.17 + 180.0) * 57.3 * query.modified_move_speed - this",0,0]},"frontlegr":{"position":[0,"1.0 - this",0],"rotation":["math.cos(query.modified_distance_moved * 38.17) * 57.3 * query.modified_move_speed - this",0,0]},"head":{"position":[0,-1,0]},"tail1":{"position":[0,"1.0 - this",0]},"tail2":{"rotation":["62.0 + math.cos(query.modified_distance_moved * 57.3) * 27.0 * query.modified_move_speed - this",0,0]}}},"walk":{"loop":true,"bones":{"backlegl":{"rotation":["math.cos(query.modified_distance_moved * 38.17) * 57.3 * query.modified_move_speed - this",0,0]},"backlegr":{"rotation":["math.cos(query.modified_distance_moved * 38.17 + 180.0) * 57.3 * query.modified_move_speed - this",0,0]},"frontlegl":{"rotation":["math.cos(query.modified_distance_moved * 38.17 + 180.0) * 57.3 * query.modified_move_speed - this",0,0]},"frontlegr":{"rotation":["math.cos(query.modified_distance_moved * 38.17) * 57.3 * query.modified_move_speed - this",0,0]},"tail1":{"rotation":["-51.57 - this",0,0]},"tail2":{"rotation":["62.0 + math.cos(query.modified_distance_moved * 57.3) * 45.0 * query.modified_move_speed - this",0,0]}}},"sprint":{"loop":true,"bones":{"backlegl":{"rotation":["math.cos(query.modified_distance_moved * 38.17) * 57.3 * query.modified_move_speed - this",0,0]},"backlegr":{"rotation":["math.cos(query.modified_distance_moved * 38.17 + 17.19) * 57.3 * query.modified_move_speed - this",0,0]},"frontlegl":{"rotation":["math.cos(query.modified_distance_moved * 38.17 + 197.19) * 57.3 * query.modified_move_speed - this",0,0]},"frontlegr":{"rotation":["math.cos(query.modified_distance_moved * 38.17 + 180.0) * 57.3 * query.modified_move_speed - this",0,0]},"tail1":{"rotation":["-this",0,0]},"tail2":{"rotation":["62.0 + math.cos(query.modified_distance_moved * 57.3) * 18.0 * query.modified_move_speed - this",0,0]}}},"sit":{"loop":true,"bones":{"backlegl":{"position":[0,"-2.0 - this","6.0 - this"],"rotation":[-45,0,0]},"backlegr":{"position":[0,"-2.0 - this","6.0 - this"],"rotation":["-45 - this",0,0]},"body":{"rotation":["-45 - this",0,0]},"frontlegl":{"position":[0,"-1.5 - this","-7.0 - this"],"rotation":["42.15 - this",0,0]},"frontlegr":{"position":[0,"-1.5 - this","-7.0 - this"],"rotation":["42.15 - this",0,0]},"head":{"position":[0,-2,0]},"tail1":{"position":[0,0,0],"rotation":["45 - this",0,0]},"tail2":{"position":[0,0,0],"rotation":["45 - this",0,0]}}},"look_at_target":{"loop":true,"bones":{"head":{"relative_to":{"rotation":"entity"},"rotation":["query.target_x_rotation - this","query.target_y_rotation - this",0]}}},"baby_transform":{"loop":true,"bones":{"head":{"scale":1.5}}}},"animation_controllers":{"move":{"initial_state":"sitting","states":{"sitting":{"animations":["sit"],"transitions":[{"sneaking":"variable.state == 0"},{"sprinting":"variable.state == 1"},{"walking":"variable.state == 3"}]},"sneaking":{"animations":["sneak"],"transitions":[{"sprinting":"variable.state == 1"},{"sitting":"variable.state == 2"},{"walking":"variable.state == 3"}]},"sprinting":{"animations":["sprint"],"transitions":[{"sneaking":"variable.state == 0"},{"sitting":"variable.state == 2"},{"walking":"variable.state == 3"}]},"walking":{"animations":["walk"],"transitions":[{"sneaking":"variable.state == 0"},{"sprinting":"variable.state == 1"},{"sitting":"variable.state == 2"}]}}},"baby":{"initial_state":"baby","states":{"baby":{"animations":[{"baby_transform":"query.is_baby"}]}}},"look_at_target":{"initial_state":"default","states":{"default":{"animations":["look_at_target"]}}}},"render_controllers":["controller.render.ocelot"],"spawn_egg":{"texture":"spawn_egg","texture_index":16}},"panda":{"identifier":"minecraft:panda","materials":{"default":"panda"},"textures":{"default":"textures/entity/panda/panda","lazy":"textures/entity/panda/lazy_panda","worried":"textures/entity/panda/worried_panda","playful":"textures/entity/panda/playful_panda","brown":"textures/entity/panda/brown_panda","weak":"textures/entity/panda/weak_panda","aggressive":"textures/entity/panda/aggressive_panda"},"geometry":{"default":{"texturewidth":64,"textureheight":64,"bones":[{"name":"head","parent":"body","pivot":[0,12.5,-17],"locators":{"lead":[0,14,-16]},"cubes":[{"origin":[-6.5,7.5,-21],"size":[13,10,9],"uv":[0,6]},{"origin":[-3.5,7.5,-23],"size":[7,5,2],"uv":[45,16]},{"origin":[-8.5,16.5,-18],"size":[5,4,1],"uv":[52,25]},{"origin":[3.5,16.5,-18],"size":[5,4,1],"uv":[52,25]}]},{"name":"body","pivot":[0,14,0],"bind_pose_rotation":[90,0,0],"cubes":[{"origin":[-9.5,1,-6.5],"size":[19,26,13],"uv":[0,25]}]},{"name":"leg0","parent":"body","pivot":[-5.5,9,9],"cubes":[{"origin":[-8.5,0,6],"size":[6,9,6],"uv":[40,0]}]},{"name":"leg1","parent":"body","pivot":[5.5,9,9],"cubes":[{"origin":[2.5,0,6],"size":[6,9,6],"uv":[40,0]}]},{"name":"leg2","parent":"body","pivot":[-5.5,9,-9],"cubes":[{"origin":[-8.5,0,-12],"size":[6,9,6],"uv":[40,0]}]},{"name":"leg3","parent":"body","pivot":[5.5,9,-9],"cubes":[{"origin":[2.5,0,-12],"size":[6,9,6],"uv":[40,0]}]}]}},"animations":{"unhappy":{"loop":true,"bones":{"head":{"rotation":[0,"(math.sin(query.life_time * 327.6) * 20) - this","(math.sin(query.life_time * 327.6) * 20) - this"]},"leg2":{"rotation":["(math.sin(query.life_time * 343.8) * -43) - this",0,0]},"leg3":{"rotation":["(math.sin(query.life_time * 343.8) * 43) - this",0,0]}}},"sneezing":{"loop":true,"bones":{"head":{"rotation":["(query.sneeze_counter < 15) ? (-45 * (query.sneeze_counter / 14)) : (-45 + (9 * (query.sneeze_counter - 15)) - this)",0,0]}}},"walk":{"anim_time_update":"query.modified_distance_moved","loop":true,"bones":{"leg0":{"rotation":["math.cos(query.anim_time * 38.17) *  80.0",0,0]},"leg1":{"rotation":["math.cos(query.anim_time * 38.17) * -80.0",0,0]},"leg2":{"rotation":["math.cos(query.anim_time * 38.17) * -80.0",0,0]},"leg3":{"rotation":["math.cos(query.anim_time * 38.17) *  80.0",0,0]}}},"look_at_target":{"loop":true,"bones":{"head":{"relative_to":{"rotation":"entity"},"rotation":["query.target_x_rotation - this","query.target_y_rotation - this",0]}}},"baby_transform":{"loop":true,"bones":{"body":{"position":[0,1.77,0],"scale":[1.15,1.15,1]},"head":{"position":[0,-0.18,0.15],"scale":1.8}}},"sitting":{"loop":true,"bones":{"body":{"position":[0,"-2.15 -10 -this",0],"rotation":["(query.is_scared * math.cos(query.life_time * 71.62) * 16.2) + (query.sit_amount * -90) - this",0,0]},"head":{"rotation":["query.is_eating ? (90.0 + 11.5 * math.sin(query.life_time * 750)) : (query.sit_amount * (100 - this)) - this",0,0]},"leg0":{"rotation":[0,0,"32.7 - this"]},"leg1":{"rotation":[0,0,"-32.7 - this"]},"leg2":{"rotation":["(query.is_eating ? (-23 - (16.5 * math.sin(query.life_time * 750))) : 0) - this",0,-15]},"leg3":{"rotation":["(query.is_eating ? (-23 - (16.5 * math.sin(query.life_time * 750))) : 0) - this",0,15]}}},"rolling":{"loop":true,"bones":{"body":{"rotation":["(query.roll_counter / 32) * 360",0,0]},"head":{"rotation":["(this * -118) + query.roll_counter - this",0,0]},"leg0":{"rotation":["math.sin(query.life_time * 60 * (query.is_baby ? 0.95 : 0.5) * 57.3) * 8.6 - this",0,0]},"leg1":{"rotation":["math.sin(query.life_time * 60 * (query.is_baby ? 0.95 : 0.5) * 57.3) * -8.6 - this",0,0]},"leg2":{"rotation":["math.sin(query.life_time * 60 * (query.is_baby ? 0.95 : 0.5) * 57.3) * -8.6 - this",0,0]},"leg3":{"rotation":["math.sin(query.life_time * 60 * (query.is_baby ? 0.95 : 0.5) * 57.3) * 8.6 - this",0,0]}}},"lying":{"loop":true,"bones":{"body":{"position":[0,"(query.is_baby ? -8.8 : -7.67) * query.lie_amount -10 - this",0],"rotation":["query.lie_amount * -180 - this",0,0]},"head":{"rotation":["(query.lie_amount * 90) - this",0,0]},"leg0":{"rotation":["math.sin(query.life_time * 206.28) * -17.2 - this",0,0]},"leg1":{"rotation":["math.sin(query.life_time * 263.58) * 17.2 - this",0,0]},"leg2":{"rotation":["math.sin(query.life_time * 172) * 17.2 - this",0,0]},"leg3":{"rotation":["math.sin(query.life_time * 229.2) * -17.2 - this",0,0]}}}},"animation_controllers":{"move":{"initial_state":"default","states":{"default":{"animations":[{"walk":"query.modified_move_speed"},"look_at_target"],"transitions":[{"rolling":"query.roll_counter > 0"},{"sitting":"query.sit_amount > 0"},{"lying":"query.lie_amount > 0"}]},"lying":{"animations":["lying"],"transitions":[{"default":"query.lie_amount <= 0"},{"rolling":"query.roll_counter > 0"},{"sitting":"query.sit_amount > 0"}]},"rolling":{"animations":["rolling"],"transitions":[{"default":"query.roll_counter <= 0"},{"sitting":"query.sit_amount > 0"},{"lying":"query.lie_amount > 0"}]},"sitting":{"animations":["sitting"],"transitions":[{"default":"query.sit_amount <= 0"},{"rolling":"query.roll_counter > 0"},{"lying":"query.lie_amount > 0"}]}}},"unhappy":{"initial_state":"baby","states":{"baby":{"animations":[{"unhappy":"query.unhappy_counter"}]}}},"sneezing":{"initial_state":"baby","states":{"baby":{"animations":[{"sneezing":"query.sneeze_counter"}]}}},"baby":{"initial_state":"baby","states":{"baby":{"animations":[{"baby_transform":"query.is_baby"}]}}}},"render_controllers":["controller.render.panda"],"spawn_egg":{"texture":"spawn_egg","texture_index":54}},"parrot":{"identifier":"minecraft:parrot","materials":{"default":"parrot"},"textures":{"blue":"textures/entity/parrot/parrot_blue","green":"textures/entity/parrot/parrot_green","red_blue":"textures/entity/parrot/parrot_red_blue","yellow_blue":"textures/entity/parrot/parrot_yellow_blue","grey":"textures/entity/parrot/parrot_grey"},"geometry":{"default":{"visible_bounds_width":1,"visible_bounds_height":1,"visible_bounds_offset":[0,0.5,0],"texturewidth":32,"textureheight":32,"bones":[{"name":"head","parent":"body","pivot":[0,8.3,-2.8],"locators":{"lead":[0,6,-4]},"cubes":[{"origin":[-1,6.8,-3.8],"size":[2,3,2],"uv":[2,2]}]},{"name":"head2","parent":"head","pivot":[0,26,-1],"cubes":[{"origin":[-1,9.8,-5.8],"size":[2,1,4],"uv":[10,0]}]},{"name":"beak1","parent":"head","pivot":[0,24.5,-1.5],"cubes":[{"origin":[-0.5,7.8,-4.7],"size":[1,2,1],"uv":[11,7]}]},{"name":"beak2","parent":"head","pivot":[0,25.8,-2.5],"cubes":[{"origin":[-0.5,8.1,-5.7],"size":[1,1.7,1],"uv":[16,7]}]},{"name":"body","pivot":[0,7.5,-3],"bind_pose_rotation":[28.287,0,0],"cubes":[{"origin":[-1.5,1.5,-4.5],"size":[3,6,3],"uv":[2,8]}]},{"name":"tail","parent":"body","pivot":[0,2.9,1.2],"cubes":[{"origin":[-1.5,-0.1,0.2],"size":[3,4,1],"uv":[22,1]}]},{"name":"wing0","parent":"body","pivot":[1.5,7.1,-2.8],"cubes":[{"origin":[1,2.1,-4.3],"size":[1,5,3],"uv":[19,8]}]},{"name":"wing1","parent":"body","pivot":[-1.5,7.1,-2.8],"cubes":[{"origin":[-2,2.1,-4.3],"size":[1,5,3],"uv":[19,8]}]},{"name":"feather","parent":"head","pivot":[0,10.1,0.2],"bind_pose_rotation":[-12.685,0,0],"cubes":[{"origin":[0,9.1,-4.9],"size":[0,5,4],"uv":[2,18]}]},{"name":"leg0","parent":"body","pivot":[1.5,1,-0.5],"cubes":[{"origin":[0.5,-0.5,-1.5],"size":[1,2,1],"uv":[14,18]}]},{"name":"leg1","parent":"body","pivot":[-0.5,1,-0.5],"cubes":[{"origin":[-1.5,-0.5,-1.5],"size":[1,2,1],"uv":[14,18]}]}]}},"scripts":{"pre_animation":["variable.state = query.is_dancing ? 3 : (query.is_sitting ? 2 : (!query.is_on_ground && !query.is_jumping && !query.is_riding ? 0 : 1));","variable.dance.x = Math.cos(query.life_time * 57.3 * 20.0);","variable.dance.y = -Math.sin(query.life_time * 57.3 * 20.0);","variable.wing_flap = ((math.sin(query.wing_flap_position * 57.3) + 1) * query.wing_flap_speed);"]},"animations":{"moving":{"loop":true,"bones":{"body":{"position":[0,"variable.wing_flap * 0.3",0]},"tail":{"rotation":["60.0 + math.cos(query.anim_time * 38.17) * 17.0 - this",0,0]},"wing0":{"rotation":[0,0,"-5.0 - variable.wing_flap * 57.3"]},"wing1":{"rotation":[0,0,"5.0 + variable.wing_flap * 57.3"]}}},"base":{"loop":true,"bones":{"body":{"position":["-this",0,0],"rotation":["-this",0,0]},"feather":{"rotation":["-this",0,0]},"head":{"position":["-this",0,0],"rotation":[0,0,"-this"]},"leg0":{"position":[0,"-6.0-this",-0.5],"rotation":["-16.713-this",0,"-this"]},"leg1":{"position":[0,"-6.0-this",-0.5],"rotation":["-16.713-this",0,"-this"]},"tail":{"position":["-this",0,0]},"wing0":{"position":["1.5-this",0,0],"rotation":["-40.0-this","-180.0-this",0]},"wing1":{"position":["-1.5-this",0,0],"rotation":["-40.0-this","-180.0-this",0]}}},"dance":{"loop":true,"bones":{"body":{"position":["variable.dance.x-this","variable.dance.y",0]},"head":{"rotation":["-this","-this","variable.dance.y*23.0 - this"]},"leg0":{"position":["-variable.dance.x","-variable.dance.y",0],"rotation":[0,0,"-20.0 - this"]},"leg1":{"position":["-variable.dance.x","-variable.dance.y",0],"rotation":[0,0,"20.0 - this"]},"tail":{"rotation":["60.0 - this",0,0]},"wing0":{"rotation":[0,0,"-5.0 - variable.wing_flap"]},"wing1":{"rotation":[0,0,"5.0 + variable.wing_flap"]}}},"sitting":{"loop":true,"bones":{"body":{"position":[0,-1.9,0]},"leg0":{"rotation":[90,0,0]},"leg1":{"rotation":[90,0,0]},"tail":{"rotation":["90.0 - this",0,0]},"wing0":{"rotation":[0,0,"-5.0-this"]},"wing1":{"rotation":[0,0,"5.0-this"]}}},"flying":{"loop":true,"bones":{"leg0":{"rotation":["math.cos(query.anim_time * 38.17) * 80.0 * query.modified_move_speed",0,0]},"leg1":{"rotation":["math.cos(query.anim_time * 38.17) * -80.0 * query.modified_move_speed",0,0]}}},"standing":{"loop":true,"bones":{"leg0":{"rotation":[20,0,0]},"leg1":{"rotation":[20,0,0]}}},"look_at_target":{"loop":true,"bones":{"head":{"relative_to":{"rotation":"entity"},"rotation":["query.target_x_rotation - this","query.target_y_rotation - this",0]}}}},"animation_controllers":{"setup":{"initial_state":"default","states":{"default":{"animations":["look_at_target","base"]}}},"move":{"initial_state":"dancing","states":{"dancing":{"animations":["dance"],"transitions":[{"flying":"variable.state == 0"},{"standing":"variable.state == 1"},{"sitting":"variable.state == 2"}]},"flying":{"animations":["moving","flying"],"transitions":[{"standing":"variable.state == 1"},{"sitting":"variable.state == 2"},{"dancing":"variable.state == 3"}]},"sitting":{"animations":["sitting"],"transitions":[{"flying":"variable.state == 0"},{"standing":"variable.state == 1"},{"dancing":"variable.state == 3"}]},"standing":{"animations":["moving","standing"],"transitions":[{"flying":"variable.state == 0"},{"sitting":"variable.state == 2"},{"dancing":"variable.state == 3"}]}}}},"render_controllers":["controller.render.parrot"],"spawn_egg":{"texture":"spawn_egg","texture_index":43}},"phantom":{"identifier":"minecraft:phantom","materials":{"default":"phantom","invisible":"phantom_invisible"},"textures":{"default":"textures/entity/phantom"},"geometry":{"default":{"texturewidth":64,"textureheight":64,"bones":[{"name":"body","pivot":[0,24,0],"bind_pose_rotation":[0,0,0],"cubes":[{"origin":[-3,23,-8],"size":[5,3,9],"uv":[0,8]}]},{"name":"wing0","pivot":[2,26,-8],"bind_pose_rotation":[0,0,5.7],"cubes":[{"origin":[2,24,-8],"size":[6,2,9],"uv":[23,12]}],"parent":"body"},{"name":"wingtip0","pivot":[8,26,-8],"bind_pose_rotation":[0,0,5.7],"locators":{"left_wing":[21,26,0]},"cubes":[{"origin":[8,25,-8],"size":[13,1,9],"uv":[16,24]}],"parent":"wing0"},{"name":"wing1","pivot":[-3,26,-8],"bind_pose_rotation":[0,0,-5.7],"mirror":true,"cubes":[{"origin":[-9,24,-8],"size":[6,2,9],"uv":[23,12]}],"parent":"body"},{"name":"wingtip1","pivot":[-9,24,-8],"bind_pose_rotation":[0,0,-5.7],"locators":{"right_wing":[-22,24,0]},"mirror":true,"cubes":[{"origin":[-22,25,-8],"size":[13,1,9],"uv":[16,24]}],"parent":"wing1"},{"name":"head","pivot":[0,23,-7],"bind_pose_rotation":[11.5,0,0],"cubes":[{"origin":[-4,22,-12],"size":[7,3,5],"uv":[0,0]}],"parent":"body"},{"name":"tail","pivot":[0,26,1],"bind_pose_rotation":[0,0,0],"cubes":[{"origin":[-2,24,1],"size":[3,2,6],"uv":[3,20]}],"parent":"body"},{"name":"tailtip","pivot":[0,25.5,7],"bind_pose_rotation":[0,0,0],"cubes":[{"origin":[-1,24.5,7],"size":[1,1,6],"uv":[4,29]}],"parent":"tail"}]}},"scripts":{"initialize":["variable.runtimeid = 0;","variable.tailrotx = -5.0;","variable.wingrotz = 0.0;"],"animate":["phantom_base_pose_controller","move"]},"animations":{"phantom_base_pose":{"loop":true,"bones":{"body":{"position":[0,-20,0],"rotation":["-query.target_x_rotation",0,0]}}},"move":{"loop":true,"start_delay":"math.random(0, 2.417)","animation_length":2.417,"bones":{"tail":{"rotation":["-5.0 * Math.cos(297.9380535 * query.anim_time) - 5.0",0,0]},"tailtip":{"rotation":["-5.0 * Math.cos(297.9380535 * query.anim_time) - 5.0",0,0]},"wing0":{"rotation":[0,0,"16.0 * Math.cos(148.9690267 * query.anim_time)"]},"wing1":{"rotation":[0,0,"-16.0 * Math.cos(148.9690267 * query.anim_time)"]},"wingtip0":{"rotation":[0,0,"16.0 * Math.cos(148.9690267 * query.anim_time)"]},"wingtip1":{"rotation":[0,0,"-16.0 * Math.cos(148.9690267 * query.anim_time)"]}},"sound_effects":{"1.4":{"effect":"flap"}}}},"particle_effects":{"wing_dust":"minecraft:phantom_trail_particle"},"sound_effects":{"flap":"mob.phantom.flap"},"render_controllers":["controller.render.phantom"],"spawn_egg":{"texture":"spawn_egg","texture_index":51},"animation_controllers":{"phantom_base_pose_controller":{"initial_state":"default","states":{"default":{"animations":["phantom_base_pose"],"particle_effects":[{"effect":"wing_dust","locator":"left_wing"},{"effect":"wing_dust","locator":"right_wing"}]}}}}},"pig":{"identifier":"minecraft:pig","min_engine_version":"1.8.0","materials":{"default":"pig"},"textures":{"default":"textures/entity/pig/pig","saddled":"textures/entity/pig/pig_saddle"},"geometry":{"default":{"visible_bounds_width":2,"visible_bounds_height":1.5,"visible_bounds_offset":[0,0.5,0],"texturewidth":64,"textureheight":32,"bones":[{"name":"body","pivot":[0,13,2],"bind_pose_rotation":[90,0,0],"cubes":[{"origin":[-5,7,-5],"size":[10,16,8],"uv":[28,8]}]},{"name":"head","parent":"body","pivot":[0,12,-6],"locators":{"lead":[0,14,-6]},"cubes":[{"origin":[-4,8,-14],"size":[8,8,8],"uv":[0,0]},{"origin":[-2,9,-15],"size":[4,3,1],"uv":[16,16]}]},{"name":"leg0","parent":"body","pivot":[-3,6,7],"cubes":[{"origin":[-5,0,5],"size":[4,6,4],"uv":[0,16]}]},{"name":"leg1","parent":"body","mirror":true,"pivot":[3,6,7],"cubes":[{"origin":[1,0,5],"size":[4,6,4],"uv":[0,16]}]},{"name":"leg2","parent":"body","pivot":[-3,6,-5],"cubes":[{"origin":[-5,0,-7],"size":[4,6,4],"uv":[0,16]}]},{"name":"leg3","parent":"body","mirror":true,"pivot":[3,6,-5],"cubes":[{"origin":[1,0,-7],"size":[4,6,4],"uv":[0,16]}]}]}},"animations":{"setup":{"loop":true,"bones":{"body":{"rotation":["-this",0,0]}}},"walk":{"anim_time_update":"query.modified_distance_moved","loop":true,"bones":{"leg0":{"rotation":["math.cos(query.anim_time * 38.17) *  80.0",0,0]},"leg1":{"rotation":["math.cos(query.anim_time * 38.17) * -80.0",0,0]},"leg2":{"rotation":["math.cos(query.anim_time * 38.17) * -80.0",0,0]},"leg3":{"rotation":["math.cos(query.anim_time * 38.17) *  80.0",0,0]}}},"look_at_target":{"loop":true,"bones":{"head":{"relative_to":{"rotation":"entity"},"rotation":["query.target_x_rotation - this","query.target_y_rotation - this",0]}}},"baby_transform":{"loop":true,"bones":{"head":{"position":[0,4,4],"scale":2}}}},"scripts":{"animate":["setup",{"walk":"query.modified_move_speed"},"look_at_target",{"baby_transform":"query.is_baby"}]},"render_controllers":["controller.render.pig"],"spawn_egg":{"texture":"spawn_egg","texture_index":2}},"piglin":{"identifier":"minecraft:piglin","materials":{"default":"piglin"},"textures":{"default":"textures/entity/piglin/piglin"},"geometry":{"default":{"bones":[{"name":"body","pivot":[0,24,0],"cubes":[{"origin":[-4,12,-2],"size":[8,12,4],"uv":[16,16]},{"origin":[-4,12,-2],"size":[8,12,4],"uv":[16,32],"inflate":0.25}]},{"name":"head","parent":"body","pivot":[0,24,0],"cubes":[{"origin":[-5,24,-4],"size":[10,8,8],"uv":[0,0],"inflate":-0.02},{"origin":[-2,24,-5],"size":[4,4,1],"uv":[31,1]},{"origin":[2,24,-5],"size":[1,2,1],"uv":[2,4]},{"origin":[-3,24,-5],"size":[1,2,1],"uv":[2,0]}],"inflate":-0.02},{"name":"leftear","parent":"head","pivot":[5,30,0],"rotation":[0,0,-30],"cubes":[{"origin":[4,25,-2],"size":[1,5,4],"uv":[51,6]}]},{"name":"rightear","parent":"head","pivot":[-5,30,0],"rotation":[0,0,30],"cubes":[{"origin":[-5,25,-2],"size":[1,5,4],"uv":[39,6]}]},{"name":"hat","parent":"head","pivot":[0,24,0]},{"name":"rightarm","parent":"body","pivot":[-5,22,0],"cubes":[{"origin":[-8,12,-2],"size":[4,12,4],"uv":[40,16]},{"origin":[-8,12,-2],"size":[4,12,4],"uv":[40,32],"inflate":0.25}]},{"name":"rightItem","parent":"rightarm","pivot":[-6,15,1]},{"name":"leftarm","parent":"body","pivot":[5,22,0],"cubes":[{"origin":[4,12,-2],"size":[4,12,4],"uv":[32,48]},{"origin":[4,12,-2],"size":[4,12,4],"uv":[48,48],"inflate":0.25}]},{"name":"leftItem","parent":"leftArm","pivot":[6,15,1]},{"name":"rightleg","parent":"body","pivot":[-1.9,12,0],"cubes":[{"origin":[-4,0,-2],"size":[4,12,4],"uv":[0,16]},{"origin":[-4,0,-2],"size":[4,12,4],"uv":[0,32],"inflate":0.25}]},{"name":"leftleg","parent":"body","pivot":[1.9,12,0],"cubes":[{"origin":[0,0,-2],"size":[4,12,4],"uv":[16,48]},{"origin":[0,0,-2],"size":[4,12,4],"uv":[0,48],"inflate":0.25}]}],"visible_bounds_width":2,"visible_bounds_height":2,"visible_bounds_offset":[0,1,0],"texturewidth":64,"textureheight":64}},"spawn_egg":{"base_color":"#995f40","overlay_color":"#f9f3a4"},"scripts":{"pre_animation":["variable.tcos0 = (Math.cos(query.modified_distance_moved * 38.17) * query.modified_move_speed / variable.gliding_speed_value) * 57.3;","variable.attack = Math.sin((1.0 - (1.0 - variable.attack_time) * (1.0 - variable.attack_time)) * 180.0) * 57.3;","variable.attack2 = Math.sin(variable.attack_time * 180.0) * 57.3;","variable.z_bob = Math.cos(query.life_time * 103.13244) * 2.865 + 2.865;","variable.x_bob = Math.sin(query.life_time * 76.776372) * 2.865;"],"animate":[{"admire":"query.is_admiring"},{"humanoid_big_head":"query.is_baby"},{"celebrate_hunt":"query.is_celebrating"},{"celebrate_hunt_special":"query.is_celebrating_special"},"move","bob","look_at_target_controller","piglin_attack_controller","riding_controller"]},"animations":{"move":{"loop":true,"bones":{"leftear":{"rotation":[0,0,"variable.tcos0 * 0.5"]},"rightear":{"rotation":[0,0,"-variable.tcos0 * 0.5"]},"leftarm":{"rotation":["variable.tcos0",0,0]},"leftleg":{"rotation":["-variable.tcos0 * 1.4",0,0]},"rightarm":{"rotation":["-variable.tcos0",0,0]},"rightleg":{"rotation":["variable.tcos0 * 1.4",0,0]}}},"bob":{"loop":true,"bones":{"leftarm":{"rotation":[0,0,"((math.cos(query.life_time * 103.2) * 2.865) + 2.865) *-1.0"]},"rightarm":{"rotation":[0,0,"(math.cos(query.life_time * 103.2) * 2.865) + 2.865"]}}},"humanoid_big_head":{"loop":true,"bones":{"head":{"scale":1.4}}},"admire":{"loop":true,"bones":{"leftarm":{"rotation":[320,25,0]},"head":{"rotation":[30,0,0]}}},"celebrate_hunt":{"loop":true,"bones":{"leftear":{"rotation":[0,0,"Math.sin(query.time_stamp * 30) * 10"]},"rightear":{"rotation":[0,0,"Math.cos(query.time_stamp * 30) * 10"]}}},"celebrate_hunt_special":{"loop":true,"bones":{"leftear":{"rotation":[0,0,"Math.sin(query.time_stamp * 30) * 10"]},"rightear":{"rotation":[0,0,"Math.cos(query.time_stamp * 30) * 10"]},"head":{"position":["Math.sin(query.time_stamp * 10)","Math.sin(query.time_stamp * 40)",0]},"rightarm":{"rotation":[0,0,"70 + Math.cos(query.time_stamp * 40) * 10"]},"leftarm":{"rotation":[0,0,"-70 - Math.cos(query.time_stamp * 40) * 10"]},"body":{"position":[0,"Math.sin(query.time_stamp * 40) * 0.35",0]}}},"look_at_target_default":{"loop":true,"bones":{"head":{"relative_to":{"rotation":"entity"},"rotation":["query.target_x_rotation","query.target_y_rotation",0]}}},"look_at_target_gliding":{"loop":true,"bones":{"head":{"rotation":[-45,"query.target_y_rotation",0]}}},"look_at_target_swimming":{"loop":true,"bones":{"head":{"rotation":["math.lerp(query.target_x_rotation, -45.0, variable.swim_amount)","query.target_y_rotation",0]}}},"crossbow_hold":{"bones":{"leftarm":{"rotation":["-85.94 + query.target_x_rotation -this","34.38 + math.clamp(query.target_y_rotation, -45, 25) -this",0]},"rightarm":{"rotation":["-90.0 + 5.73 + query.target_x_rotation -this","-17.19 + math.clamp(query.target_y_rotation, -25, 45) -this",0]}},"loop":true},"crossbow_charge":{"bones":{"leftarm":{"rotation":["math.lerp(-90.0 + 34.38, -90.0, variable.crossbow_charge)  -this","math.lerp(22.92, 48.70, variable.crossbow_charge) -this",0]},"rightarm":{"rotation":["-90.0 + 34.38 -this","-45.84 -this",0]}},"loop":true},"melee_attack":{"bones":{"leftarm":{"rotation":["(math.cos(query.life_time * 20.0 * 10.89) * 28.65) + (math.sin(variable.attack_time * 180.0) * 68.76 - (math.sin((1.0 - (1.0 - variable.attack_time) * (1.0 - variable.attack_time)) * 180.0)) * 22.92)",0,0]},"rightarm":{"rotation":["-100 + (variable.attack2 * 2.2 - variable.attack * 0.4) + variable.x_bob - this","variable.attack2 * 0.6 - 5.73 - this","variable.z_bob - this"]}},"loop":true},"hand_attack":{"bones":{"leftarm":{"rotation":["-(math.sin((1 - math.pow((1 - variable.attack_time), 4)) * 180) * 1.2 + math.sin(variable.attack_time * 180)) * 10.0",0,0]},"rightarm":{"rotation":["-(math.sin((1 - math.pow((1 - variable.attack_time), 4)) * 180) * 1.2 + math.sin(variable.attack_time * 180)) * 30.0","-(math.sin((1 - math.pow((1 - variable.attack_time), 4)) * 180) ? (-90.0 * math.sin((1 - math.pow((1 - variable.attack_time), 4)) * 180)) + 30.0 : 0.0)",0]}},"loop":true},"riding.arms":{"loop":true,"bones":{"leftarm":{"rotation":[-36,0,0]},"rightarm":{"rotation":[-36,0,0]}}},"riding.legs":{"loop":true,"bones":{"leftleg":{"rotation":["-72.0 - this","-18.0 - this","-this"]},"rightleg":{"rotation":["-72.0 - this","18.0 - this","-this"]}}}},"render_controllers":["controller.render.piglin"],"enable_attachables":true,"animation_controllers":{"look_at_target_controller":{"initial_state":"default","states":{"default":{"animations":["look_at_target_default"],"transitions":[{"gliding":"query.is_gliding"},{"swimming":"query.is_swimming"}]},"gliding":{"animations":["look_at_target_gliding"],"transitions":[{"swimming":"query.is_swimming"},{"default":"!query.is_gliding"}]},"swimming":{"animations":["look_at_target_swimming"],"transitions":[{"gliding":"query.is_gliding"},{"default":"!query.is_swimming"}]}}},"piglin_attack_controller":{"initial_state":"default","states":{"ranged_charge":{"animations":["crossbow_charge"],"transitions":[{"default":"variable.attack_state == 0  ||  query.is_admiring"},{"ranged_hold":"variable.attack_state == 1"}]},"default":{"transitions":[{"ranged_hold":"query.variant == 0 && variable.attack_state == 1 && !query.is_admiring"},{"ranged_charge":"query.variant == 0 && variable.attack_state == 2 && !query.is_admiring"},{"hand_attack":"variable.has_target && query.variant == 1 && !query.is_item_equipped && variable.attack_time >= 0.0 && !query.is_admiring"},{"melee_attack":"variable.has_target && query.variant == 1 && query.is_item_equipped && variable.attack_time >= 0.0 && !query.is_admiring"}]},"ranged_hold":{"animations":["crossbow_hold"],"transitions":[{"default":"variable.attack_state == 0  ||  query.is_admiring"},{"ranged_charge":"variable.attack_state == 2"}]},"melee_attack":{"animations":["melee_attack"],"transitions":[{"default":"!query.is_item_equipped || !variable.has_target || variable.attack_time < 0.0 ||  query.is_admiring"}]},"hand_attack":{"animations":["hand_attack"],"transitions":[{"default":"query.is_item_equipped || !variable.has_target || variable.attack_time < 0.0 ||  query.is_admiring"}]}}},"riding_controller":{"initial_state":"default","states":{"default":{"transitions":[{"riding":"query.is_riding"}]},"riding":{"animations":["riding.arms","riding.legs"],"transitions":[{"default":"!query.is_riding"}]}}}}},"piglin_brute":{"identifier":"minecraft:piglin_brute","materials":{"default":"piglin_brute"},"textures":{"default":"textures/entity/piglin/piglin_brute"},"geometry":{"default":{"bones":[{"name":"body","pivot":[0,24,0],"cubes":[{"origin":[-4,12,-2],"size":[8,12,4],"uv":[16,16]},{"origin":[-4,12,-2],"size":[8,12,4],"uv":[16,32],"inflate":0.25}]},{"name":"head","parent":"body","pivot":[0,24,0],"cubes":[{"origin":[-5,24,-4],"size":[10,8,8],"uv":[0,0],"inflate":-0.02},{"origin":[-2,24,-5],"size":[4,4,1],"uv":[31,1]},{"origin":[2,24,-5],"size":[1,2,1],"uv":[2,4]},{"origin":[-3,24,-5],"size":[1,2,1],"uv":[2,0]}],"inflate":-0.02},{"name":"leftear","parent":"head","pivot":[5,30,0],"rotation":[0,0,-30],"cubes":[{"origin":[4,25,-2],"size":[1,5,4],"uv":[51,6]}]},{"name":"rightear","parent":"head","pivot":[-5,30,0],"rotation":[0,0,30],"cubes":[{"origin":[-5,25,-2],"size":[1,5,4],"uv":[39,6]}]},{"name":"hat","parent":"head","pivot":[0,24,0]},{"name":"rightarm","parent":"body","pivot":[-5,22,0],"cubes":[{"origin":[-8,12,-2],"size":[4,12,4],"uv":[40,16]},{"origin":[-8,12,-2],"size":[4,12,4],"uv":[40,32],"inflate":0.25}]},{"name":"rightItem","parent":"rightarm","pivot":[-6,15,1]},{"name":"leftarm","parent":"body","pivot":[5,22,0],"cubes":[{"origin":[4,12,-2],"size":[4,12,4],"uv":[32,48]},{"origin":[4,12,-2],"size":[4,12,4],"uv":[48,48],"inflate":0.25}]},{"name":"leftItem","parent":"leftArm","pivot":[6,15,1]},{"name":"rightleg","parent":"body","pivot":[-1.9,12,0],"cubes":[{"origin":[-4,0,-2],"size":[4,12,4],"uv":[0,16]},{"origin":[-4,0,-2],"size":[4,12,4],"uv":[0,32],"inflate":0.25}]},{"name":"leftleg","parent":"body","pivot":[1.9,12,0],"cubes":[{"origin":[0,0,-2],"size":[4,12,4],"uv":[16,48]},{"origin":[0,0,-2],"size":[4,12,4],"uv":[0,48],"inflate":0.25}]}],"visible_bounds_width":2,"visible_bounds_height":2,"visible_bounds_offset":[0,1,0],"texturewidth":64,"textureheight":64}},"spawn_egg":{"base_color":"#592A10","overlay_color":"#F9F3A4"},"scripts":{"pre_animation":["variable.tcos0 = (Math.cos(query.modified_distance_moved * 38.17) * query.modified_move_speed / variable.gliding_speed_value) * 57.3;","variable.attack = Math.sin((1.0 - (1.0 - variable.attack_time) * (1.0 - variable.attack_time)) * 180.0) * 57.3;","variable.attack2 = Math.sin(variable.attack_time * 180.0) * 57.3;","variable.z_bob = Math.cos(query.life_time * 103.13244) * 2.865 + 2.865;","variable.x_bob = Math.sin(query.life_time * 76.776372) * 2.865;"],"animate":[{"humanoid_big_head":"query.is_baby"},"move","bob","look_at_target_controller","piglin_attack_controller","riding_controller"]},"animations":{"move":{"loop":true,"bones":{"leftear":{"rotation":[0,0,"variable.tcos0 * 0.5"]},"rightear":{"rotation":[0,0,"-variable.tcos0 * 0.5"]},"leftarm":{"rotation":["variable.tcos0",0,0]},"leftleg":{"rotation":["-variable.tcos0 * 1.4",0,0]},"rightarm":{"rotation":["-variable.tcos0",0,0]},"rightleg":{"rotation":["variable.tcos0 * 1.4",0,0]}}},"bob":{"loop":true,"bones":{"leftarm":{"rotation":[0,0,"((math.cos(query.life_time * 103.2) * 2.865) + 2.865) *-1.0"]},"rightarm":{"rotation":[0,0,"(math.cos(query.life_time * 103.2) * 2.865) + 2.865"]}}},"humanoid_big_head":{"loop":true,"bones":{"head":{"scale":1.4}}},"look_at_target_default":{"loop":true,"bones":{"head":{"relative_to":{"rotation":"entity"},"rotation":["query.target_x_rotation","query.target_y_rotation",0]}}},"look_at_target_gliding":{"loop":true,"bones":{"head":{"rotation":[-45,"query.target_y_rotation",0]}}},"look_at_target_swimming":{"loop":true,"bones":{"head":{"rotation":["math.lerp(query.target_x_rotation, -45.0, variable.swim_amount)","query.target_y_rotation",0]}}},"crossbow_hold":{"bones":{"leftarm":{"rotation":["-85.94 + query.target_x_rotation -this","34.38 + math.clamp(query.target_y_rotation, -45, 25) -this",0]},"rightarm":{"rotation":["-90.0 + 5.73 + query.target_x_rotation -this","-17.19 + math.clamp(query.target_y_rotation, -25, 45) -this",0]}},"loop":true},"crossbow_charge":{"bones":{"leftarm":{"rotation":["math.lerp(-90.0 + 34.38, -90.0, variable.crossbow_charge)  -this","math.lerp(22.92, 48.70, variable.crossbow_charge) -this",0]},"rightarm":{"rotation":["-90.0 + 34.38 -this","-45.84 -this",0]}},"loop":true},"melee_attack":{"bones":{"leftarm":{"rotation":["(math.cos(query.life_time * 20.0 * 10.89) * 28.65) + (math.sin(variable.attack_time * 180.0) * 68.76 - (math.sin((1.0 - (1.0 - variable.attack_time) * (1.0 - variable.attack_time)) * 180.0)) * 22.92)",0,0]},"rightarm":{"rotation":["-100 + (variable.attack2 * 2.2 - variable.attack * 0.4) + variable.x_bob - this","variable.attack2 * 0.6 - 5.73 - this","variable.z_bob - this"]}},"loop":true},"hand_attack":{"bones":{"leftarm":{"rotation":["-(math.sin((1 - math.pow((1 - variable.attack_time), 4)) * 180) * 1.2 + math.sin(variable.attack_time * 180)) * 10.0",0,0]},"rightarm":{"rotation":["-(math.sin((1 - math.pow((1 - variable.attack_time), 4)) * 180) * 1.2 + math.sin(variable.attack_time * 180)) * 30.0","-(math.sin((1 - math.pow((1 - variable.attack_time), 4)) * 180) ? (-90.0 * math.sin((1 - math.pow((1 - variable.attack_time), 4)) * 180)) + 30.0 : 0.0)",0]}},"loop":true},"riding.arms":{"loop":true,"bones":{"leftarm":{"rotation":[-36,0,0]},"rightarm":{"rotation":[-36,0,0]}}},"riding.legs":{"loop":true,"bones":{"leftleg":{"rotation":["-72.0 - this","-18.0 - this","-this"]},"rightleg":{"rotation":["-72.0 - this","18.0 - this","-this"]}}}},"render_controllers":["controller.render.piglin_brute"],"enable_attachables":true,"animation_controllers":{"look_at_target_controller":{"initial_state":"default","states":{"default":{"animations":["look_at_target_default"],"transitions":[{"gliding":"query.is_gliding"},{"swimming":"query.is_swimming"}]},"gliding":{"animations":["look_at_target_gliding"],"transitions":[{"swimming":"query.is_swimming"},{"default":"!query.is_gliding"}]},"swimming":{"animations":["look_at_target_swimming"],"transitions":[{"gliding":"query.is_gliding"},{"default":"!query.is_swimming"}]}}},"piglin_attack_controller":{"initial_state":"default","states":{"ranged_charge":{"animations":["crossbow_charge"],"transitions":[{"default":"variable.attack_state == 0  ||  query.is_admiring"},{"ranged_hold":"variable.attack_state == 1"}]},"default":{"transitions":[{"ranged_hold":"query.variant == 0 && variable.attack_state == 1 && !query.is_admiring"},{"ranged_charge":"query.variant == 0 && variable.attack_state == 2 && !query.is_admiring"},{"hand_attack":"variable.has_target && query.variant == 1 && !query.is_item_equipped && variable.attack_time >= 0.0 && !query.is_admiring"},{"melee_attack":"variable.has_target && query.variant == 1 && query.is_item_equipped && variable.attack_time >= 0.0 && !query.is_admiring"}]},"ranged_hold":{"animations":["crossbow_hold"],"transitions":[{"default":"variable.attack_state == 0  ||  query.is_admiring"},{"ranged_charge":"variable.attack_state == 2"}]},"melee_attack":{"animations":["melee_attack"],"transitions":[{"default":"!query.is_item_equipped || !variable.has_target || variable.attack_time < 0.0 ||  query.is_admiring"}]},"hand_attack":{"animations":["hand_attack"],"transitions":[{"default":"query.is_item_equipped || !variable.has_target || variable.attack_time < 0.0 ||  query.is_admiring"}]}}},"riding_controller":{"initial_state":"default","states":{"default":{"transitions":[{"riding":"query.is_riding"}]},"riding":{"animations":["riding.arms","riding.legs"],"transitions":[{"default":"!query.is_riding"}]}}}}},"pillager":{"identifier":"minecraft:pillager","materials":{"default":"pillager"},"textures":{"default":"textures/entity/illager/pillager"},"geometry":{"default":{"visible_bounds_width":1.5,"visible_bounds_height":2.5,"visible_bounds_offset":[0,1.25,0],"texturewidth":64,"textureheight":64,"bones":[{"name":"head","pivot":[0,24,0],"locators":{"lead":[0,0,0]},"cubes":[{"origin":[-4,24,-4],"size":[8,10,8],"uv":[0,0]}],"parent":"body"},{"name":"nose","pivot":[0,26,0],"cubes":[{"origin":[-1,23,-6],"size":[2,4,2],"uv":[24,0]}],"parent":"head"},{"name":"body","parent":"waist","pivot":[0,0,0],"cubes":[{"origin":[-4,12,-3],"size":[8,12,6],"uv":[16,20]},{"origin":[-4,6,-3],"size":[8,18,6],"uv":[0,38],"inflate":0.5}]},{"name":"waist","neverRender":true,"pivot":[0,12,0]},{"name":"leftLeg","parent":"body","pivot":[2,12,0],"cubes":[{"origin":[0,0,-2],"size":[4,12,4],"uv":[0,22]}]},{"name":"rightLeg","parent":"body","pivot":[-2,12,0],"mirror":true,"cubes":[{"origin":[-4,0,-2],"size":[4,12,4],"uv":[0,22]}]},{"name":"rightarm","parent":"body","pivot":[-5,22,0],"cubes":[{"origin":[-8,12,-2],"size":[4,12,4],"uv":[40,46]}]},{"name":"rightItem","pivot":[-6,15,1],"neverRender":true,"parent":"rightArm"},{"name":"leftarm","parent":"body","pivot":[5,22,0],"mirror":true,"cubes":[{"origin":[4,12,-2],"size":[4,12,4],"uv":[40,46]}]}]}},"spawn_egg":{"texture":"spawn_egg","texture_index":56},"scripts":{"pre_animation":["variable.tcos0 = (Math.cos(query.modified_distance_moved * 38.17) * query.modified_move_speed / variable.gliding_speed_value) * 57.3;"],"animate":["pillager_root_controller"]},"animations":{"humanoid_base_pose":{"loop":true,"bones":{"waist":{"rotation":[0,0,0]}}},"look_at_target_default":{"loop":true,"bones":{"head":{"relative_to":{"rotation":"entity"},"rotation":["query.target_x_rotation","query.target_y_rotation",0]}}},"look_at_target_gliding":{"loop":true,"bones":{"head":{"rotation":[-45,"query.target_y_rotation",0]}}},"look_at_target_swimming":{"loop":true,"bones":{"head":{"rotation":["math.lerp(query.target_x_rotation, -45.0, variable.swim_amount)","query.target_y_rotation",0]}}},"move":{"loop":true,"bones":{"leftarm":{"rotation":["variable.tcos0",0,0]},"leftleg":{"rotation":["variable.tcos0 * -1.4",0,0]},"rightarm":{"rotation":["-variable.tcos0",0,0]},"rightleg":{"rotation":["variable.tcos0 * 1.4",0,0]}}},"riding.arms":{"loop":true,"bones":{"leftarm":{"rotation":[-36,0,0]},"rightarm":{"rotation":[-36,0,0]}}},"riding.legs":{"loop":true,"bones":{"leftleg":{"rotation":["-72.0 - this","-18.0 - this","-this"]},"rightleg":{"rotation":["-72.0 - this","18.0 - this","-this"]}}},"holding":{"loop":true,"bones":{"leftarm":{"rotation":["variable.is_holding_left ? (-this * 0.5 - 18.0) : 0.0",0,0]},"rightarm":{"rotation":["variable.is_holding_right ? (-this * 0.5 - 18.0) : 0.0",0,0]}}},"attack.rotations":{"loop":true,"bones":{"body":{"rotation":[0,"math.sin(math.sqrt(variable.attack_time) * 360) * 11.46 - this",0]},"leftarm":{"rotation":["math.sin(math.sqrt(variable.attack_time) * 360) * 11.46",0,0]},"rightarm":{"rotation":["math.sin(1.0 - math.pow(1.0 - variable.attack_time, 3.0) * 180.0) * (variable.is_brandishing_spear ? -1.0 : 1.0 )","variable.is_brandishing_spear ? 0.0 : (math.sin(math.sqrt(variable.attack_time) * 360) * 11.46) * 2.0",0]}}},"bob":{"loop":true,"bones":{"leftarm":{"rotation":[0,0,"((math.cos(query.life_time * 103.2) * 2.865) + 2.865) *-1.0"]},"rightarm":{"rotation":[0,0,"(math.cos(query.life_time * 103.2) * 2.865) + 2.865"]}}},"crossbow_hold":{"loop":true,"bones":{"leftarm":{"rotation":["-85.94 + query.target_x_rotation -this","34.38 + math.clamp(query.target_y_rotation, -45, 25) -this",0]},"rightarm":{"rotation":["-90.0 + 5.73 + query.target_x_rotation -this","-17.19 + math.clamp(query.target_y_rotation, -25, 45) -this",0]}}},"crossbow_charge":{"loop":true,"bones":{"leftarm":{"rotation":["math.lerp(-90.0 + 34.38, -90.0, variable.crossbow_charge)  -this","math.lerp(22.92, 48.70, variable.crossbow_charge) -this",0]},"rightarm":{"rotation":["-90.0 + 34.38 -this","-45.84 -this",0]}}},"celebrating":{"loop":true,"bones":{"leftarm":{"rotation":["(math.cos(query.life_time * 800.0) * 2.865)",180,-135]},"rightarm":{"rotation":["(math.cos(query.life_time * 800.0) * 2.865)",180,153]}}}},"render_controllers":["controller.render.pillager"],"enable_attachables":true,"animation_controllers":{"controller_humanoid_base_pose":{"initial_state":"default","states":{"default":{"animations":["humanoid_base_pose"]}}},"controller_look_at_target":{"initial_state":"default","states":{"default":{"animations":["look_at_target_default"],"transitions":[{"gliding":"query.is_gliding"},{"swimming":"query.is_swimming"}]},"gliding":{"animations":["look_at_target_gliding"],"transitions":[{"swimming":"query.is_swimming"},{"default":"!query.is_gliding"}]},"swimming":{"animations":["look_at_target_swimming"],"transitions":[{"gliding":"query.is_gliding"},{"default":"!query.is_swimming"}]}}},"controller_move":{"initial_state":"default","states":{"default":{"animations":["move"]}}},"controller_riding":{"initial_state":"default","states":{"default":{"transitions":[{"riding":"query.is_riding"}]},"riding":{"animations":["riding.arms","riding.legs"],"transitions":[{"default":"!query.is_riding"}]}}},"controller_attack":{"initial_state":"default","states":{"attacking":{"animations":["attack.rotations"],"transitions":[{"default":"variable.attack_time < 0.0"}]},"default":{"transitions":[{"attacking":"variable.attack_time >= 0.0"}]}}},"controller_bob":{"initial_state":"default","states":{"default":{"animations":["bob"]}}},"controller_pillager_attack":{"initial_state":"default","states":{"charge":{"animations":["crossbow_charge"],"transitions":[{"default":"variable.attack_state == 0"},{"hold":"variable.attack_state == 1"}]},"default":{"transitions":[{"hold":"variable.attack_state == 1"},{"charge":"variable.attack_state == 2"}]},"hold":{"animations":["crossbow_hold"],"transitions":[{"default":"variable.attack_state == 0"},{"charge":"variable.attack_state == 2"}]}}},"pillager_root_controller":{"initial_state":"default","states":{"default":{"blend_transition":0.2,"blend_via_shortest_path":true,"animations":["controller_humanoid_base_pose","controller_look_at_target","controller_move","controller_riding","controller_attack","controller_bob","controller_pillager_attack"],"transitions":[{"celebrating":"query.is_celebrating"}]},"celebrating":{"animations":["celebrating",{"riding.legs":"query.is_riding"}],"blend_transition":0.2,"blend_via_shortest_path":true,"transitions":[{"default":"!query.is_celebrating"}]}}}}},"player":{"identifier":"minecraft:player","materials":{"default":"entity_alphatest","cape":"entity_alphatest","animated":"player_animated"},"textures":{"default":"textures/entity/steve","cape":"textures/entity/cape_invisible"},"geometry":{"default":{"visible_bounds_width":1,"visible_bounds_height":2,"visible_bounds_offset":[0,1,0],"bones":[{"name":"root","pivot":[0,0,0]},{"name":"body","parent":"waist","pivot":[0,24,0],"cubes":[{"origin":[-4,12,-2],"size":[8,12,4],"uv":[16,16]}]},{"name":"waist","parent":"root","pivot":[0,12,0]},{"name":"head","parent":"body","pivot":[0,24,0],"cubes":[{"origin":[-4,24,-4],"size":[8,8,8],"uv":[0,0]}]},{"name":"cape","pivot":[0,24,3],"parent":"body"},{"name":"hat","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-4,24,-4],"size":[8,8,8],"uv":[32,0],"inflate":0.5}]},{"name":"leftArm","parent":"body","pivot":[5,22,0],"cubes":[{"origin":[4,12,-2],"size":[4,12,4],"uv":[32,48]}]},{"name":"leftSleeve","parent":"leftArm","pivot":[5,22,0],"cubes":[{"origin":[4,12,-2],"size":[4,12,4],"uv":[48,48],"inflate":0.25}]},{"name":"leftItem","pivot":[6,15,1],"parent":"leftArm"},{"name":"rightArm","parent":"body","pivot":[-5,22,0],"cubes":[{"origin":[-8,12,-2],"size":[4,12,4],"uv":[40,16]}]},{"name":"rightSleeve","parent":"rightArm","pivot":[-5,22,0],"cubes":[{"origin":[-8,12,-2],"size":[4,12,4],"uv":[40,32],"inflate":0.25}]},{"name":"rightItem","pivot":[-6,15,1],"locators":{"lead_hold":[-6,15,1]},"parent":"rightArm"},{"name":"leftLeg","parent":"root","pivot":[1.9,12,0],"cubes":[{"origin":[-0.1,0,-2],"size":[4,12,4],"uv":[16,48]}]},{"name":"leftPants","parent":"leftLeg","pivot":[1.9,12,0],"cubes":[{"origin":[-0.1,0,-2],"size":[4,12,4],"uv":[0,48],"inflate":0.25}]},{"name":"rightLeg","parent":"root","pivot":[-1.9,12,0],"cubes":[{"origin":[-3.9,0,-2],"size":[4,12,4],"uv":[0,16]}]},{"name":"rightPants","parent":"rightLeg","pivot":[-1.9,12,0],"cubes":[{"origin":[-3.9,0,-2],"size":[4,12,4],"uv":[0,32],"inflate":0.25}]},{"name":"jacket","parent":"body","pivot":[0,24,0],"cubes":[{"origin":[-4,12,-2],"size":[8,12,4],"uv":[16,32],"inflate":0.25}]}]},"cape":{"texturewidth":64,"textureheight":32,"bones":[{"name":"root","pivot":[0,0,0]},{"name":"body","pivot":[0,24,0],"parent":"waist"},{"name":"waist","parent":"root","neverRender":true,"pivot":[0,12,0]},{"name":"cape","parent":"body","pivot":[0,24,3],"bind_pose_rotation":[0,180,0],"rotation":[0,180,0],"cubes":[{"origin":[-5,8,3],"size":[10,16,1],"uv":[0,0]}]}]}},"scripts":{"scale":"0.9375","initialize":["variable.is_holding_right = 0.0;","variable.is_blinking = 0.0;","variable.last_blink_time = 0.0;","variable.hand_bob = 0.0;"],"pre_animation":["variable.helmet_layer_visible = 1.0;","variable.leg_layer_visible = 1.0;","variable.boot_layer_visible = 1.0;","variable.chest_layer_visible = 1.0;","variable.attack_body_rot_y = Math.sin(360*Math.sqrt(variable.attack_time)) * 5.0;","variable.tcos0 = (math.cos(query.modified_distance_moved * 38.17) * query.modified_move_speed / variable.gliding_speed_value) * 57.3;","variable.first_person_rotation_factor = math.sin((1 - variable.attack_time) * 180.0);","variable.hand_bob = query.life_time < 0.01 ? 0.0 : variable.hand_bob + ((query.is_on_ground && query.is_alive ? math.clamp(math.sqrt(math.pow(query.position_delta(0), 2.0) + math.pow(query.position_delta(2), 2.0)), 0.0, 0.1) : 0.0) - variable.hand_bob) * 0.02;","variable.map_angle = math.clamp(1 - variable.player_x_rotation / 45.1, 0.0, 1.0);","variable.item_use_normalized = query.main_hand_item_use_duration / query.main_hand_item_max_duration;"],"animate":["root"]},"animations":{"humanoid_base_pose":{"loop":true,"bones":{"waist":{"rotation":[0,0,0]}}},"look_at_target_ui":{"loop":true,"bones":{"head":{"rotation":["query.target_x_rotation","query.target_y_rotation",0]}}},"look_at_target_default":{"loop":true,"bones":{"head":{"relative_to":{"rotation":"entity"},"rotation":["query.target_x_rotation","query.target_y_rotation",0]}}},"look_at_target_gliding":{"loop":true,"bones":{"head":{"rotation":[-45,"query.target_y_rotation",0]}}},"look_at_target_swimming":{"loop":true,"bones":{"head":{"rotation":["math.lerp(query.target_x_rotation, -45.0, variable.swim_amount)","query.target_y_rotation",0]}}},"look_at_target_inverted":{"loop":true,"bones":{"head":{"rotation":["-query.target_x_rotation","-query.target_y_rotation",0]}}},"cape":{"loop":true,"bones":{"cape":{"position":[0,"query.get_root_locator_offset(\'armor_offset.default_neck\', 1)",0],"rotation":["math.lerp(0.0, -126.0, query.cape_flap_amount) - 6.0",0,0]}}},"move.arms":{"loop":true,"bones":{"leftarm":{"rotation":["variable.tcos0",0,0]},"rightarm":{"rotation":["-variable.tcos0",0,0]}}},"move.legs":{"loop":true,"bones":{"leftleg":{"rotation":["variable.tcos0 * -1.4",0,0]},"rightleg":{"rotation":["variable.tcos0 * 1.4",0,0]}}},"swimming":{"animation_length":1.3,"loop":true,"override_previous_animation":true,"bones":{"leftarm":{"rotation":{"0":[0,180,180],"0.7":[0,180,287.2],"1.1":[90,180,180],"1.3":[0,180,180]}},"rightarm":{"rotation":{"0":[0,180,-180],"0.7":[0,180,-287.2],"1.1":[90,180,-180],"1.3":[0,180,-180]}},"root":{"position":[0,"(math.sin(query.target_x_rotation) * 24.0 + 3.0) * variable.swim_amount","(math.cos(query.target_x_rotation) * 24.0 + 9.0) * variable.swim_amount"],"rotation":["variable.swim_amount * (90 + query.target_x_rotation)",0,0]}}},"swimming.legs":{"loop":true,"override_previous_animation":true,"bones":{"leftleg":{"rotation":["math.lerp(0.0, math.cos(query.life_time * 390.0 + 180.0) * 17.2, variable.swim_amount)",0,0]},"rightleg":{"rotation":["math.lerp(0.0, math.cos(query.life_time * 390.0) * 17.2, variable.swim_amount)",0,0]}}},"riding.arms":{"loop":true,"bones":{"leftarm":{"rotation":[-36,0,0]},"rightarm":{"rotation":[-36,0,0]}}},"riding.legs":{"loop":true,"bones":{"leftleg":{"rotation":["-72.0 - this","-18.0 - this","-this"]},"rightleg":{"rotation":["-72.0 - this","18.0 - this","-this"]}}},"holding":{"loop":true,"bones":{"leftarm":{"rotation":["variable.is_holding_left ? (-this * 0.5 - 18.0) : 0.0",0,0]},"rightarm":{"rotation":["variable.is_holding_right ? (-this * 0.5 - 18.0) : 0.0",0,0]}}},"brandish_spear":{"loop":true,"bones":{"rightarm":{"rotation":["this * -0.5 - 157.5 - 22.5 * variable.charge_amount","-this",0]}}},"charging":{"loop":true,"bones":{"rightarm":{"rotation":["22.5 * variable.charge_amount - this","-this",0]}}},"attack.positions":{"loop":true,"bones":{"head":{"rotation":[0,0,0]}}},"attack.rotations":{"loop":true,"bones":{"body":{"rotation":[0,"variable.attack_body_rot_y",0]},"leftarm":{"rotation":["-(math.sin((1 - math.pow((1 - variable.attack_time), 4)) * 180) * 1.2 + math.sin(variable.attack_time * 180)) * 10.0",0,0]},"rightarm":{"rotation":["-(math.sin((1 - math.pow((1 - variable.attack_time), 4)) * 180) * 1.2 + math.sin(variable.attack_time * 180)) * 30.0","-(math.sin((1 - math.pow((1 - variable.attack_time), 4)) * 180) ? (-90.0 * math.sin((1 - math.pow((1 - variable.attack_time), 4)) * 180)) + 30.0 : 0.0)",0]}}},"sneaking":{"loop":true,"bones":{"body":{"position":[0,-2,0]},"head":{"position":[0,-1,0]},"leftarm":{"rotation":[-5.7,0,0]},"leftleg":{"rotation":[-28,0,0]},"rightarm":{"rotation":[-5.7,0,0]},"rightleg":{"rotation":[-28,0,0]},"root":{"position":[0,1.25,9],"rotation":["28.0 - this",0,0]}}},"bob":{"loop":true,"bones":{"leftarm":{"rotation":[0,0,"-((math.cos(query.life_time * 103.2) * 2.865) + 2.865)"]},"rightarm":{"rotation":[0,0,"(math.cos(query.life_time * 103.2) * 2.865) + 2.865"]}}},"damage_nearby_mobs":{"loop":true,"bones":{"leftarm":{"rotation":["-45.0-this","-this","-this"]},"leftleg":{"rotation":["45.0-this","-this","-this"]},"rightarm":{"rotation":["45.0-this","-this","-this"]},"rightleg":{"rotation":["-45.0-this","-this","-this"]}}},"fishing_rod":{"loop":true,"bones":{"rightarm":{"rotation":[" -19.0 - this","-this","-this"]}}},"use_item_progress":{"loop":true,"bones":{"rightarm":{"rotation":["variable.use_item_startup_progress * -60.0 + variable.use_item_interval_progress * 11.25","variable.use_item_startup_progress * -22.5 + variable.use_item_interval_progress * 11.25","variable.use_item_startup_progress * -5.625 + variable.use_item_interval_progress * 11.25"]}}},"skeleton_attack":{"loop":true,"bones":{"leftarm":{"rotation":["-68.75 * math.sin(variable.attack_time * 180.0) + 22.92 * (math.sin((1.0 - (1.0 - variable.attack_time) * (1.0 - variable.attack_time)) * 180.0))","5.73 - math.sin(variable.attack_time * 180.0) * 34.38 - this","-this"]},"rightarm":{"rotation":["-68.75 * math.sin(variable.attack_time * 180.0) + 22.92 * (math.sin((1.0 - (1.0 - variable.attack_time) * (1.0 - variable.attack_time)) * 180.0))","-5.73 + math.sin(variable.attack_time * 180.0) * 34.38 - this","-this"]}}},"sleeping":{"loop":true,"override_previous_animation":true,"bones":{"head":{"rotation":["30.0 - this","-this","-this"]},"root":{"position":["24.0 * math.cos(query.body_y_rotation) * math.cos(query.sleep_rotation) - 24.0 * math.sin(query.body_y_rotation) * math.sin(query.sleep_rotation)",0,"24.0 * math.cos(query.body_y_rotation) * math.sin(query.sleep_rotation) + 24.0 * math.sin(query.body_y_rotation) * math.cos(query.sleep_rotation)"],"rotation":[-90,"270.0 - query.sleep_rotation - query.body_y_rotation",0]}}},"first_person_base_pose":{"loop":true,"bones":{"body":{"rotation":["query.target_x_rotation","query.target_y_rotation",0]}}},"first_person_empty_hand":{"loop":true,"bones":{"rightarm":{"position":[13.5,-10,12],"rotation":["95.0 + variable.is_using_vr * 7.5","-45.0 + variable.is_using_vr * 7.5","115.0 + variable.is_using_vr * -2.5"]}}},"first_person_swap_item":{"loop":true,"bones":{"leftarm":{"position":[0,"query.get_equipped_item_name(\'off_hand\') == \'map\' ? 0.0 : -10.0 * (1.0 - variable.player_arm_height)",0]},"rightarm":{"position":[0,"-10.0 * (1.0 - variable.player_arm_height)",0]}}},"first_person_attack_rotation":{"loop":true,"bones":{"rightarm":{"position":["math.clamp(-15.5 * math.sin(variable.first_person_rotation_factor * variable.attack_time * 112.0), -7.0, 999.0) * math.sin(variable.first_person_rotation_factor * variable.attack_time * 112.0)","math.sin(variable.first_person_rotation_factor * (1.0 - variable.attack_time) * (1.0 - variable.attack_time) * 200.0) * 7.5 - variable.first_person_rotation_factor * variable.attack_time * 15.0 + variable.short_arm_offset_right","math.sin(variable.first_person_rotation_factor * variable.attack_time * 120.0) * 1.75"],"rotation":["math.sin(variable.first_person_rotation_factor * (1.0 - variable.attack_time) * (1.0 - variable.attack_time) * 280.0) * -60.0","math.sin(variable.first_person_rotation_factor * (1.0 - variable.attack_time) * (1.0 - variable.attack_time) * 280.0) * 40.0","math.sin(variable.first_person_rotation_factor * (1.0 - variable.attack_time) * (1.0 - variable.attack_time) * 280.0) * 20.0"]}}},"first_person_vr_attack_rotation":{"loop":true,"bones":{"rightarm":{"position":["5.0 * math.sin(variable.first_person_rotation_factor * variable.attack_time * 112.0)","(math.sin(variable.first_person_rotation_factor * (1.0 - variable.attack_time) * (1.0 - variable.attack_time) * 200.0) - 0.8) * 8.75 + 5.0","math.sin(variable.first_person_rotation_factor * variable.attack_time * 120.0) * 15.0"],"rotation":["30.7 * math.sin(variable.first_person_rotation_factor * variable.attack_time * -180.0 - 45.0) * 1.5",0,"21.8 * math.sin(variable.first_person_rotation_factor * variable.attack_time * 200.0 + 30.0) * 1.25"]}}},"first_person_map_hold":{"loop":true,"bones":{"leftarm":{"position":["-16.250 + variable.is_vertical_splitscreen * 7.0","-10.75 - variable.map_angle * 8.0 + variable.is_vertical_splitscreen * 0.6 - variable.short_arm_offset_left","9.0 - variable.map_angle * 8.0 + variable.short_arm_offset_left"],"rotation":[40,-20,-155],"scale":[1.15,1.15,1.15]},"rightarm":{"position":["12.50 + variable.is_vertical_splitscreen * 1.75","-7.5 - variable.map_angle * 8.0 + variable.is_vertical_splitscreen * 0.5 - variable.short_arm_offset_right","5.25 - variable.map_angle * 8.0 + variable.short_arm_offset_right"],"rotation":[77.5,7.5,160]}}},"first_person_map_hold_attack":{"loop":true,"bones":{"leftarm":{"position":["math.sin(variable.first_person_rotation_factor * variable.attack_time * 112.0) * -10.75","math.sin(variable.first_person_rotation_factor * (1.0 - variable.attack_time) * (1.0 - variable.attack_time) * 200.0) * 3.75 - variable.first_person_rotation_factor * variable.attack_time * 1.25 + variable.short_arm_offset_left","math.sin(variable.first_person_rotation_factor * variable.attack_time * 120.0) * 5.75"],"rotation":["variable.map_angle * 90.0","-15.0 * math.sin(variable.first_person_rotation_factor * (1.0 - variable.attack_time) * -100.0)",0]},"rightarm":{"position":["math.sin(variable.first_person_rotation_factor * variable.attack_time * 112.0) * -6.25","math.sin(variable.first_person_rotation_factor * (1.0 - variable.attack_time) * (1.0 - variable.attack_time) * 200.0) * 1.75 + variable.short_arm_offset_right","math.sin(variable.first_person_rotation_factor * variable.attack_time * 120.0) * 5.25"],"rotation":["variable.map_angle * 90.0",0,0]}}},"first_person_map_hold_off_hand":{"loop":true,"bones":{"leftarm":{"position":["-14.50 + variable.is_horizontal_splitscreen * 2.0 + variable.is_vertical_splitscreen * 8.7","-8.250 + variable.short_arm_offset_left","11.50 + variable.is_horizontal_splitscreen * 0.5"],"rotation":[195,182.5,2.5],"scale":[0.75,0.75,0.75]}}},"first_person_map_hold_main_hand":{"loop":true,"bones":{"rightarm":{"position":["14.50 - variable.is_vertical_splitscreen * 0.75","-8.25 + variable.short_arm_offset_right + math.sin(variable.first_person_rotation_factor * (1.0 - variable.attack_time) * (1.0 - variable.attack_time) * 200.0) * 2.75 - variable.first_person_rotation_factor * variable.attack_time * 3.0 - variable.is_horizontal_splitscreen","11.5 + math.sin(variable.first_person_rotation_factor * variable.attack_time * 120.0) * 3.5 + variable.is_horizontal_splitscreen * 3.5"],"rotation":[195,182.5,-5],"scale":[0.75,0.75,0.75]}}},"first_person_crossbow_equipped":{"loop":true,"override_previous_animation":true,"bones":{"leftarm":{"position":["1.5 - variable.item_use_normalized * 3.5","-3.799999952316284 + variable.short_arm_offset_left","8.25 - (1 - variable.item_use_normalized)"],"rotation":[165,-60,45],"scale":[0.4,0.4,0.4]}}},"third_person_crossbow_equipped":{"loop":true,"bones":{"leftarm":{"position":[0,0,0.5],"rotation":["-this - 65.0 - (1.0 - variable.item_use_normalized) * 5.0","-this + (1.0 - variable.item_use_normalized) * 30.0","-this + 20.0 + (1.0 - variable.item_use_normalized) * 10.0"]},"rightarm":{"rotation":["- 60.0 - this","- 45.0 - this","- 2.5 - this"]}}},"third_person_bow_equipped":{"loop":true,"bones":{"leftarm":{"rotation":["-90.0 + query.target_x_rotation - query.is_sneaking * 15.0 - this","27.5 + query.target_y_rotation",0]},"rightarm":{"rotation":["-90.0 + query.target_x_rotation - query.is_sneaking * 15.0 - this","-5.0 + query.target_y_rotation",0]},"rightitem":{"rotation":[0,-10,0]}}},"crossbow_hold":{"loop":true,"bones":{"leftarm":{"rotation":["query.is_swimming ? 0.0 : -93.0 + query.target_x_rotation - query.is_sneaking * 27.0 -this","query.is_swimming ? 0.0 : 42.0 + math.clamp(query.target_y_rotation, -45.0, 5.0) -this","query.is_sneaking * -15.0"]},"rightarm":{"rotation":["query.is_swimming ? 0.0 : -93.0 + query.target_x_rotation - query.is_sneaking * 27.0 -this","query.is_swimming ? 0.0 : math.clamp(query.target_y_rotation, -60.0, 45.0) -this",0]}}},"shield_block_main_hand":{"loop":true,"bones":{"rightarm":{"rotation":[-20,-30,-25]},"rightitem":{"position":[-1,-3,0],"rotation":[0,-60,-45]}}},"shield_block_off_hand":{"loop":true,"bones":{"leftarm":{"rotation":[-20,20,20]},"leftitem":{"position":["1.0 + query.item_is_charged * 1.5","-3.0 + query.item_is_charged",0],"rotation":["query.item_is_charged * 30.0","70.0 - query.item_is_charged * 60.0","65.0 - query.item_is_charged * 15.0"]}}}},"render_controllers":[{"controller.render.player.first_person":"variable.is_first_person"},{"controller.render.player.third_person":"!variable.is_first_person && !variable.map_face_icon"},{"controller.render.player.map":"variable.map_face_icon"}],"enable_attachables":true,"animation_controllers":{"root":{"initial_state":"first_person","states":{"first_person":{"animations":["first_person_swap_item",{"first_person_attack_controller":"variable.attack_time > 0.0f && query.get_equipped_item_name != \'map\'"},"first_person_base_pose",{"first_person_empty_hand":"query.get_equipped_item_name(0, 1) != \'map\'"},{"first_person_map_controller":"(query.get_equipped_item_name(0, 1) == \'map\' || query.get_equipped_item_name(\'off_hand\') == \'map\')"},{"first_person_crossbow_equipped":"query.get_equipped_item_name == \'crossbow\' && (variable.item_use_normalized > 0 && variable.item_use_normalized < 1.0)"}],"transitions":[{"paperdoll":"variable.is_paperdoll"},{"map_player":"variable.map_face_icon"},{"third_person":"!variable.is_first_person"}]},"map_player":{"transitions":[{"paperdoll":"variable.is_paperdoll"},{"first_person":"variable.is_first_person"},{"third_person":"!variable.map_face_icon && !variable.is_first_person"}]},"paperdoll":{"animations":["humanoid_base_pose",{"look_at_target_ui":"variable.should_look_at_target_ui"},"move.arms","move.legs","cape"],"transitions":[{"first_person":"!variable.is_paperdoll && variable.is_first_person"},{"map_player":"variable.map_face_icon"},{"third_person":"!variable.is_paperdoll && !variable.is_first_person"}]},"third_person":{"animations":["humanoid_base_pose",{"look_at_target":"!query.is_sleeping && !query.is_emoting"},"move.arms","move.legs","cape",{"riding.arms":"query.is_riding"},{"riding.legs":"query.is_riding"},"holding",{"brandish_spear":"variable.is_brandishing_spear"},{"charging":"query.is_charging"},{"sneaking":"query.is_sneaking && !query.is_sleeping"},"bob",{"damage_nearby_mobs":"variable.damage_nearby_mobs"},{"swimming":"variable.swim_amount > 0.0"},{"swimming.legs":"variable.swim_amount > 0.0"},{"use_item_progress":"( variable.use_item_interval_progress > 0.0 ) || ( variable.use_item_startup_progress > 0.0 ) && !variable.is_brandishing_spear"},{"fishing_rod":"query.get_equipped_item_name == \'fishing_rod\'"},{"sleeping":"query.is_sleeping && query.is_alive"},{"attack.positions":"variable.attack_time >= 0.0"},{"attack.rotations":"variable.attack_time >= 0.0"},{"shield_block_main_hand":"query.blocking && query.get_equipped_item_name(\'off_hand\') != \'shield\' && query.get_equipped_item_name == \'shield\'"},{"shield_block_off_hand":"query.blocking && query.get_equipped_item_name(\'off_hand\') == \'shield\' && !(variable.item_use_normalized > 0 && variable.item_use_normalized < 1.0)"},{"crossbow_controller":"query.get_equipped_item_name == \'crossbow\'"},{"third_person_bow_equipped":"query.get_equipped_item_name == \'bow\' && (variable.item_use_normalized > 0 && variable.item_use_normalized < 1.0)"}],"transitions":[{"paperdoll":"variable.is_paperdoll"},{"first_person":"variable.is_first_person"},{"map_player":"variable.map_face_icon"}]}}},"base_controller":"controller.animation.player.base","hudplayer":{"initial_state":"default","states":{"default":{"animations":["humanoid_base_pose",{"look_at_target":"!query.is_sleeping && !query.is_emoting"},"move.arms","move.legs","cape",{"riding.arms":"query.is_riding"},{"riding.legs":"query.is_riding"},"holding",{"brandish_spear":"variable.is_brandishing_spear"},{"charging":"query.is_charging"},{"sneaking":"query.is_sneaking && !query.is_sleeping"},"bob",{"damage_nearby_mobs":"variable.damage_nearby_mobs"},{"swimming":"variable.swim_amount > 0.0"},{"swimming.legs":"variable.swim_amount > 0.0"},{"use_item_progress":"( variable.use_item_interval_progress > 0.0 ) || ( variable.use_item_startup_progress > 0.0 ) && !variable.is_brandishing_spear"},{"sleeping":"query.is_sleeping && query.is_alive"},{"attack.positions":"variable.attack_time >= 0.0"},{"attack.rotations":"variable.attack_time >= 0.0"},{"shield_block_main_hand":"query.blocking && query.get_equipped_item_name(\'off_hand\') != \'shield\' && query.get_equipped_item_name == \'shield\'"},{"shield_block_off_hand":"query.blocking && query.get_equipped_item_name(\'off_hand\') == \'shield\' && !(variable.item_use_normalized > 0 && variable.item_use_normalized < 1.0)"},{"crossbow_controller":"query.get_equipped_item_name == \'crossbow\'"},{"third_person_bow_equipped":"query.get_equipped_item_name == \'bow\' && (variable.item_use_normalized > 0 && variable.item_use_normalized < 1.0)"}]}}},"look_at_target":{"initial_state":"default","states":{"default":{"animations":["look_at_target_default"],"transitions":[{"gliding":"query.is_gliding"},{"swimming":"query.is_swimming"}]},"gliding":{"animations":["look_at_target_gliding"],"transitions":[{"swimming":"query.is_swimming"},{"default":"!query.is_gliding"}]},"swimming":{"animations":["look_at_target_swimming"],"transitions":[{"gliding":"query.is_gliding"},{"default":"!query.is_swimming"}]}}},"first_person_attack_controller":{"initial_state":"default","states":{"default":{"animations":["first_person_attack_rotation"],"transitions":[{"vr_attack":"variable.is_using_vr"}]},"vr_attack":{"animations":["first_person_vr_attack_rotation"],"transitions":[{"default":"!variable.is_using_vr"}]}}},"first_person_map_controller":{"initial_state":"default","states":{"default":{"transitions":[{"one_hand":"query.get_equipped_item_name(\'off_hand\') == \'map\' || query.get_equipped_item_name(\'off_hand\') == \'shield\'"},{"two_hand":"query.get_equipped_item_name(\'off_hand\') != \'map\' && query.get_equipped_item_name(\'off_hand\') != \'shield\'"}]},"one_hand":{"animations":[{"first_person_map_hold_main_hand":"query.get_equipped_item_name(0, 1) == \'map\'"},{"first_person_map_hold_off_hand":"query.get_equipped_item_name(\'off_hand\') == \'map\' && (query.get_equipped_item_name == \'bow\' ? !(variable.item_use_normalized > 0 && variable.item_use_normalized < 1.0) : 1.0)"}],"transitions":[{"default":"query.get_equipped_item_name(0, 1) != \'map\' && query.get_equipped_item_name(\'off_hand\') != \'map\'"},{"two_hand":"query.get_equipped_item_name(\'off_hand\') != \'map\' && query.get_equipped_item_name(\'off_hand\') != \'shield\'"}]},"two_hand":{"animations":["first_person_map_hold","first_person_map_hold_attack"],"transitions":[{"default":"query.get_equipped_item_name(0, 1) != \'map\' && query.get_equipped_item_name(\'off_hand\') != \'map\'"},{"one_hand":"query.get_equipped_item_name(\'off_hand\') == \'map\' || query.get_equipped_item_name(\'off_hand\') == \'shield\'"}]}}},"crossbow_controller":{"initial_state":"default","states":{"charge":{"animations":["third_person_crossbow_equipped"],"transitions":[{"default":"query.get_equipped_item_name != \'crossbow\' || (query.item_remaining_use_duration <= 0.0 && !query.item_is_charged)"},{"hold":"query.item_is_charged"}]},"default":{"transitions":[{"hold":"query.item_is_charged"},{"charge":"query.item_remaining_use_duration > 0.0"}]},"hold":{"animations":["crossbow_hold"],"transitions":[{"default":"query.get_equipped_item_name != \'crossbow\' || (query.item_remaining_use_duration <= 0.0 && !query.item_is_charged)"},{"charge":"query.item_remaining_use_duration > 0.0"}]}}},"blink":{"initial_state":"default","states":{"default":{"transitions":[{"open":"variable.is_blinking = 0; variable.last_blink_time = query.life_time; return variable.last_blink_time != 0;"}]},"open":{"transitions":[{"blink":"variable.is_blinking = 0; variable.return_from_blink = query.life_time + math.random(0, 0.2); return query.life_time > (variable.last_blink_time + math.random(3, 40));"}]},"blink":{"transitions":[{"open":"variable.is_blinking = 1; variable.last_blink_time = query.life_time; return query.all_animations_finished && (query.life_time > variable.return_from_blink);"}]}}}}},"polar_bear":{"identifier":"minecraft:polar_bear","materials":{"default":"polar_bear"},"textures":{"default":"textures/entity/bear/polarbear"},"geometry":{"default":{"visible_bounds_width":3,"visible_bounds_height":2,"visible_bounds_offset":[0,0.5,0],"texturewidth":128,"textureheight":64,"bones":[{"name":"head","parent":"body","pivot":[0,14,-16],"locators":{"lead":[0,14,-16]},"mirror":true,"cubes":[{"mirror":false,"origin":[-3.5,10,-19],"size":[7,7,7],"uv":[0,0]},{"mirror":false,"origin":[-2.5,10,-22],"size":[5,3,3],"uv":[0,44]},{"mirror":false,"origin":[-4.5,16,-17],"size":[2,2,1],"uv":[26,0]},{"origin":[2.5,16,-17],"size":[2,2,1],"uv":[26,0]}]},{"name":"body","pivot":[-2,15,12],"bind_pose_rotation":[90,0,0],"cubes":[{"origin":[-7,14,5],"size":[14,14,11],"uv":[0,19]},{"origin":[-6,28,5],"size":[12,12,10],"uv":[39,0]}]},{"name":"leg0","parent":"body","pivot":[-4.5,10,6],"cubes":[{"origin":[-6.5,0,4],"size":[4,10,8],"uv":[50,22]}]},{"name":"leg1","parent":"body","pivot":[4.5,10,6],"cubes":[{"origin":[2.5,0,4],"size":[4,10,8],"uv":[50,22]}]},{"name":"leg2","parent":"body","pivot":[-3.5,10,-8],"cubes":[{"origin":[-5.5,0,-10],"size":[4,10,6],"uv":[50,40]}]},{"name":"leg3","parent":"body","pivot":[3.5,10,-8],"cubes":[{"origin":[1.5,0,-10],"size":[4,10,6],"uv":[50,40]}]}]}},"animations":{"walk":{"anim_time_update":"query.modified_distance_moved","loop":true,"bones":{"leg0":{"rotation":["math.cos(query.anim_time * 38.17) *  80.0",0,0]},"leg1":{"rotation":["math.cos(query.anim_time * 38.17) * -80.0",0,0]},"leg2":{"rotation":["math.cos(query.anim_time * 38.17) * -80.0",0,0]},"leg3":{"rotation":["math.cos(query.anim_time * 38.17) *  80.0",0,0]}}},"move":{"loop":true,"bones":{"body":{"position":[0,"-9 - 2 * query.standing_scale - this",0],"rotation":["(-(query.standing_scale) * 63) - this",0,0]},"leg0":{"position":[0,"-1 * query.standing_scale","6 * query.standing_scale"],"rotation":["query.standing_scale * 63",0,0]},"leg1":{"position":[0,"-1 * query.standing_scale","6 * query.standing_scale"],"rotation":["query.standing_scale * 63",0,0]},"leg2":{"rotation":["(query.standing_scale > 1) ? (query.standing_scale * 81) - this : 0",0,0]},"leg3":{"rotation":["(query.standing_scale > 1) ? (query.standing_scale * 81) - this : 0",0,0]}}},"look_at_target":{"loop":true,"bones":{"head":{"relative_to":{"rotation":"entity"},"rotation":["query.target_x_rotation - this","query.target_y_rotation - this",0]}}},"baby_transform":{"loop":true,"bones":{"head":{"position":[0,-1,3],"scale":1.25}}}},"scripts":{"scale":"1.2"},"animation_controllers":{"move":{"initial_state":"default","states":{"default":{"animations":[{"walk":"query.modified_move_speed"},"move","look_at_target"]}}},"baby":{"initial_state":"baby","states":{"baby":{"animations":[{"baby_transform":"query.is_baby"}]}}}},"render_controllers":["controller.render.polarbear"],"spawn_egg":{"texture":"spawn_egg","texture_index":37}},"pufferfish":{"identifier":"minecraft:pufferfish","min_engine_version":"1.8.0","materials":{"default":"pufferfish"},"textures":{"default":"textures/entity/fish/pufferfish"},"geometry":{"default":{"visible_bounds_width":0.5,"visible_bounds_height":0.5,"texturewidth":32,"textureheight":32,"bones":[{"name":"body","cubes":[{"origin":[-1.5,0,-1.5],"size":[3,2,3],"uv":[0,27]},{"origin":[0.5,2,-1.5],"size":[1,1,1],"uv":[24,6]},{"origin":[-1.5,2,-1.5],"size":[1,1,1],"uv":[28,6]}],"locators":{"lead":[0,0,0]}},{"name":"tailfin","parent":"body","cubes":[{"origin":[-1.5,1,1.5],"size":[3,0,3],"uv":[-3,0]}]},{"name":"leftFin","parent":"body","pivot":[6.5,5,0.5],"cubes":[{"origin":[1.5,0,-1.5],"size":[1,1,2],"uv":[25,0],"mirror":true}]},{"name":"rightFin","parent":"body","pivot":[-6.5,5,0.5],"cubes":[{"origin":[-2.5,0,-1.5],"size":[1,1,2],"uv":[25,0]}]}]},"mid":{"visible_bounds_width":0.5,"visible_bounds_height":0.5,"texturewidth":32,"textureheight":32,"bones":[{"name":"body","cubes":[{"origin":[-2.5,1,-2.5],"size":[5,5,5],"uv":[12,22]}]},{"name":"leftFin","parent":"body","pivot":[2.5,5,0.5],"cubes":[{"origin":[2.5,4,-1.5],"size":[2,1,2],"uv":[24,3]}]},{"name":"rightFin","parent":"body","pivot":[-2.5,5,0.5],"cubes":[{"origin":[-4.5,4,-1.5],"size":[2,1,2],"uv":[24,0]}]},{"name":"spines_top_front","parent":"body","bind_pose_rotation":[45,0,0],"pivot":[0,6,-2.5],"cubes":[{"origin":[-2.5,6,-2.5],"size":[5,1,0],"uv":[19,17]}]},{"name":"spines_top_back","parent":"body","bind_pose_rotation":[-45,0,0],"pivot":[0,6,2.5],"cubes":[{"origin":[-2.5,6,2.5],"size":[5,1,0],"uv":[11,17]}]},{"name":"spines_bottom_front","parent":"body","bind_pose_rotation":[-45,0,0],"pivot":[0,1,-2.5],"cubes":[{"origin":[-2.5,0,-2.5],"size":[5,1,0],"uv":[18,20]}]},{"name":"spines_bottom_back","parent":"body","bind_pose_rotation":[45,0,0],"pivot":[0,1,2.5],"rotation":[45,0,0],"cubes":[{"origin":[-2.5,0,2.5],"size":[5,1,0],"uv":[18,20]}]},{"name":"spines_left_front","parent":"body","bind_pose_rotation":[0,45,0],"pivot":[2.5,0,-2.5],"rotation":[0,45,0],"cubes":[{"origin":[2.5,1,-2.5],"size":[1,5,0],"uv":[1,17]}]},{"name":"spines_left_back","parent":"body","bind_pose_rotation":[0,-45,0],"pivot":[2.5,0,2.5],"rotation":[0,-45,0],"cubes":[{"origin":[2.5,1,2.5],"size":[1,5,0],"uv":[1,17]}]},{"name":"spines_right_front","parent":"body","bind_pose_rotation":[0,-45,0],"pivot":[-2.5,0,-2.5],"rotation":[0,-45,0],"cubes":[{"origin":[-3.5,1,-2.5],"size":[1,5,0],"uv":[5,17]}]},{"name":"spines_right_back","parent":"body","bind_pose_rotation":[0,45,0],"pivot":[-2.5,0,2.5],"rotation":[0,45,0],"cubes":[{"origin":[-3.5,1,2.5],"size":[1,5,0],"uv":[9,17]}]}]},"large":{"visible_bounds_width":0.5,"visible_bounds_height":0.5,"texturewidth":32,"textureheight":32,"bones":[{"name":"body","cubes":[{"origin":[-4,0,-4],"size":[8,8,8],"uv":[0,0]}]},{"name":"leftFin","parent":"body","pivot":[4,7,1],"cubes":[{"origin":[4,6,-2.9904],"size":[2,1,2],"uv":[24,3]}]},{"name":"rightFin","parent":"body","pivot":[-4,7,1],"cubes":[{"origin":[-5.9968,6,-2.992],"size":[2,1,2],"uv":[24,0]}]},{"name":"spines_top_front","parent":"body","pivot":[-4,8,-4],"bind_pose_rotation":[45,0,0],"cubes":[{"origin":[-4,8,-4],"size":[8,1,1],"uv":[14,16]}]},{"name":"spines_top_mid","parent":"body","pivot":[0,8,0],"cubes":[{"origin":[-4,8,0],"size":[8,1,1],"uv":[14,16]}]},{"name":"spines_top_back","parent":"body","pivot":[0,8,4],"bind_pose_rotation":[-45,0,0],"cubes":[{"origin":[-4,8,4],"size":[8,1,1],"uv":[14,16]}]},{"name":"spines_bottom_front","parent":"body","pivot":[0,0,-4],"bind_pose_rotation":[-45,0,0],"cubes":[{"origin":[-4,-1,-4],"size":[8,1,1],"uv":[14,19]}]},{"name":"spines_bottom_mid","parent":"body","pivot":[0,-1,0],"cubes":[{"origin":[-4,-1,0],"size":[8,1,1],"uv":[14,19]}]},{"name":"spines_bottom_back","parent":"body","pivot":[0,0,4],"bind_pose_rotation":[45,0,0],"cubes":[{"origin":[-4,-1,4],"size":[8,1,1],"uv":[14,19]}]},{"name":"spines_left_front","parent":"body","pivot":[4,0,-4],"bind_pose_rotation":[0,45,0],"cubes":[{"origin":[4,0,-4],"size":[1,8,1],"uv":[0,16]}]},{"name":"spines_left_mid","parent":"body","pivot":[4,0,0],"cubes":[{"origin":[4,0,0],"size":[1,8,1],"uv":[4,16],"mirror":true}]},{"name":"spines_left_back","parent":"body","pivot":[4,0,4],"bind_pose_rotation":[0,-45,0],"cubes":[{"origin":[4,0,4],"size":[1,8,1],"uv":[8,16],"mirror":true}]},{"name":"spines_right_front","parent":"body","pivot":[-4,0,-4],"bind_pose_rotation":[0,-45,0],"cubes":[{"origin":[-5,0,-4],"size":[1,8,1],"uv":[4,16]}]},{"name":"spines_right_mid","parent":"body","pivot":[-4,0,0],"cubes":[{"origin":[-5,0,0],"size":[1,8,1],"uv":[8,16]}]},{"name":"spines_right_back","parent":"body","pivot":[-4,0,4],"bind_pose_rotation":[0,45,0],"cubes":[{"origin":[-5,0,4],"size":[1,8,1],"uv":[8,16]}]}]}},"scripts":{"pre_animation":["variable.ZRot = !query.is_in_water ? Math.cos(query.time_stamp * 14.32) * 90 : 0.0;","variable.AnimationAmountBlend = Math.lerp(variable.AnimationAmountPrev, variable.AnimationAmount, query.frame_alpha);"],"animate":["general"]},"animations":{"flop":{"loop":true,"bones":{"body":{"rotation":[0,0,"variable.zrot"]},"tailfin":{"rotation":[0,"math.cos(variable.animationamountblend * 45.0) * -5.75",0]}}},"swim":{"loop":true,"bones":{"tailfin":{"rotation":[0,"math.cos(variable.animationamountblend * 30.0) * -5.75",0]}}}},"render_controllers":[{"controller.render.pufferfish.small":"query.variant == 0"},{"controller.render.pufferfish.medium":"query.variant == 1"},{"controller.render.pufferfish.large":"query.variant == 2"}],"spawn_egg":{"texture":"spawn_egg","texture_index":46},"animation_controllers":{"general":{"initial_state":"flopping","states":{"flopping":{"animations":["flop"],"transitions":[{"swimming":"query.is_in_water || query.is_levitating"}]},"swimming":{"animations":["swim"],"transitions":[{"flopping":"!query.is_in_water && !query.is_levitating"}]}}}}},"rabbit":{"identifier":"minecraft:rabbit","min_engine_version":"1.8.0","materials":{"default":"rabbit"},"textures":{"brown":"textures/entity/rabbit/brown","white":"textures/entity/rabbit/white","black":"textures/entity/rabbit/black","white_splotched":"textures/entity/rabbit/white_splotched","gold":"textures/entity/rabbit/gold","salt":"textures/entity/rabbit/salt","toast":"textures/entity/rabbit/toast"},"geometry":{"default":{"visible_bounds_width":1,"visible_bounds_height":1,"visible_bounds_offset":[0,0.5,0],"texturewidth":64,"textureheight":32,"bones":[{"name":"rearFootLeft","pivot":[3,6.5,3.7],"mirror":true,"parent":"body","cubes":[{"origin":[2,0,0],"size":[2,1,7],"uv":[8,24]}]},{"name":"rearFootRight","pivot":[-3,6.5,3.7],"mirror":true,"parent":"body","cubes":[{"origin":[-4,0,0],"size":[2,1,7],"uv":[26,24]}]},{"name":"haunchLeft","pivot":[3,6.5,3.7],"bind_pose_rotation":[-20,0,0],"mirror":true,"parent":"body","cubes":[{"origin":[2,2.5,3.7],"size":[2,4,5],"uv":[16,15]}]},{"name":"haunchRight","pivot":[-3,6.5,3.7],"bind_pose_rotation":[-20,0,0],"mirror":true,"parent":"body","cubes":[{"origin":[-4,2.5,3.7],"size":[2,4,5],"uv":[30,15]}]},{"name":"body","pivot":[0,5,8],"bind_pose_rotation":[-20,0,0],"mirror":true,"cubes":[{"origin":[-3,2,-2],"size":[6,5,10],"uv":[0,0]}]},{"name":"frontLegLeft","pivot":[3,7,-1],"bind_pose_rotation":[-10,0,0],"mirror":true,"parent":"body","cubes":[{"origin":[2,0,-2],"size":[2,7,2],"uv":[8,15]}]},{"name":"frontLegRight","pivot":[-3,7,-1],"bind_pose_rotation":[-10,0,0],"mirror":true,"parent":"body","cubes":[{"origin":[-4,0,-2],"size":[2,7,2],"uv":[0,15]}]},{"name":"head","pivot":[0,8,-1],"locators":{"lead":[0,8,-1]},"mirror":true,"parent":"body","cubes":[{"origin":[-2.5,8,-6],"size":[5,4,5],"uv":[32,0]}]},{"name":"earRight","pivot":[0,8,-1],"bind_pose_rotation":[0,-15,0],"mirror":true,"parent":"body","cubes":[{"origin":[-2.5,12,-2],"size":[2,5,1],"uv":[58,0]}]},{"name":"earLeft","pivot":[0,8,-1],"bind_pose_rotation":[0,15,0],"mirror":true,"parent":"body","cubes":[{"origin":[0.5,12,-2],"size":[2,5,1],"uv":[52,0]}]},{"name":"tail","pivot":[0,4,7],"bind_pose_rotation":[-20,0,0],"mirror":true,"parent":"body","cubes":[{"origin":[-1.5,2.5,7],"size":[3,3,2],"uv":[52,6]}]},{"name":"nose","pivot":[0,8,-1],"mirror":true,"parent":"body","cubes":[{"origin":[-0.5,9.5,-6.5],"size":[1,1,1],"uv":[32,9]}]}]}},"animations":{"move":{"loop":true,"bones":{"earleft":{"rotation":["query.target_x_rotation - this","query.target_y_rotation - this + 15.0",0]},"earright":{"rotation":["query.target_x_rotation - this","query.target_y_rotation - this - 15.0",0]},"frontlegleft":{"rotation":["variable.jump_rotation * -40.0 - 11.0 - this",0,0]},"frontlegright":{"rotation":["variable.jump_rotation * -40.0 - 11.0 - this",0,0]},"haunchleft":{"rotation":["variable.jump_rotation * 50.0 - 21.0 - this",0,0]},"haunchright":{"rotation":["variable.jump_rotation * 50.0 - 21.0 - this",0,0]},"nose":{"rotation":["query.target_x_rotation - this","query.target_y_rotation - this",0]},"rearfootleft":{"rotation":["variable.jump_rotation * 50.0 - this",0,0]},"rearfootright":{"rotation":["variable.jump_rotation * 50.0 - this",0,0]}}},"baby_transform":{"loop":true,"bones":{"earleft":{"position":[0,-1,1],"scale":1.5},"earright":{"position":[0,-1,1],"scale":1.5},"head":{"position":[0,-1,1],"scale":1.5},"nose":{"position":[0,-1,1],"scale":1.5}}},"look_at_target":{"loop":true,"bones":{"head":{"relative_to":{"rotation":"entity"},"rotation":["query.target_x_rotation - this","query.target_y_rotation - this",0]}}}},"animation_controllers":{"general":{"initial_state":"default","states":{"default":{"animations":["move","look_at_target"]}}},"baby":{"initial_state":"baby","states":{"baby":{"animations":[{"baby_transform":"query.is_baby"}]}}}},"render_controllers":["controller.render.rabbit"],"spawn_egg":{"texture":"spawn_egg","texture_index":24}},"ravager":{"identifier":"minecraft:ravager","textures":{"default":"textures/entity/illager/ravager"},"materials":{"default":"ravager"},"geometry":{"default":{"bones":[{"pivot":[0,19,2],"rotation":[90,0,0],"cubes":[{"origin":[-7,10,-2],"size":[14,16,20],"uv":[0,55]},{"origin":[-6,-3,-2],"size":[12,13,18],"uv":[0,91]}],"name":"body"},{"pivot":[0,15,-10],"cubes":[{"origin":[-8,13,-24],"size":[16,3,16],"uv":[0,36]}],"name":"mouth","parent":"head"},{"pivot":[0,20,-20],"cubes":[{"origin":[-5,21,-10],"size":[10,10,18],"uv":[68,73]}],"name":"neck"},{"locators":{"stun":[0,32,-15]},"pivot":[0,28,-10],"cubes":[{"origin":[-8,14,-24],"size":[16,20,16],"uv":[0,0]},{"origin":[-2,12,-28],"size":[4,8,4],"uv":[0,0]}],"name":"head","parent":"neck"},{"pivot":[-12,30,22],"cubes":[{"origin":[-12,0,17],"size":[8,37,8],"uv":[96,0]}],"name":"leg0"},{"pivot":[4,30,22],"cubes":[{"origin":[4,0,17],"size":[8,37,8],"uv":[96,0]}],"name":"leg1"},{"pivot":[-4,26,-4],"cubes":[{"origin":[-12,0,-8],"size":[8,37,8],"uv":[64,0]}],"name":"leg2"},{"pivot":[-4,26,-4],"cubes":[{"origin":[4,0,-8],"size":[8,37,8],"uv":[64,0]}],"name":"leg3"},{"pivot":[-5,27,-19],"rotation":[60,0,0],"cubes":[{"origin":[-10,27,-20],"size":[2,14,4],"uv":[74,55]},{"origin":[8,27,-20],"size":[2,14,4],"uv":[74,55]}],"name":"horns","parent":"head"}],"texturewidth":128,"textureheight":128,"visible_bounds_width":4,"visible_bounds_height":3.5,"visible_bounds_offset":[0,1.25,0]}},"render_controllers":["controller.render.ravager"],"spawn_egg":{"texture":"spawn_egg","texture_index":57},"animations":{"walk":{"anim_time_update":"query.modified_distance_moved","loop":true,"bones":{"leg0":{"rotation":["math.cos(query.anim_time * 38.17) *  22.92",0,0]},"leg1":{"rotation":["math.cos(query.anim_time * 38.17) * -22.92",0,0]},"leg2":{"rotation":["math.cos(query.anim_time * 38.17) * -22.92",0,0]},"leg3":{"rotation":["math.cos(query.anim_time * 38.17) *  22.92",0,0]}}},"look_at_target":{"loop":true,"bones":{"head":{"relative_to":{"rotation":"entity"},"rotation":["query.target_x_rotation - this","query.target_y_rotation - this",0]}}},"idle_mouth":{"loop":true,"bones":{"mouth":{"rotation":[1.8,0,0]},"neck":{"position":[0,0,0]}}},"stunned":{"loop":true,"bones":{"neck":{"position":["math.sin(query.life_time * 180.0) * 2.8",-5,0],"rotation":[15,0,0]}}},"roaring":{"loop":true,"bones":{"mouth":{"rotation":["math.sin(math.min(query.anim_time / variable.roar_length, 1.0) * 180) * 40.0",0,0]}}},"biting":{"loop":true,"bones":{"mouth":{"rotation":["math.sin(math.min(query.anim_time / (variable.bite_anim_duration / 2.0f), 1.0f) * 180.0f) * 40.0f",0,0]},"neck":{"position":[0,0,"-math.sin(math.min(query.anim_time / variable.bite_anim_duration, 1.0f) * 180.0f) * variable.bite_neck_length"]}}}},"scripts":{"pre_animation":["variable.roar_length = 1.0;","variable.bite_anim_duration = 0.75f;","variable.bite_neck_length = 10;"],"animate":["move","head"]},"particle_effects":{"stun_particles":"minecraft:stunned_emitter"},"animation_controllers":{"move":{"initial_state":"default","states":{"default":{"animations":[{"walk":"query.modified_move_speed"},"look_at_target"],"transitions":[{"stunned":"query.is_stunned == 1"}]},"stunned":{"animations":["stunned"],"particle_effects":[{"effect":"stun_particles","locator":"stun"}],"transitions":[{"default":"query.is_stunned == 0"}]}}},"head":{"initial_state":"default","states":{"biting":{"animations":["biting"],"transitions":[{"default":"query.is_delayed_attacking == 0"}]},"default":{"animations":["idle_mouth"],"transitions":[{"roaring":"query.is_roaring == 1"},{"biting":"query.is_delayed_attacking == 1"}]},"roaring":{"animations":["roaring"],"transitions":[{"default":"query.is_roaring == 0"}]}}}}},"salmon":{"identifier":"minecraft:salmon","materials":{"default":"salmon"},"textures":{"default":"textures/entity/fish/salmon"},"geometry":{"default":{"visible_bounds_width":0.5,"visible_bounds_height":0.5,"visible_bounds_offset":[0,0.5,0],"texturewidth":32,"textureheight":32,"bones":[{"name":"body_front","pivot":[0,0,-4],"cubes":[{"origin":[-1.5,3.5,-4],"size":[3,5,8],"uv":[0,0]}]},{"name":"body_back","parent":"body_front","pivot":[0,0,4],"cubes":[{"origin":[-1.5,3.5,4],"size":[3,5,8],"uv":[0,13]}]},{"name":"dorsal_front","parent":"body_front","pivot":[0,5,2],"cubes":[{"origin":[0,8.5,2],"size":[0,2,2],"uv":[4,2]}]},{"name":"dorsal_back","parent":"body_back","pivot":[0,5,4],"cubes":[{"origin":[0,8.5,4],"size":[0,2,3],"uv":[2,3]}]},{"name":"tailfin","parent":"body_back","pivot":[0,0,12],"cubes":[{"origin":[0,3.5,12],"size":[0,5,6],"uv":[20,10]}]},{"name":"head","parent":"body_front","pivot":[0,3,-4],"locators":{"lead":[0,3,-4]},"cubes":[{"origin":[-1,4.5,-7],"size":[2,4,3],"uv":[22,0]}]},{"name":"leftFin","parent":"body_front","pivot":[1.5,1,-4],"rotation":[0,0,35],"cubes":[{"origin":[-0.50752,3.86703,-4],"size":[2,0,2],"uv":[2,0]}]},{"name":"rightFin","parent":"body_front","pivot":[-1.5,1,-4],"rotation":[0,0,-35],"cubes":[{"origin":[-1.49258,3.86703,-4],"size":[2,0,2],"uv":[-2,0]}]}]}},"scripts":{"pre_animation":["variable.ZRot = !query.is_in_water ? Math.cos((query.time_stamp + query.frame_alpha) * 14.32) * 90 : 0.0;","variable.AnimationAmountBlend = Math.lerp(variable.AnimationAmountPrev, variable.AnimationAmount, query.frame_alpha);"]},"animations":{"flop":{"loop":true,"bones":{"body_back":{"rotation":[0,"math.cos(variable.animationamountblend * 45.0) * -21.75",0]},"body_front":{"rotation":[0,"math.cos(variable.animationamountblend * 45.0) * 4.0","variable.zrot"]},"tailfin":{"rotation":[0,"math.cos(variable.animationamountblend * 45.0) * -40.0",0]}}},"swim":{"loop":true,"bones":{"body_back":{"rotation":[0,"math.cos(variable.animationamountblend * 30.0) * -21.75",0]},"body_front":{"rotation":[0,"math.cos(variable.animationamountblend * 30.0) * 4.0",0]},"tailfin":{"rotation":[0,"math.cos(variable.animationamountblend * 30.0) * -40.0",0]}}}},"animation_controllers":{"general":{"initial_state":"flopping","states":{"flopping":{"animations":["flop"],"transitions":[{"swimming":"query.is_in_water || query.is_levitating"}]},"swimming":{"animations":["swim"],"transitions":[{"flopping":"!query.is_in_water && !query.is_levitating"}]}}}},"render_controllers":["controller.render.salmon"],"spawn_egg":{"texture":"spawn_egg","texture_index":47}},"sheep":{"identifier":"minecraft:sheep","min_engine_version":"1.8.0","materials":{"default":"sheep"},"textures":{"default":"textures/entity/sheep/sheep_fur","sheared":"textures/entity/sheep/sheep"},"geometry":{"default":{"visible_bounds_width":2,"visible_bounds_height":1.75,"visible_bounds_offset":[0,0.5,0],"bones":[{"name":"head","pivot":[0,18,-8],"cubes":[{"origin":[-3,16,-12],"size":[6,6,6],"uv":[0,32],"inflate":0.6}]},{"name":"body","pivot":[0,19,2],"bind_pose_rotation":[90,0,0],"cubes":[{"origin":[-4,13,-5],"size":[8,16,6],"uv":[28,40],"inflate":1.75}]},{"name":"leg0","parent":"body","pivot":[-3,12,7],"cubes":[{"origin":[-5,6,5],"size":[4,6,4],"uv":[0,48],"inflate":0.5}]},{"name":"leg1","parent":"body","pivot":[3,12,7],"cubes":[{"origin":[1,6,5],"size":[4,6,4],"uv":[0,48],"inflate":0.5}]},{"name":"leg2","parent":"body","pivot":[-3,12,-5],"cubes":[{"origin":[-5,6,-7],"size":[4,6,4],"uv":[0,48],"inflate":0.5}]},{"name":"leg3","parent":"body","pivot":[3,12,-5],"cubes":[{"origin":[1,6,-7],"size":[4,6,4],"uv":[0,48],"inflate":0.5}]}]},"sheared":{"visible_bounds_width":2,"visible_bounds_height":1.75,"visible_bounds_offset":[0,0.5,0],"bones":[{"name":"body","pivot":[0,19,2],"bind_pose_rotation":[90,0,0],"cubes":[{"origin":[-4,13,-5],"size":[8,16,6],"uv":[28,8]}]},{"name":"head","pivot":[0,18,-8],"locators":{"lead":[0,18,-8]},"cubes":[{"origin":[-3,16,-14],"size":[6,6,8],"uv":[0,0]}]},{"name":"leg0","parent":"body","pivot":[-3,12,7],"cubes":[{"origin":[-5,0,5],"size":[4,12,4],"uv":[0,16]}]},{"name":"leg1","parent":"body","pivot":[3,12,7],"cubes":[{"origin":[1,0,5],"size":[4,12,4],"uv":[0,16]}]},{"name":"leg2","parent":"body","pivot":[-3,12,-5],"cubes":[{"origin":[-5,0,-7],"size":[4,12,4],"uv":[0,16]}]},{"name":"leg3","parent":"body","pivot":[3,12,-5],"cubes":[{"origin":[1,0,-7],"size":[4,12,4],"uv":[0,16]}]}]}},"animations":{"setup":{"loop":true,"bones":{"body":{"rotation":["-this",0,0]},"head":{"position":[0,"-6.0 - this",0]}}},"grazing":{"animation_length":2,"loop":true,"bones":{"head":{"position":{"0":[0,0,0],"2":[0,0,0],"0.2":[0,-9,0],"1.8":[0,-9,0]},"rotation":{"0.2":{"post":["180.0 * (0.2 + 0.07 * math.sin(query.key_frame_lerp_time * 1644.39))",0,0],"pre":[36,0,0]},"1.8":{"post":[36,0,0],"pre":["180.0 * (0.2 + 0.07 * math.sin(query.key_frame_lerp_time * 1644.39))",0,0]}}}}},"walk":{"anim_time_update":"query.modified_distance_moved","loop":true,"bones":{"leg0":{"rotation":["math.cos(query.anim_time * 38.17) *  80.0",0,0]},"leg1":{"rotation":["math.cos(query.anim_time * 38.17) * -80.0",0,0]},"leg2":{"rotation":["math.cos(query.anim_time * 38.17) * -80.0",0,0]},"leg3":{"rotation":["math.cos(query.anim_time * 38.17) *  80.0",0,0]}}},"look_at_target":{"loop":true,"bones":{"head":{"relative_to":{"rotation":"entity"},"rotation":["query.target_x_rotation - this","query.target_y_rotation - this",0]}}},"baby_transform":{"loop":true,"bones":{"head":{"position":[0,4,4],"scale":2}}}},"scripts":{"animate":["setup","look_at_target","move",{"baby_transform":"query.is_baby"}]},"render_controllers":["controller.render.sheep"],"spawn_egg":{"texture":"spawn_egg","texture_index":3},"animation_controllers":{"move":{"initial_state":"default","states":{"default":{"animations":[{"walk":"query.modified_move_speed"}],"transitions":[{"grazing":"query.is_grazing"}]},"grazing":{"animations":["grazing"],"transitions":[{"default":"query.all_animations_finished"}]}}}}},"shulker":{"identifier":"minecraft:shulker","min_engine_version":"1.8.0","materials":{"default":"shulker"},"textures":{"undyed":"textures/entity/shulker/shulker","white":"textures/entity/shulker/shulker_white","orange":"textures/entity/shulker/shulker_orange","magenta":"textures/entity/shulker/shulker_magenta","light_blue":"textures/entity/shulker/shulker_light_blue","yellow":"textures/entity/shulker/shulker_yellow","lime":"textures/entity/shulker/shulker_lime","pink":"textures/entity/shulker/shulker_pink","gray":"textures/entity/shulker/shulker_gray","silver":"textures/entity/shulker/shulker_light_gray","cyan":"textures/entity/shulker/shulker_cyan","purple":"textures/entity/shulker/shulker_purple","blue":"textures/entity/shulker/shulker_blue","brown":"textures/entity/shulker/shulker_brown","green":"textures/entity/shulker/shulker_green","red":"textures/entity/shulker/shulker_red","black":"textures/entity/shulker/shulker_black"},"geometry":{"default":{"visible_bounds_width":3,"visible_bounds_height":3,"visible_bounds_offset":[0,0.5,0],"texturewidth":64,"textureheight":64,"bones":[{"name":"lid","parent":"base","pivot":[0,0,0],"cubes":[{"origin":[-8,4,-8],"size":[16,12,16],"uv":[0,0]}]},{"name":"base","pivot":[0,0,0],"cubes":[{"origin":[-8,0,-8],"size":[16,8,16],"uv":[0,28]}]},{"name":"head","parent":"base","pivot":[0,12,0],"cubes":[{"origin":[-3,6,-3],"size":[6,6,6],"uv":[0,52]}]}]}},"spawn_egg":{"texture":"spawn_egg","texture_index":34},"scripts":{"pre_animation":["variable.Shulker.LidPositionFactor = 180 * (0.5 + variable.Shulker.PeekAmount);","variable.Shulker.LidRotationFactor = -1 + Math.sin(180 * (0.5 + variable.Shulker.PeekAmount));","variable.Shulker.UpFacing = variable.Shulker.FacingDirection == 1;","variable.Shulker.NorthFacing = variable.Shulker.FacingDirection == 2;","variable.Shulker.SouthFacing = variable.Shulker.FacingDirection == 3;","variable.Shulker.WestFacing = variable.Shulker.FacingDirection == 4;","variable.Shulker.EastFacing = variable.Shulker.FacingDirection == 5;","variable.Shulker.XPreRotation = variable.Shulker.UpFacing * 180 + variable.Shulker.NorthFacing * 90 - variable.Shulker.SouthFacing * 90;","variable.Shulker.ZPreRotation = variable.Shulker.NorthFacing * 180 + variable.Shulker.WestFacing * 90 - variable.Shulker.EastFacing * 90;","variable.Shulker.XOffset = -variable.Shulker.WestFacing * 7.99 + variable.Shulker.EastFacing * 7.99;","variable.Shulker.YOffset = variable.Shulker.UpFacing * 16 + variable.Shulker.NorthFacing * 7.99 + variable.Shulker.SouthFacing * 7.99 + variable.Shulker.WestFacing * 7.99 + variable.Shulker.EastFacing * 7.99;","variable.Shulker.ZOffset = variable.Shulker.NorthFacing * 7.99 - variable.Shulker.SouthFacing * 7.99;"]},"animations":{"facing":{"anim_time_update":"query.modified_distance_moved","loop":true,"bones":{"base":{"position":["variable.shulker.xoffset","variable.shulker.yoffset","variable.shulker.zoffset"],"rotation":["variable.shulker.xprerotation",0,"variable.shulker.zprerotation"],"scale":0.98}}},"move":{"anim_time_update":"query.modified_distance_moved","loop":true,"bones":{"head":{"position":[0,"-variable.shulker.upfacing * 6 - (3 * (variable.shulker.northfacing + variable.shulker.southfacing + variable.shulker.westfacing + variable.shulker.eastfacing))",0]},"lid":{"position":[0,"7.2 - math.sin(variable.shulker.lidpositionfactor * 1.16) * 7.5 + (variable.shulker.lidpositionfactor > 180 ? math.sin(query.life_time * 114.6) * 0.7 + 1.5: 0.0)",0],"rotation":[0,"variable.shulker.peekamount > 0.3 ? math.pow(variable.shulker.lidrotationfactor, 4) * 22.5 : 0.0",0]}}},"look_at_target":{"loop":true,"bones":{"head":{"relative_to":{"rotation":"entity"},"rotation":["query.target_x_rotation - this","query.target_y_rotation - this",0]}}}},"animation_controllers":{"facing":{"initial_state":"default","states":{"default":{"animations":["facing"]}}},"move":{"initial_state":"default","states":{"default":{"animations":["move","look_at_target"]}}}},"render_controllers":["controller.render.shulker"]},"shulker_bullet":{"identifier":"minecraft:shulker_bullet","materials":{"default":"shulker_bullet"},"textures":{"default":"textures/entity/shulker/spark"},"geometry":{"default":{"texturewidth":64,"textureheight":32,"bones":[{"name":"body","pivot":[0,0,0],"cubes":[{"origin":[-4,-4,-1],"size":[8,8,2],"uv":[0,0]},{"origin":[-1,-4,-4],"size":[2,8,8],"uv":[0,10]},{"origin":[-4,-1,-4],"size":[8,2,8],"uv":[20,0]}]}]}},"animations":{"move":{"loop":true,"bones":{"body":{"rotation":["math.cos(query.life_time * 120) * 180","math.sin(query.life_time * 120) * 180","math.sin(query.life_time * 170) * 360"]}}}},"scripts":{"animate":["move"]},"render_controllers":["controller.render.shulker_bullet"]},"silverfish":{"identifier":"minecraft:silverfish","materials":{"default":"silverfish","body_layer":"silverfish_layers"},"textures":{"default":"textures/entity/silverfish"},"geometry":{"default":{"visible_bounds_width":1.5,"visible_bounds_height":1,"visible_bounds_offset":[0,0.5,0],"texturewidth":64,"textureheight":32,"bones":[{"name":"bodyPart_0","parent":"bodyPart_2","pivot":[0,2,-3.5],"cubes":[{"origin":[-1.5,0,-4.5],"size":[3,2,2],"uv":[0,0]}]},{"name":"bodyPart_1","parent":"bodyPart_2","pivot":[0,3,-1.5],"cubes":[{"origin":[-2,0,-2.5],"size":[4,3,2],"uv":[0,4]}]},{"name":"bodyPart_2","pivot":[0,4,1],"cubes":[{"origin":[-3,0,-0.5],"size":[6,4,3],"uv":[0,9]}]},{"name":"bodyPart_3","parent":"bodyPart_2","pivot":[0,3,4],"cubes":[{"origin":[-1.5,0,2.5],"size":[3,3,3],"uv":[0,16]}]},{"name":"bodyPart_4","parent":"bodyPart_2","pivot":[0,2,7],"cubes":[{"origin":[-1,0,5.5],"size":[2,2,3],"uv":[0,22]}]},{"name":"bodyPart_5","parent":"bodyPart_2","pivot":[0,1,9.5],"cubes":[{"origin":[-1,0,8.5],"size":[2,1,2],"uv":[11,0]}]},{"name":"bodyPart_6","parent":"bodyPart_2","pivot":[0,1,11.5],"cubes":[{"origin":[-0.5,0,10.5],"size":[1,1,2],"uv":[13,4]}]},{"name":"bodyLayer_0","parent":"bodyPart_2","pivot":[0,8,1],"cubes":[{"origin":[-5,0,-0.5],"size":[10,8,3],"uv":[20,0]}]},{"name":"bodyLayer_1","parent":"bodyPart_4","pivot":[0,4,7],"cubes":[{"origin":[-3,0,5.5],"size":[6,4,3],"uv":[20,11]}]},{"name":"bodyLayer_2","parent":"bodyPart_1","pivot":[0,5,-1.5],"cubes":[{"origin":[-3,0,-3],"size":[6,5,2],"uv":[20,18]}]}]}},"animations":{"move":{"anim_time_update":"query.modified_distance_moved","loop":true,"bones":{"bodypart_0":{"position":["math.sin(query.life_time * 1031.4) * 1.26",0,0],"rotation":[0,"math.cos(query.life_time * 1031.4) * 27",0]},"bodypart_1":{"position":["math.sin(query.life_time * 1031.4 + 27) * 0.63",0,0],"rotation":[0,"math.cos(query.life_time * 1031.4 + 27) * 18",0]},"bodypart_2":{"rotation":[0,"math.cos(query.life_time * 1031.4 + 54) * 9",0]},"bodypart_3":{"position":["math.sin(query.life_time * 1031.4 + 81) * 0.63",0,0],"rotation":[0,"math.cos(query.life_time * 1031.4 + 81) * 18",0]},"bodypart_4":{"position":["math.sin(query.life_time * 1031.4 + 108) * 1.26",0,0],"rotation":[0,"math.cos(query.life_time * 1031.4 + 108) * 27",0]},"bodypart_5":{"position":["math.sin(query.life_time * 1031.4 + 135) * 1.89",0,0],"rotation":[0,"math.cos(query.life_time * 1031.4 + 135) * 36",0]},"bodypart_6":{"position":["math.sin(query.life_time * 1031.4 + 162) * 2.52",0,0],"rotation":[0,"math.cos(query.life_time * 1031.4 + 162) * 45",0]}}}},"animation_controllers":{"move":{"initial_state":"default","states":{"default":{"animations":["move"]}}}},"render_controllers":["controller.render.silverfish"],"spawn_egg":{"texture":"spawn_egg","texture_index":8}},"skeleton":{"identifier":"minecraft:skeleton","min_engine_version":"1.8.0","materials":{"default":"skeleton"},"textures":{"default":"textures/entity/skeleton/skeleton"},"geometry":{"default":{"texturewidth":64,"textureheight":32,"visible_bounds_width":2,"visible_bounds_height":2,"visible_bounds_offset":[0,1,0],"bones":[{"name":"body","pivot":[0,24,0],"cubes":[{"origin":[-4,12,-2],"size":[8,12,4],"uv":[16,16]}],"parent":"waist"},{"name":"waist","pivot":[0,12,0]},{"name":"head","pivot":[0,24,0],"cubes":[{"origin":[-4,24,-4],"size":[8,8,8],"uv":[0,0]}],"parent":"body"},{"name":"hat","pivot":[0,24,0],"cubes":[{"origin":[-4,24,-4],"size":[8,8,8],"uv":[32,0],"inflate":0.5}],"neverRender":true,"parent":"head"},{"name":"rightArm","pivot":[-5,22,0],"cubes":[{"origin":[-6,12,-1],"size":[2,12,2],"uv":[40,16]}],"parent":"body"},{"name":"rightItem","pivot":[-6,15,1],"neverRender":true,"parent":"rightArm"},{"name":"leftArm","pivot":[5,22,0],"cubes":[{"origin":[4,12,-1],"size":[2,12,2],"uv":[40,16]}],"mirror":true,"parent":"body"},{"name":"leftItem","pivot":[6,15,1],"neverRender":true,"parent":"leftArm"},{"name":"rightLeg","pivot":[-2,12,0],"cubes":[{"origin":[-3,0,-1],"size":[2,12,2],"uv":[0,16]}],"parent":"body"},{"name":"leftLeg","pivot":[2,12,0],"cubes":[{"origin":[1,0,-1],"size":[2,12,2],"uv":[0,16]}],"mirror":true,"parent":"body"}]}},"spawn_egg":{"texture":"spawn_egg","texture_index":9},"scripts":{"pre_animation":["variable.tcos0 = (Math.cos(query.modified_distance_moved * 38.17) * query.modified_move_speed / variable.gliding_speed_value) * 57.3;"]},"animations":{"look_at_target_default":{"loop":true,"bones":{"head":{"relative_to":{"rotation":"entity"},"rotation":["query.target_x_rotation","query.target_y_rotation",0]}}},"look_at_target_gliding":{"loop":true,"bones":{"head":{"rotation":[-45,"query.target_y_rotation",0]}}},"look_at_target_swimming":{"loop":true,"bones":{"head":{"rotation":["math.lerp(query.target_x_rotation, -45.0, variable.swim_amount)","query.target_y_rotation",0]}}},"move":{"loop":true,"bones":{"leftarm":{"rotation":["variable.tcos0",0,0]},"leftleg":{"rotation":["variable.tcos0 * -1.4",0,0]},"rightarm":{"rotation":["-variable.tcos0",0,0]},"rightleg":{"rotation":["variable.tcos0 * 1.4",0,0]}}},"riding.arms":{"loop":true,"bones":{"leftarm":{"rotation":[-36,0,0]},"rightarm":{"rotation":[-36,0,0]}}},"riding.legs":{"loop":true,"bones":{"leftleg":{"rotation":["-72.0 - this","-18.0 - this","-this"]},"rightleg":{"rotation":["-72.0 - this","18.0 - this","-this"]}}},"holding":{"loop":true,"bones":{"leftarm":{"rotation":["variable.is_holding_left ? (-this * 0.5 - 18.0) : 0.0",0,0]},"rightarm":{"rotation":["variable.is_holding_right ? (-this * 0.5 - 18.0) : 0.0",0,0]}}},"brandish_spear":{"loop":true,"bones":{"rightarm":{"rotation":["this * -0.5 - 157.5 - 22.5 * variable.charge_amount","-this",0]}}},"charging":{"loop":true,"bones":{"rightarm":{"rotation":["22.5 * variable.charge_amount - this","-this",0]}}},"attack.rotations":{"loop":true,"bones":{"body":{"rotation":[0,"math.sin(math.sqrt(variable.attack_time) * 360) * 11.46 - this",0]},"leftarm":{"rotation":["math.sin(math.sqrt(variable.attack_time) * 360) * 11.46",0,0]},"rightarm":{"rotation":["math.sin(1.0 - math.pow(1.0 - variable.attack_time, 3.0) * 180.0) * (variable.is_brandishing_spear ? -1.0 : 1.0 )","variable.is_brandishing_spear ? 0.0 : (math.sin(math.sqrt(variable.attack_time) * 360) * 11.46) * 2.0",0]}}},"sneaking":{"loop":true,"bones":{"body":{"rotation":["0.5 - this",0,0]},"head":{"position":[0,1,0]},"leftarm":{"rotation":[72,0,0]},"leftleg":{"position":[0,-3,4]},"rightarm":{"rotation":[72,0,0]},"rightleg":{"position":[0,-3,4]}}},"bob":{"loop":true,"bones":{"leftarm":{"rotation":[0,0,"((math.cos(query.life_time * 103.2) * 2.865) + 2.865) *-1.0"]},"rightarm":{"rotation":[0,0,"(math.cos(query.life_time * 103.2) * 2.865) + 2.865"]}}},"damage_nearby_mobs":{"loop":true,"bones":{"leftarm":{"rotation":["-45.0-this","-this","-this"]},"leftleg":{"rotation":["45.0-this","-this","-this"]},"rightarm":{"rotation":["45.0-this","-this","-this"]},"rightleg":{"rotation":["-45.0-this","-this","-this"]}}},"bow_and_arrow":{"loop":true,"bones":{"leftarm":{"rotation":["query.target_x_rotation - 90.0 - math.sin(query.life_time * 76.8) * 2.865 - this","query.target_y_rotation + 28.65","-(math.cos(query.life_time * 103.2) * 2.865) - 2.865"]},"rightarm":{"rotation":["query.target_x_rotation - 90.0 + math.sin(query.life_time * 76.8) * 2.865 - this","query.target_y_rotation - 5.73","(math.cos(query.life_time * 103.2) * 2.865) + 2.865"]}}},"swimming":{"loop":true,"bones":{"body":{"position":[0,"variable.swim_amount * -10.0 - this","variable.swim_amount * 9.0 - this"],"rotation":["variable.swim_amount * (90.0 + query.target_x_rotation)",0,0]},"leftarm":{"rotation":["math.lerp(this, -180.0, variable.swim_amount) - (variable.swim_amount * ((math.sin(variable.attack_time * 180.0) * 57.3) * 1.2 - (math.sin((1.0 - (1.0 - variable.attack_time) * (1.0 - variable.attack_time)) * 180.0) * 57.3) * 0.4)) - (variable.swim_amount * (math.sin(query.life_time * 76.776372) * 2.865)) - this","math.lerp(this, 14.325, variable.swim_amount) - this","math.lerp(this, 14.325, variable.swim_amount) - (variable.swim_amount * (math.cos(query.life_time * 103.13244) * 2.865 + 2.865)) - this"]},"leftleg":{"rotation":["math.lerp(this, math.cos(query.life_time * 390.0 + 180.0) * 0.3, variable.swim_amount)",0,0]},"rightarm":{"rotation":["math.lerp(this, -180.0, variable.swim_amount) - (variable.swim_amount * ((math.sin(variable.attack_time * 180.0) * 57.3) * 1.2 - (math.sin((1.0 - (1.0 - variable.attack_time) * (1.0 - variable.attack_time)) * 180.0) * 57.3) * 0.4)) + (variable.swim_amount * (math.sin(query.life_time * 76.776372) * 2.865)) - this","math.lerp(this, 14.325, variable.swim_amount) - this","math.lerp(this, -14.325, variable.swim_amount) + (variable.swim_amount * (math.cos(query.life_time * 103.13244) * 2.865 + 2.865)) - this"]},"rightleg":{"rotation":["math.lerp(this, math.cos(query.life_time * 390.0) * 0.3, variable.swim_amount)",0,0]}}},"use_item_progress":{"loop":true,"bones":{"rightarm":{"rotation":["variable.use_item_startup_progress * -60.0 + variable.use_item_interval_progress * 11.25","variable.use_item_startup_progress * -22.5 + variable.use_item_interval_progress * 11.25","variable.use_item_startup_progress * -5.625 + variable.use_item_interval_progress * 11.25"]}}},"skeleton_attack":{"loop":true,"bones":{"leftarm":{"rotation":["-68.75 * math.sin(variable.attack_time * 180.0) + 22.92 * (math.sin((1.0 - (1.0 - variable.attack_time) * (1.0 - variable.attack_time)) * 180.0))","5.73 - math.sin(variable.attack_time * 180.0) * 34.38 - this","-this"]},"rightarm":{"rotation":["-68.75 * math.sin(variable.attack_time * 180.0) + 22.92 * (math.sin((1.0 - (1.0 - variable.attack_time) * (1.0 - variable.attack_time)) * 180.0))","-5.73 + math.sin(variable.attack_time * 180.0) * 34.38 - this","-this"]}}}},"animation_controllers":{"look_at_target":{"initial_state":"default","states":{"default":{"animations":["look_at_target_default"],"transitions":[{"gliding":"query.is_gliding"},{"swimming":"query.is_swimming"}]},"gliding":{"animations":["look_at_target_gliding"],"transitions":[{"swimming":"query.is_swimming"},{"default":"!query.is_gliding"}]},"swimming":{"animations":["look_at_target_swimming"],"transitions":[{"gliding":"query.is_gliding"},{"default":"!query.is_swimming"}]}}},"move":{"initial_state":"default","states":{"default":{"animations":["move"]}}},"riding":{"initial_state":"default","states":{"default":{"transitions":[{"riding":"query.is_riding"}]},"riding":{"animations":["riding.arms","riding.legs"],"transitions":[{"default":"!query.is_riding"}]}}},"holding":{"initial_state":"default","states":{"default":{"animations":["holding"]}}},"brandish_spear":{"initial_state":"default","states":{"brandish_spear":{"animations":["brandish_spear"],"transitions":[{"default":"!variable.is_brandishing_spear"}]},"default":{"transitions":[{"brandish_spear":"variable.is_brandishing_spear"}]}}},"charging":{"initial_state":"default","states":{"charging":{"animations":["charging"],"transitions":[{"default":"!query.is_charging"}]},"default":{"transitions":[{"charging":"query.is_charging"}]}}},"attack":{"initial_state":"default","states":{"attacking":{"animations":["attack.rotations"],"transitions":[{"default":"variable.attack_time < 0.0"}]},"default":{"transitions":[{"attacking":"variable.attack_time >= 0.0"}]}}},"sneaking":{"initial_state":"default","states":{"default":{"transitions":[{"sneaking":"query.is_sneaking"}]},"sneaking":{"animations":["sneaking"],"transitions":[{"default":"!query.is_sneaking"}]}}},"bob":{"initial_state":"default","states":{"default":{"animations":["bob"]}}},"damage_nearby_mobs":{"initial_state":"default","states":{"damage_nearby_mobs":{"animations":["damage_nearby_mobs"],"transitions":[{"default":"!variable.damage_nearby_mobs"}]},"default":{"transitions":[{"damage_nearby_mobs":"variable.damage_nearby_mobs"}]}}},"bow_and_arrow":{"initial_state":"default","states":{"bow_and_arrow":{"animations":["bow_and_arrow"],"transitions":[{"default":"!query.has_target"}]},"default":{"transitions":[{"bow_and_arrow":"query.has_target"}]}}},"swimming":{"initial_state":"default","states":{"default":{"transitions":[{"is_swimming":"variable.swim_amount > 0.0"}]},"is_swimming":{"animations":["swimming"],"transitions":[{"default":"variable.swim_amount <= 0.0"}]}}},"use_item_progress":{"initial_state":"default","states":{"default":{"transitions":[{"use_item_progress":"( variable.use_item_interval_progress > 0.0 ) || ( variable.use_item_startup_progress > 0.0 )"}]},"use_item_progress":{"animations":["use_item_progress"],"transitions":[{"default":"( variable.use_item_interval_progress <= 0.0 ) && ( variable.use_item_startup_progress <= 0.0 )"}]}}},"skeleton_attack":{"initial_state":"default","states":{"default":{"animations":["skeleton_attack"]}}}},"render_controllers":["controller.render.skeleton"],"enable_attachables":true},"skeleton_horse":{"identifier":"minecraft:skeleton_horse","textures":{"base_brown":"textures/entity/horse/horse_brown","base_white":"textures/entity/horse/horse_white","base_chestnut":"textures/entity/horse/horse_chestnut","base_creamy":"textures/entity/horse/horse_creamy","base_black":"textures/entity/horse/horse_black","base_gray":"textures/entity/horse/horse_gray","base_darkbrown":"textures/entity/horse/horse_darkbrown","markings_none":"textures/entity/horse/horse_markings_none","markings_white":"textures/entity/horse/horse_markings_white","markings_whitefield":"textures/entity/horse/horse_markings_whitefield","markings_whitedots":"textures/entity/horse/horse_markings_whitedots","markings_blackdots":"textures/entity/horse/horse_markings_blackdots","mule":"textures/entity/horse/mule","donkey":"textures/entity/horse/donkey","skeleton":"textures/entity/horse/horse_skeleton","zombie":"textures/entity/horse/horse_zombie","armor_none":"textures/entity/horse/armor/horse_armor_none","armor_leather":"textures/entity/horse/armor/horse_armor_leather","armor_iron":"textures/entity/horse/armor/horse_armor_iron","armor_gold":"textures/entity/horse/armor/horse_armor_gold","armor_diamond":"textures/entity/horse/armor/horse_armor_diamond"},"geometry":{"default":{"visible_bounds_width":2,"visible_bounds_height":3,"visible_bounds_offset":[0,1,0],"texturewidth":128,"textureheight":128,"bones":[{"name":"Body","pivot":[0,13,9],"rotation":[0,0,0],"cubes":[{"origin":[-5,11,-10],"size":[10,10,24],"uv":[0,34]}]},{"name":"TailA","pivot":[0,21,14],"rotation":[-65,0,0],"cubes":[{"origin":[-1,20,14],"size":[2,2,3],"uv":[44,0]}]},{"name":"TailB","pivot":[0,21,14],"rotation":[-65,0,0],"cubes":[{"origin":[-1.5,19,17],"size":[3,4,7],"uv":[38,7]}]},{"name":"TailC","pivot":[0,21,14],"rotation":[-80.34,0,0],"cubes":[{"origin":[-1.5,21.5,23],"size":[3,4,7],"uv":[24,3]}]},{"name":"Leg1A","pivot":[4,15,11],"rotation":[0,0,0],"cubes":[{"origin":[1.5,8,8.5],"size":[4,9,5],"uv":[78,29]}]},{"name":"Leg1B","pivot":[4,8,11],"rotation":[0,0,0],"cubes":[{"origin":[2,3,9.5],"size":[3,5,3],"uv":[78,43]}]},{"name":"Leg1C","pivot":[4,8,11],"rotation":[0,0,0],"cubes":[{"origin":[1.5,-0.1,9],"size":[4,3,4],"uv":[78,51]}]},{"name":"Leg2A","pivot":[-4,15,11],"rotation":[0,0,0],"cubes":[{"origin":[-5.5,8,8.5],"size":[4,9,5],"uv":[96,29]}]},{"name":"Leg2B","pivot":[-4,8,11],"rotation":[0,0,0],"cubes":[{"origin":[-5,3,9.5],"size":[3,5,3],"uv":[96,43]}]},{"name":"Leg2C","pivot":[-4,8,11],"rotation":[0,0,0],"cubes":[{"origin":[-5.5,-0.1,9],"size":[4,3,4],"uv":[96,51]}]},{"name":"Leg3A","pivot":[4,15,-8],"rotation":[0,0,0],"cubes":[{"origin":[2.1,8,-10.1],"size":[3,8,4],"uv":[44,29]}]},{"name":"Leg3B","pivot":[4,8,-8],"rotation":[0,0,0],"cubes":[{"origin":[2.1,3,-9.6],"size":[3,5,3],"uv":[44,41]}]},{"name":"Leg3C","pivot":[4,8,-8],"rotation":[0,0,0],"cubes":[{"origin":[1.6,-0.1,-10.1],"size":[4,3,4],"uv":[44,51]}]},{"name":"Leg4A","pivot":[-4,15,-8],"rotation":[0,0,0],"cubes":[{"origin":[-5.1,8,-10.1],"size":[3,8,4],"uv":[60,29]}]},{"name":"Leg4B","pivot":[-4,8,-8],"rotation":[0,0,0],"cubes":[{"origin":[-5.1,3,-9.6],"size":[3,5,3],"uv":[60,41]}]},{"name":"Leg4C","pivot":[-4,8,-8],"rotation":[0,0,0],"cubes":[{"origin":[-5.6,-0.1,-10.1],"size":[4,3,4],"uv":[60,51]}]},{"name":"Head","pivot":[0,20,-10],"rotation":[30,0,0],"cubes":[{"origin":[-2.5,25,-11.5],"size":[5,5,7],"uv":[0,0]}]},{"name":"UMouth","pivot":[0,20.05,-10],"rotation":[30,0,0],"cubes":[{"origin":[-2,27.05,-17],"size":[4,3,6],"uv":[24,18]}]},{"name":"LMouth","pivot":[0,20,-10],"rotation":[30,0,0],"cubes":[{"origin":[-2,25,-16.5],"size":[4,2,5],"uv":[24,27]}]},{"name":"Ear1","pivot":[0,20,-10],"rotation":[30,0,0],"cubes":[{"origin":[0.45,29,-6],"size":[2,3,1],"uv":[0,0]}]},{"name":"Ear2","pivot":[0,20,-10],"rotation":[30,0,0],"cubes":[{"origin":[-2.45,29,-6],"size":[2,3,1],"uv":[0,0]}]},{"name":"MuleEarL","pivot":[0,20,-10],"rotation":[30,0,15],"cubes":[{"origin":[-2,29,-6],"size":[2,7,1],"uv":[0,12]}]},{"name":"MuleEarR","pivot":[0,20,-10],"rotation":[30,0,-15],"cubes":[{"origin":[0,29,-6],"size":[2,7,1],"uv":[0,12]}]},{"name":"Neck","pivot":[0,20,-10],"rotation":[30,0,0],"cubes":[{"origin":[-2.05,15.8,-12],"size":[4,14,8],"uv":[0,12]}]},{"name":"Bag1","pivot":[-7.5,21,10],"rotation":[0,90,0],"cubes":[{"origin":[-10.5,13,10],"size":[8,8,3],"uv":[0,34]}]},{"name":"Bag2","pivot":[4.5,21,10],"rotation":[0,90,0],"cubes":[{"origin":[1.5,13,10],"size":[8,8,3],"uv":[0,47]}]},{"name":"Saddle","pivot":[0,22,2],"rotation":[0,0,0],"cubes":[{"origin":[-5,21,-1],"size":[10,1,8],"uv":[80,0]}]},{"name":"SaddleB","pivot":[0,22,2],"rotation":[0,0,0],"cubes":[{"origin":[-1.5,22,-1],"size":[3,1,2],"uv":[106,9]}]},{"name":"SaddleC","pivot":[0,22,2],"rotation":[0,0,0],"cubes":[{"origin":[-4,22,5],"size":[8,1,2],"uv":[80,9]}]},{"name":"SaddleL2","pivot":[5,21,2],"rotation":[0,0,0],"cubes":[{"origin":[4.5,13,1],"size":[1,2,2],"uv":[74,0]}]},{"name":"SaddleL","pivot":[5,21,2],"rotation":[0,0,0],"cubes":[{"origin":[4.5,15,1.5],"size":[1,6,1],"uv":[70,0]}]},{"name":"SaddleR2","pivot":[-5,21,2],"rotation":[0,0,0],"cubes":[{"origin":[-5.5,13,1],"size":[1,2,2],"uv":[74,4]}]},{"name":"SaddleR","pivot":[-5,21,2],"rotation":[0,0,0],"cubes":[{"origin":[-5.5,15,1.5],"size":[1,6,1],"uv":[80,0]}]},{"name":"SaddleMouthL","pivot":[0,20,-10],"rotation":[30,0,0],"cubes":[{"origin":[1.5,26,-14],"size":[1,2,2],"uv":[74,13]}]},{"name":"SaddleMouthR","pivot":[0,20,-10],"rotation":[30,0,0],"cubes":[{"origin":[-2.5,26,-14],"size":[1,2,2],"uv":[74,13]}]},{"name":"SaddleMouthLine","pivot":[0,20,-10],"rotation":[0,0,0],"cubes":[{"origin":[2.6,23,-16],"size":[0,3,16],"uv":[44,10]}]},{"name":"SaddleMouthLineR","pivot":[0,20,-10],"rotation":[0,0,0],"cubes":[{"origin":[-2.6,23,-16],"size":[0,3,16],"uv":[44,5]}]},{"name":"Mane","pivot":[0,20,-10],"rotation":[30,0,0],"cubes":[{"origin":[-1,15.5,-5],"size":[2,16,4],"uv":[58,0]}]},{"name":"HeadSaddle","pivot":[0,20,-10],"rotation":[30,0,0],"cubes":[{"origin":[-2.5,25.1,-17],"size":[5,5,12],"uv":[80,12],"inflate":0.05}]}]}},"spawn_egg":{"texture":"spawn_egg","texture_index":32}},"slime":{"identifier":"minecraft:slime","materials":{"default":"slime","outer":"slime_outer"},"textures":{"default":"textures/entity/slime/slime"},"geometry":{"default":{"visible_bounds_width":5,"visible_bounds_height":2,"visible_bounds_offset":[0,1,0],"texturewidth":64,"textureheight":32,"bones":[{"name":"cube","pivot":[0,24,0],"cubes":[{"origin":[-3,1,-3],"size":[6,6,6],"uv":[0,16]}]},{"name":"eye0","parent":"cube","pivot":[0,24,0],"cubes":[{"origin":[-3.3,4,-3.5],"size":[2,2,2],"uv":[32,0]}]},{"name":"eye1","parent":"cube","pivot":[0,24,0],"cubes":[{"origin":[1.3,4,-3.5],"size":[2,2,2],"uv":[32,4]}]},{"name":"mouth","parent":"cube","pivot":[0,24,0],"cubes":[{"origin":[0,2,-3.5],"size":[1,1,1],"uv":[32,8]}]}]},"armor":{"visible_bounds_width":1,"visible_bounds_height":1,"visible_bounds_offset":[0,0.5,0],"texturewidth":64,"textureheight":32,"bones":[{"name":"cube","pivot":[0,24,0],"cubes":[{"origin":[-4,0,-4],"size":[8,8,8],"uv":[0,0]}]},{"name":"eye0","parent":"cube","pivot":[0,24,0],"cubes":[{"origin":[-3.3,4,-3.5],"size":[2,2,2],"uv":[32,0]}]},{"name":"eye1","parent":"cube","pivot":[0,24,0],"cubes":[{"origin":[1.3,4,-3.5],"size":[2,2,2],"uv":[32,4]}]},{"name":"mouth","parent":"cube","pivot":[0,24,0],"cubes":[{"origin":[0,2,-3.5],"size":[1,1,1],"uv":[32,8]}]}]}},"scripts":{"pre_animation":["variable.squish_factor = (query.previous_squish_value + (query.current_squish_value - query.previous_squish_value) * query.frame_alpha);","variable.bounce = 1 / ((variable.squish_factor / (query.variant * 0.5 + 1)) + 1);","variable.horizontal_scale_amount = variable.bounce * query.variant;","variable.vertical_scale_amount = (1 / variable.bounce) * query.variant;"],"scaleX":"variable.horizontal_scale_amount","scaleY":"variable.vertical_scale_amount","scaleZ":"variable.horizontal_scale_amount"},"render_controllers":["controller.render.slime","controller.render.slime_armor"],"spawn_egg":{"texture":"spawn_egg","texture_index":10}},"small_fireball":{"identifier":"minecraft:small_fireball","materials":{"default":"fireball"},"textures":{"default":"textures/items/fire_charge"},"geometry":{"default":{"bones":[{"name":"body","pivot":[0,0,0],"cubes":[{"origin":[-8,-4,0],"size":[16,16,0],"uv":{"south":{"uv":[0,0]}}}]}],"texturewidth":16,"textureheight":16}},"animations":{"face_player":{"loop":true,"bones":{"body":{"rotation":["query.camera_rotation(0)","query.camera_rotation(1)",0]}}}},"scripts":{"scale":"0.5","animate":["face_player"]},"render_controllers":["controller.render.fireball"]},"snow_golem":{"identifier":"minecraft:snow_golem","min_engine_version":"1.8.0","materials":{"default":"snow_golem","head":"snow_golem_pumpkin"},"textures":{"default":"textures/entity/snow_golem"},"geometry":{"default":{"visible_bounds_width":1,"visible_bounds_height":2,"visible_bounds_offset":[0,1,0],"bones":[{"name":"head","parent":"piece1","pivot":[0,20,0],"locators":{"lead":[0,20,0]},"cubes":[{"origin":[-4,20,-4],"size":[8,8,8],"uv":[0,0],"inflate":-0.5}]},{"name":"arm1","parent":"piece1","pivot":[0,18,0],"bind_pose_rotation":[0,0,57.3],"cubes":[{"origin":[1,20,-1],"size":[12,2,2],"uv":[32,0],"inflate":-0.5}]},{"name":"arm2","parent":"piece1","pivot":[0,18,0],"bind_pose_rotation":[0,180,-57.3],"cubes":[{"origin":[1,20,-1],"size":[12,2,2],"uv":[32,0],"inflate":-0.5}]},{"name":"piece1","parent":"piece2","pivot":[0,11,0],"cubes":[{"origin":[-5,11,-5],"size":[10,10,10],"uv":[0,16],"inflate":-0.5}]},{"name":"piece2","pivot":[0,0,0],"cubes":[{"origin":[-6,0,-6],"size":[12,12,12],"uv":[0,36],"inflate":-0.5}]}]}},"animations":{"move":{"loop":true,"bones":{"piece1":{"rotation":[0,"query.target_y_rotation * 0.25",0]}}},"look_at_target":{"loop":true,"bones":{"head":{"relative_to":{"rotation":"entity"},"rotation":["query.target_x_rotation - this","query.target_y_rotation - this",0]}}}},"animation_controllers":{"move":{"initial_state":"default","states":{"default":{"animations":[{"move":"query.modified_move_speed"},"look_at_target"]}}}},"render_controllers":["controller.render.snowgolem"]},"snowball":{"identifier":"minecraft:snowball","materials":{"default":"snowball"},"textures":{"default":"textures/items/snowball"},"geometry":{"default":{"bones":[{"name":"body","pivot":[0,0,0],"cubes":[{"origin":[-8,-8,0],"size":[16,16,0],"uv":[0,0],"rotation":[0,0,0]}]}],"texturewidth":16,"textureheight":16}},"render_controllers":["controller.render.item_sprite"],"animations":{"flying":{"loop":true,"bones":{"body":{"rotation":["query.camera_rotation(0)","query.camera_rotation(1)",0]}}}},"scripts":{"animate":["flying"]}},"spider":{"identifier":"minecraft:spider","min_engine_version":"1.8.0","materials":{"default":"spider","invisible":"spider_invisible"},"textures":{"default":"textures/entity/spider/spider"},"geometry":{"default":{"visible_bounds_width":2,"visible_bounds_height":1,"visible_bounds_offset":[0,0.5,0],"texturewidth":64,"textureheight":32,"bones":[{"name":"head","pivot":[0,9,-3],"cubes":[{"origin":[-4,5,-11],"size":[8,8,8],"uv":[32,4]}],"parent":"body0"},{"name":"body0","pivot":[0,9,0],"cubes":[{"origin":[-3,6,-3],"size":[6,6,6],"uv":[0,0]}]},{"name":"body1","pivot":[0,9,9],"cubes":[{"origin":[-5,5,3],"size":[10,8,12],"uv":[0,12]}],"parent":"body0"},{"name":"leg0","pivot":[-4,9,2],"cubes":[{"origin":[-19,8,1],"size":[16,2,2],"uv":[18,0]}],"parent":"body0"},{"name":"leg1","pivot":[4,9,2],"cubes":[{"origin":[3,8,1],"size":[16,2,2],"uv":[18,0]}],"parent":"body0"},{"name":"leg2","pivot":[-4,9,1],"cubes":[{"origin":[-19,8,0],"size":[16,2,2],"uv":[18,0]}],"parent":"body0"},{"name":"leg3","pivot":[4,9,1],"cubes":[{"origin":[3,8,0],"size":[16,2,2],"uv":[18,0]}],"parent":"body0"},{"name":"leg4","pivot":[-4,9,0],"cubes":[{"origin":[-19,8,-1],"size":[16,2,2],"uv":[18,0]}],"parent":"body0"},{"name":"leg5","pivot":[4,9,0],"cubes":[{"origin":[3,8,-1],"size":[16,2,2],"uv":[18,0]}],"parent":"body0"},{"name":"leg6","pivot":[-4,9,-1],"cubes":[{"origin":[-19,8,-2],"size":[16,2,2],"uv":[18,0]}],"parent":"body0"},{"name":"leg7","pivot":[4,9,-1],"cubes":[{"origin":[3,8,-2],"size":[16,2,2],"uv":[18,0]}],"parent":"body0"}]}},"animations":{"default_leg_pose":{"loop":true,"bones":{"leg0":{"rotation":[0,"45.0 - this","-45.0 - this"]},"leg1":{"rotation":[0,"-45.0 - this","45.0 - this"]},"leg2":{"rotation":[0,"22.5 - this","-33.3 - this"]},"leg3":{"rotation":[0,"-22.5 - this","33.3 - this"]},"leg4":{"rotation":[0,"-22.5 - this","-33.3 - this"]},"leg5":{"rotation":[0,"22.5 - this","33.3 - this"]},"leg6":{"rotation":[0,"-45.0 - this","-45.0 - this"]},"leg7":{"rotation":[0,"45.0 - this","45.0 - this"]}}},"look_at_target":{"loop":true,"bones":{"head":{"rotation":["query.target_x_rotation","query.target_y_rotation",0]}}},"walk":{"anim_time_update":"query.modified_distance_moved","loop":true,"bones":{"leg0":{"rotation":[0,"-math.abs(math.cos(query.anim_time * 76.34 + 90 * 0) * 22.92)","math.abs(math.sin(query.anim_time * 38.17 + 90 * 0) * 22.92)"]},"leg1":{"rotation":[0,"math.abs(math.cos(query.anim_time * 76.34 + 90 * 0) * 22.92)","-math.abs(math.sin(query.anim_time * 38.17 + 90 * 0) * 22.92)"]},"leg2":{"rotation":[0,"-math.abs(math.cos(query.anim_time * 76.34 + 90 * 1) * 22.92)","math.abs(math.sin(query.anim_time * 38.17 + 90 * 1) * 22.92)"]},"leg3":{"rotation":[0,"math.abs(math.cos(query.anim_time * 76.34 + 90 * 1) * 22.92)","-math.abs(math.sin(query.anim_time * 38.17 + 90 * 1) * 22.92)"]},"leg4":{"rotation":[0,"-math.abs(math.cos(query.anim_time * 76.34 + 90 * 2) * 22.92)","math.abs(math.sin(query.anim_time * 38.17 + 90 * 2) * 22.92)"]},"leg5":{"rotation":[0,"math.abs(math.cos(query.anim_time * 76.34 + 90 * 2) * 22.92)","-math.abs(math.sin(query.anim_time * 38.17 + 90 * 2) * 22.92)"]},"leg6":{"rotation":[0,"-math.abs(math.cos(query.anim_time * 76.34 + 90 * 3) * 22.92)","math.abs(math.sin(query.anim_time * 38.17 + 90 * 3) * 22.92)"]},"leg7":{"rotation":[0,"math.abs(math.cos(query.anim_time * 76.34 + 90 * 3) * 22.92)","-math.abs(math.sin(query.anim_time * 38.17 + 90 * 3) * 22.92)"]}}}},"animation_controllers":{"move":{"initial_state":"default","states":{"default":{"animations":["default_leg_pose",{"walk":"query.modified_move_speed"},"look_at_target"]}}}},"render_controllers":["controller.render.spider"],"spawn_egg":{"texture":"spawn_egg","texture_index":11}},"potion":{"identifier":"minecraft:splash_potion","materials":{"default":"splash_potion_enchanted"},"textures":{"moveSlowdown":"textures/items/potion_bottle_splash_moveSlowdown","moveSpeed":"textures/items/potion_bottle_splash_moveSpeed","digSlowdown":"textures/items/potion_bottle_splash_digSlowdown","digSpeed":"textures/items/potion_bottle_splash_digSpeed","damageBoost":"textures/items/potion_bottle_splash_damageBoost","heal":"textures/items/potion_bottle_splash_heal","harm":"textures/items/potion_bottle_splash_harm","jump":"textures/items/potion_bottle_splash_jump","confusion":"textures/items/potion_bottle_splash_confusion","regeneration":"textures/items/potion_bottle_splash_regeneration","resistance":"textures/items/potion_bottle_splash_resistance","fireResistance":"textures/items/potion_bottle_splash_fireResistance","waterBreathing":"textures/items/potion_bottle_splash_waterBreathing","invisibility":"textures/items/potion_bottle_splash_invisibility","blindness":"textures/items/potion_bottle_splash_blindness","nightVision":"textures/items/potion_bottle_splash_nightVision","hunger":"textures/items/potion_bottle_splash_hunger","weakness":"textures/items/potion_bottle_splash_weakness","poison":"textures/items/potion_bottle_splash_poison","wither":"textures/items/potion_bottle_splash_wither","healthBoost":"textures/items/potion_bottle_splash_healthBoost","absorption":"textures/items/potion_bottle_splash_absorption","saturation":"textures/items/potion_bottle_splash_saturation","levitation":"textures/items/potion_bottle_splash_levitation","turtleMaster":"textures/items/potion_bottle_splash_turtleMaster","slowFall":"textures/items/potion_bottle_splash_slowFall","default":"textures/items/potion_bottle_splash","enchanted":"textures/misc/enchanted_item_glint"},"geometry":{"default":{"bones":[{"name":"body","pivot":[0,0,0],"cubes":[{"origin":[-8,-8,0],"size":[16,16,0],"uv":[0,0],"rotation":[0,0,0]}]}],"texturewidth":16,"textureheight":16}},"render_controllers":["controller.render.splash_potion"],"animations":{"flying":{"loop":true,"bones":{"body":{"rotation":["query.camera_rotation(0)","query.camera_rotation(1)",0]}}}},"scripts":{"animate":["flying"]}},"squid":{"identifier":"minecraft:squid","materials":{"default":"squid"},"textures":{"default":"textures/entity/squid"},"geometry":{"default":{"visible_bounds_width":3,"visible_bounds_height":2,"visible_bounds_offset":[0,0.5,0],"texturewidth":64,"textureheight":32,"bones":[{"name":"body","cubes":[{"origin":[-6,-8,-6],"size":[12,16,12],"uv":[0,0]}]},{"name":"tentacle1","parent":"body","pivot":[5,-7,0],"cubes":[{"origin":[4,-25,-1],"size":[2,18,2],"uv":[48,0]}],"rotation":[0,90,0]},{"name":"tentacle2","parent":"body","pivot":[3.5,-7,3.5],"cubes":[{"origin":[2.5,-25,2.5],"size":[2,18,2],"uv":[48,0]}],"rotation":[0,45,0]},{"name":"tentacle3","parent":"body","pivot":[0,-7,5],"cubes":[{"origin":[-1,-25,4],"size":[2,18,2],"uv":[48,0]}],"rotation":[0,0,0]},{"name":"tentacle4","parent":"body","pivot":[-3.5,-7,3.5],"cubes":[{"origin":[-4.5,-25,2.5],"size":[2,18,2],"uv":[48,0]}],"rotation":[0,-45,0]},{"name":"tentacle5","parent":"body","pivot":[-5,-7,0],"cubes":[{"origin":[-6,-25,-1],"size":[2,18,2],"uv":[48,0]}],"rotation":[0,-90,0]},{"name":"tentacle6","parent":"body","pivot":[-3.5,-7,-3.5],"cubes":[{"origin":[-4.5,-25,-4.5],"size":[2,18,2],"uv":[48,0]}],"rotation":[0,-135,0]},{"name":"tentacle7","parent":"body","pivot":[0,-7,-5],"cubes":[{"origin":[-1,-25,-6],"size":[2,18,2],"uv":[48,0]}],"rotation":[0,-180,0]},{"name":"tentacle8","parent":"body","pivot":[3.5,-7,-3.5],"cubes":[{"origin":[2.5,-25,-4.5],"size":[2,18,2],"uv":[48,0]}],"rotation":[0,-225,0]}]}},"animations":{"move":{"anim_time_update":"query.modified_distance_moved","loop":true,"bones":{"body":{"position":[0,"query.is_in_water ? 0.0 : (query.is_baby ? 3.2 : 6.4)",0]},"tentacle1":{"rotation":["variable.squid.tentacle_angle - this","90.0 - this",0]},"tentacle2":{"rotation":["variable.squid.tentacle_angle - this","45.0 - this",0]},"tentacle3":{"rotation":["variable.squid.tentacle_angle - this","0.0 - this",0]},"tentacle4":{"rotation":["variable.squid.tentacle_angle - this","-45.0 - this",0]},"tentacle5":{"rotation":["variable.squid.tentacle_angle - this","-90.0 - this",0]},"tentacle6":{"rotation":["variable.squid.tentacle_angle - this","-135.0 - this",0]},"tentacle7":{"rotation":["variable.squid.tentacle_angle - this","-180.0 - this",0]},"tentacle8":{"rotation":["variable.squid.tentacle_angle - this","-225.0 - this",0]}}},"squid_rotate":{"anim_time_update":"query.modified_distance_moved","loop":true,"bones":{"body":{"rotation":[{"y":"180.0 - this"},{"x":"query.body_x_rotation"},{"y":"variable.squid.swim_rotation"}]}}}},"scripts":{"animate":["move","squid_rotate"]},"render_controllers":["controller.render.squid"],"spawn_egg":{"texture":"spawn_egg","texture_index":15}},"stray":{"identifier":"minecraft:stray","min_engine_version":"1.8.0","materials":{"default":"stray","overlay":"stray_clothes"},"textures":{"default":"textures/entity/skeleton/stray","overlay":"textures/entity/skeleton/stray_overlay"},"geometry":{"default":{"visible_bounds_width":1.5,"visible_bounds_height":2,"visible_bounds_offset":[0,1,0],"texturewidth":64,"textureheight":32,"bones":[{"name":"body","pivot":[0,24,0],"cubes":[{"origin":[-4,12,-2],"size":[8,12,4],"uv":[16,16]}],"parent":"waist"},{"name":"waist","pivot":[0,12,0]},{"name":"head","pivot":[0,24,0],"locators":{"lead":[0,24,0]},"cubes":[{"origin":[-4,24,-4],"size":[8,8,8],"uv":[0,0]}],"parent":"body"},{"name":"hat","pivot":[0,24,0],"cubes":[{"origin":[-4,24,-4],"size":[8,8,8],"uv":[32,0],"inflate":0.5}],"neverRender":true,"parent":"head"},{"name":"rightArm","pivot":[-5,22,0],"cubes":[{"origin":[-6,12,-1],"size":[2,12,2],"uv":[40,16]}],"parent":"body"},{"name":"rightItem","pivot":[-6,15,1],"neverRender":true,"parent":"rightArm"},{"name":"leftArm","pivot":[5,22,0],"cubes":[{"origin":[4,12,-1],"size":[2,12,2],"uv":[40,16]}],"mirror":true,"parent":"body"},{"name":"leftItem","pivot":[6,15,1],"neverRender":true,"parent":"leftArm"},{"name":"rightLeg","pivot":[-2,12,0],"cubes":[{"origin":[-3,0,-1],"size":[2,12,2],"uv":[0,16]}],"parent":"body"},{"name":"leftLeg","pivot":[2,12,0],"cubes":[{"origin":[1,0,-1],"size":[2,12,2],"uv":[0,16]}],"mirror":true,"parent":"body"}]},"overlay":{"visible_bounds_width":2,"visible_bounds_height":2,"visible_bounds_offset":[0,1,0],"texturewidth":64,"textureheight":32,"bones":[{"name":"body","parent":"waist","pivot":[0,24,0],"cubes":[{"origin":[-4,12,-2],"size":[8,12,4],"uv":[16,16]}],"inflate":0.25},{"name":"waist","neverRender":true,"pivot":[0,12,0]},{"name":"head","parent":"body","pivot":[0,24,0],"cubes":[{"origin":[-4,24,-4],"size":[8,8,8],"uv":[0,0]}],"inflate":0.25},{"name":"hat","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-4,24,-4],"size":[8,8,8],"uv":[32,0],"inflate":0.5}],"neverRender":true},{"name":"rightArm","parent":"body","pivot":[-5,22,0],"cubes":[{"origin":[-8,12,-2],"size":[4,12,4],"uv":[40,16]}],"inflate":0.25},{"name":"rightItem","parent":"rightArm","pivot":[-6,15,1],"neverRender":true},{"name":"leftArm","parent":"body","pivot":[5,22,0],"cubes":[{"origin":[4,12,-2],"size":[4,12,4],"uv":[40,16]}],"mirror":true,"inflate":0.25},{"name":"rightLeg","parent":"body","pivot":[-1.9,12,0],"cubes":[{"origin":[-3.9,0,-2],"size":[4,12,4],"uv":[0,16]}],"inflate":0.25},{"name":"leftLeg","parent":"body","pivot":[1.9,12,0],"cubes":[{"origin":[-0.1,0,-2],"size":[4,12,4],"uv":[0,16]}],"inflate":0.25,"mirror":true}]}},"spawn_egg":{"texture":"spawn_egg","texture_index":27},"scripts":{"pre_animation":["variable.tcos0 = (Math.cos(query.modified_distance_moved * 38.17) * query.modified_move_speed / variable.gliding_speed_value) * 57.3;"]},"animations":{"look_at_target_default":{"loop":true,"bones":{"head":{"relative_to":{"rotation":"entity"},"rotation":["query.target_x_rotation","query.target_y_rotation",0]}}},"look_at_target_gliding":{"loop":true,"bones":{"head":{"rotation":[-45,"query.target_y_rotation",0]}}},"look_at_target_swimming":{"loop":true,"bones":{"head":{"rotation":["math.lerp(query.target_x_rotation, -45.0, variable.swim_amount)","query.target_y_rotation",0]}}},"move":{"loop":true,"bones":{"leftarm":{"rotation":["variable.tcos0",0,0]},"leftleg":{"rotation":["variable.tcos0 * -1.4",0,0]},"rightarm":{"rotation":["-variable.tcos0",0,0]},"rightleg":{"rotation":["variable.tcos0 * 1.4",0,0]}}},"riding.arms":{"loop":true,"bones":{"leftarm":{"rotation":[-36,0,0]},"rightarm":{"rotation":[-36,0,0]}}},"riding.legs":{"loop":true,"bones":{"leftleg":{"rotation":["-72.0 - this","-18.0 - this","-this"]},"rightleg":{"rotation":["-72.0 - this","18.0 - this","-this"]}}},"holding":{"loop":true,"bones":{"leftarm":{"rotation":["variable.is_holding_left ? (-this * 0.5 - 18.0) : 0.0",0,0]},"rightarm":{"rotation":["variable.is_holding_right ? (-this * 0.5 - 18.0) : 0.0",0,0]}}},"brandish_spear":{"loop":true,"bones":{"rightarm":{"rotation":["this * -0.5 - 157.5 - 22.5 * variable.charge_amount","-this",0]}}},"charging":{"loop":true,"bones":{"rightarm":{"rotation":["22.5 * variable.charge_amount - this","-this",0]}}},"attack.rotations":{"loop":true,"bones":{"body":{"rotation":[0,"math.sin(math.sqrt(variable.attack_time) * 360) * 11.46 - this",0]},"leftarm":{"rotation":["math.sin(math.sqrt(variable.attack_time) * 360) * 11.46",0,0]},"rightarm":{"rotation":["math.sin(1.0 - math.pow(1.0 - variable.attack_time, 3.0) * 180.0) * (variable.is_brandishing_spear ? -1.0 : 1.0 )","variable.is_brandishing_spear ? 0.0 : (math.sin(math.sqrt(variable.attack_time) * 360) * 11.46) * 2.0",0]}}},"sneaking":{"loop":true,"bones":{"body":{"rotation":["0.5 - this",0,0]},"head":{"position":[0,1,0]},"leftarm":{"rotation":[72,0,0]},"leftleg":{"position":[0,-3,4]},"rightarm":{"rotation":[72,0,0]},"rightleg":{"position":[0,-3,4]}}},"bob":{"loop":true,"bones":{"leftarm":{"rotation":[0,0,"((math.cos(query.life_time * 103.2) * 2.865) + 2.865) *-1.0"]},"rightarm":{"rotation":[0,0,"(math.cos(query.life_time * 103.2) * 2.865) + 2.865"]}}},"damage_nearby_mobs":{"loop":true,"bones":{"leftarm":{"rotation":["-45.0-this","-this","-this"]},"leftleg":{"rotation":["45.0-this","-this","-this"]},"rightarm":{"rotation":["45.0-this","-this","-this"]},"rightleg":{"rotation":["-45.0-this","-this","-this"]}}},"bow_and_arrow":{"loop":true,"bones":{"leftarm":{"rotation":["query.target_x_rotation - 90.0 - math.sin(query.life_time * 76.8) * 2.865 - this","query.target_y_rotation + 28.65","-(math.cos(query.life_time * 103.2) * 2.865) - 2.865"]},"rightarm":{"rotation":["query.target_x_rotation - 90.0 + math.sin(query.life_time * 76.8) * 2.865 - this","query.target_y_rotation - 5.73","(math.cos(query.life_time * 103.2) * 2.865) + 2.865"]}}},"swimming":{"loop":true,"bones":{"body":{"position":[0,"variable.swim_amount * -10.0 - this","variable.swim_amount * 9.0 - this"],"rotation":["variable.swim_amount * (90.0 + query.target_x_rotation)",0,0]},"leftarm":{"rotation":["math.lerp(this, -180.0, variable.swim_amount) - (variable.swim_amount * ((math.sin(variable.attack_time * 180.0) * 57.3) * 1.2 - (math.sin((1.0 - (1.0 - variable.attack_time) * (1.0 - variable.attack_time)) * 180.0) * 57.3) * 0.4)) - (variable.swim_amount * (math.sin(query.life_time * 76.776372) * 2.865)) - this","math.lerp(this, 14.325, variable.swim_amount) - this","math.lerp(this, 14.325, variable.swim_amount) - (variable.swim_amount * (math.cos(query.life_time * 103.13244) * 2.865 + 2.865)) - this"]},"leftleg":{"rotation":["math.lerp(this, math.cos(query.life_time * 390.0 + 180.0) * 0.3, variable.swim_amount)",0,0]},"rightarm":{"rotation":["math.lerp(this, -180.0, variable.swim_amount) - (variable.swim_amount * ((math.sin(variable.attack_time * 180.0) * 57.3) * 1.2 - (math.sin((1.0 - (1.0 - variable.attack_time) * (1.0 - variable.attack_time)) * 180.0) * 57.3) * 0.4)) + (variable.swim_amount * (math.sin(query.life_time * 76.776372) * 2.865)) - this","math.lerp(this, 14.325, variable.swim_amount) - this","math.lerp(this, -14.325, variable.swim_amount) + (variable.swim_amount * (math.cos(query.life_time * 103.13244) * 2.865 + 2.865)) - this"]},"rightleg":{"rotation":["math.lerp(this, math.cos(query.life_time * 390.0) * 0.3, variable.swim_amount)",0,0]}}},"use_item_progress":{"loop":true,"bones":{"rightarm":{"rotation":["variable.use_item_startup_progress * -60.0 + variable.use_item_interval_progress * 11.25","variable.use_item_startup_progress * -22.5 + variable.use_item_interval_progress * 11.25","variable.use_item_startup_progress * -5.625 + variable.use_item_interval_progress * 11.25"]}}}},"animation_controllers":{"look_at_target":{"initial_state":"default","states":{"default":{"animations":["look_at_target_default"],"transitions":[{"gliding":"query.is_gliding"},{"swimming":"query.is_swimming"}]},"gliding":{"animations":["look_at_target_gliding"],"transitions":[{"swimming":"query.is_swimming"},{"default":"!query.is_gliding"}]},"swimming":{"animations":["look_at_target_swimming"],"transitions":[{"gliding":"query.is_gliding"},{"default":"!query.is_swimming"}]}}},"move":{"initial_state":"default","states":{"default":{"animations":["move"]}}},"riding":{"initial_state":"default","states":{"default":{"transitions":[{"riding":"query.is_riding"}]},"riding":{"animations":["riding.arms","riding.legs"],"transitions":[{"default":"!query.is_riding"}]}}},"holding":{"initial_state":"default","states":{"default":{"animations":["holding"]}}},"brandish_spear":{"initial_state":"default","states":{"brandish_spear":{"animations":["brandish_spear"],"transitions":[{"default":"!variable.is_brandishing_spear"}]},"default":{"transitions":[{"brandish_spear":"variable.is_brandishing_spear"}]}}},"charging":{"initial_state":"default","states":{"charging":{"animations":["charging"],"transitions":[{"default":"!query.is_charging"}]},"default":{"transitions":[{"charging":"query.is_charging"}]}}},"attack":{"initial_state":"default","states":{"attacking":{"animations":["attack.rotations"],"transitions":[{"default":"variable.attack_time < 0.0"}]},"default":{"transitions":[{"attacking":"variable.attack_time >= 0.0"}]}}},"sneaking":{"initial_state":"default","states":{"default":{"transitions":[{"sneaking":"query.is_sneaking"}]},"sneaking":{"animations":["sneaking"],"transitions":[{"default":"!query.is_sneaking"}]}}},"bob":{"initial_state":"default","states":{"default":{"animations":["bob"]}}},"damage_nearby_mobs":{"initial_state":"default","states":{"damage_nearby_mobs":{"animations":["damage_nearby_mobs"],"transitions":[{"default":"!variable.damage_nearby_mobs"}]},"default":{"transitions":[{"damage_nearby_mobs":"variable.damage_nearby_mobs"}]}}},"bow_and_arrow":{"initial_state":"default","states":{"bow_and_arrow":{"animations":["bow_and_arrow"],"transitions":[{"default":"!query.has_target"}]},"default":{"transitions":[{"bow_and_arrow":"query.has_target"}]}}},"swimming":{"initial_state":"default","states":{"default":{"transitions":[{"is_swimming":"variable.swim_amount > 0.0"}]},"is_swimming":{"animations":["swimming"],"transitions":[{"default":"variable.swim_amount <= 0.0"}]}}},"use_item_progress":{"initial_state":"default","states":{"default":{"transitions":[{"use_item_progress":"( variable.use_item_interval_progress > 0.0 ) || ( variable.use_item_startup_progress > 0.0 )"}]},"use_item_progress":{"animations":["use_item_progress"],"transitions":[{"default":"( variable.use_item_interval_progress <= 0.0 ) && ( variable.use_item_startup_progress <= 0.0 )"}]}}}},"render_controllers":["controller.render.stray_clothes","controller.render.stray"],"enable_attachables":true},"strider":{"identifier":"minecraft:strider","materials":{"default":"strider"},"textures":{"default":"textures/entity/strider/strider","saddled":"textures/entity/strider/strider","suffocated":"textures/entity/strider/strider_cold","suffocated_saddled":"textures/entity/strider/strider_cold"},"geometry":{"default":{"bones":[{"name":"right_leg","pivot":[-4,16,0],"cubes":[{"origin":[-6,0,-2],"size":[4,16,4],"uv":[0,32]}]},{"name":"left_leg","pivot":[4,16,0],"cubes":[{"origin":[2,0,-2],"size":[4,16,4],"uv":[0,55]}]},{"name":"body","pivot":[0,16,0],"cubes":[{"origin":[-8,14,-8],"size":[16,14,16],"uv":[0,0]}],"locators":{"lead":[0,15,-1]}},{"name":"bristle5","parent":"body","pivot":[8,19,0],"cubes":[{"origin":[8,19,-8],"size":[12,0,16],"pivot":[8,19,0],"rotation":[0,0,70],"uv":[16,65]}]},{"name":"bristle4","parent":"body","pivot":[8,24,0],"cubes":[{"origin":[8,24,-8],"size":[12,0,16],"pivot":[8,24,0],"rotation":[0,0,65],"uv":[16,49]}]},{"name":"bristle3","parent":"body","pivot":[8,28,0],"cubes":[{"origin":[8,28,-8],"size":[12,0,16],"pivot":[8,28,0],"rotation":[0,0,50],"uv":[16,33]}]},{"name":"bristle2","parent":"body","pivot":[-8,28,0],"cubes":[{"origin":[-20,28,-8],"size":[12,0,16],"pivot":[-8,28,0],"rotation":[0,0,-50],"uv":[16,33],"mirror":true}]},{"name":"bristle1","parent":"body","pivot":[-8,24,0],"cubes":[{"origin":[-20,24,-8],"size":[12,0,16],"pivot":[-8,24,0],"rotation":[0,0,-65],"uv":[16,49],"mirror":true}]},{"name":"bristle0","parent":"body","pivot":[-8,19,0],"cubes":[{"origin":[-20,19,-8],"size":[12,0,16],"pivot":[-8,19,0],"rotation":[0,0,-70],"uv":[16,65],"mirror":true}]}],"visible_bounds_width":3,"visible_bounds_height":2,"visible_bounds_offset":[0,1,0],"texturewidth":64,"textureheight":128}},"spawn_egg":{"base_color":"#9c3436","overlay_color":"#4d494d"},"scripts":{"pre_animation":["variable.animation_speed = Math.min(query.modified_move_speed, 0.25);","variable.speed = 85.9437;","variable.bristle_flow=Math.cos(query.modified_distance_moved * variable.speed + 180) * variable.animation_speed;","variable.bristle_range_mod=1;","variable.bristle_speed_mod=1;"],"animate":["look_at_target","walk","bristle_flow"]},"animations":{"look_at_target":{"loop":true,"bones":{"body":{"relative_to":{"rotation":"entity"},"rotation":["query.target_x_rotation","query.target_y_rotation",0]}}},"walk":{"loop":true,"bones":{"right_leg":{"rotation":["Math.sin(query.modified_distance_moved * variable.speed * 0.5 + 180) * 114.592 * variable.animation_speed",0,"10 * Math.cos(query.modified_distance_moved * variable.speed * 0.5f + 180) * variable.animation_speed"],"position":[0,"-2 * Math.sin(query.modified_distance_moved * variable.speed * 0.5) * 2 * variable.animation_speed",0]},"left_leg":{"rotation":["Math.sin(query.modified_distance_moved * variable.speed * 0.5) * 114.592 * variable.animation_speed",0,"10 * Math.cos(query.modified_distance_moved * variable.speed * 0.5f) * variable.animation_speed"],"position":[0,"-2 * Math.sin(query.modified_distance_moved * variable.speed * 0.5 + 180) * 2 * variable.animation_speed",0]},"body":{"rotation":[0,0,"5.72958 * Math.sin(query.modified_distance_moved * variable.speed) * 4 * variable.animation_speed"],"position":[0,"-2 * Math.cos(query.modified_distance_moved * variable.speed) * 2 * variable.animation_speed",0]},"bristle1":{"rotation":[0,0,"variable.bristle_flow * 74.4845"]},"bristle2":{"rotation":[0,0,"variable.bristle_flow * 68.7549"]},"bristle3":{"rotation":[0,0,"variable.bristle_flow * 34.3775"]},"bristle4":{"rotation":[0,0,"variable.bristle_flow * 68.7549"]},"bristle5":{"rotation":[0,0,"variable.bristle_flow * 74.4845"]}}},"bristle_flow":{"loop":true,"bones":{"bristle0":{"rotation":[0,0,"2.864789 * variable.bristle_range_mod * Math.sin(query.life_time * 20 * variable.bristle_speed_mod * -22.9183)"]},"bristle1":{"rotation":[0,0,"5.72958 * variable.bristle_range_mod * Math.sin(query.life_time * 20 * variable.bristle_speed_mod * 11.4592)"]},"bristle2":{"rotation":[0,0,"5.72958 * variable.bristle_range_mod * Math.sin(query.life_time * 20 * variable.bristle_speed_mod * 22.9183)"]},"bristle3":{"rotation":[0,0,"5.72958 * variable.bristle_range_mod * Math.sin(query.life_time * 20 * variable.bristle_speed_mod * 22.9183)"]},"bristle4":{"rotation":[0,0,"5.72958 * variable.bristle_range_mod * Math.sin(query.life_time * 20 * variable.bristle_speed_mod * 11.4592)"]},"bristle5":{"rotation":[0,0,"2.864789 * variable.bristle_range_mod * Math.sin(query.life_time * 20 * variable.bristle_speed_mod * -22.9183)"]}}}},"render_controllers":["controller.render.strider"]},"trident":{"identifier":"minecraft:thrown_trident","textures":{"default":"textures/entity/trident","loyalty_rope":"textures/entity/lead_knot"},"geometry":{"default":{"texturewidth":32,"textureheight":32,"bones":[{"name":"pole","pivot":[0,24,0],"cubes":[{"origin":[-0.5,-3,-0.5],"size":[1,31,1],"inflate":0.01,"uv":[0,0]},{"origin":[-1.5,22,-0.5],"size":[3,2,1],"uv":[4,0]},{"origin":[-2.5,23,-0.5],"size":[1,4,1],"uv":[4,3]},{"origin":[1.5,23,-0.5],"size":[1,4,1],"uv":[4,3]}]}]}}},"tnt_minecart":{"identifier":"minecraft:tnt_minecart","min_engine_version":"1.8.0","materials":{"default":"minecart"},"textures":{"default":"textures/entity/minecart"},"geometry":{"default":{"bones":[{"name":"bottom","pivot":[0,6,0],"cubes":[{"origin":[-10,-6.5,-1],"size":[20,16,2],"rotation":[90,0,0],"uv":[0,10]}]},{"name":"back","pivot":[0,0,0],"cubes":[{"origin":[-17,2.5,-1],"size":[16,8,2],"rotation":[0,270,0],"uv":[0,0]}],"parent":"bottom"},{"name":"front","pivot":[0,0,0],"cubes":[{"origin":[1,2.5,-1],"size":[16,8,2],"rotation":[0,90,0],"uv":[0,0]}],"parent":"bottom"},{"name":"right","pivot":[0,0,0],"cubes":[{"origin":[-8,2.5,-8],"size":[16,8,2],"rotation":[0,180,0],"uv":[0,0]}],"parent":"bottom"},{"name":"left","pivot":[0,0,0],"cubes":[{"origin":[-8,2.5,6],"size":[16,8,2],"uv":[0,0]}],"parent":"bottom"}],"texturewidth":64,"textureheight":32}},"scripts":{"pre_animation":["variable.hurt = query.hurt_time - query.frame_alpha;"],"animate":["move"]},"animations":{"move":{"loop":true,"bones":{"bottom":{"position":["variable.rail_offset.x / query.model_scale","variable.rail_offset.y / query.model_scale","variable.rail_offset.z / query.model_scale"],"rotation":["variable.hurt > 0 ? -Math.sin(variable.hurt * 360 / (Math.pi * 2)) * variable.hurt * (((20 * 2 - query.structural_integrity) - query.frame_alpha) < 0 ? 0: (20 * 2 - query.structural_integrity) - query.frame_alpha) / 10 * query.hurt_direction : 0",0,"-variable.rail_rotation.z"]}}}},"render_controllers":["controller.render.minecart"]},"tropical_fish":{"identifier":"minecraft:tropicalfish","materials":{"default":"tropicalfish"},"textures":{"typeA":"textures/entity/fish/tropical_a","typeB":"textures/entity/fish/tropical_b","aPattern1":"textures/entity/fish/tropical_a_pattern_1","aPattern2":"textures/entity/fish/tropical_a_pattern_2","aPattern3":"textures/entity/fish/tropical_a_pattern_3","aPattern4":"textures/entity/fish/tropical_a_pattern_4","aPattern5":"textures/entity/fish/tropical_a_pattern_5","aPattern6":"textures/entity/fish/tropical_a_pattern_6","bPattern1":"textures/entity/fish/tropical_b_pattern_1","bPattern2":"textures/entity/fish/tropical_b_pattern_2","bPattern3":"textures/entity/fish/tropical_b_pattern_3","bPattern4":"textures/entity/fish/tropical_b_pattern_4","bPattern5":"textures/entity/fish/tropical_b_pattern_5","bPattern6":"textures/entity/fish/tropical_b_pattern_6"},"scripts":{"pre_animation":["variable.ZRot = !query.is_in_water ? Math.cos((query.time_stamp + query.frame_alpha) * 0.25) * 90 : 0.0;","variable.AnimationAmountBlend = Math.lerp(variable.AnimationAmountPrev, variable.AnimationAmount, query.frame_alpha);"]},"geometry":{"typeA":{"visible_bounds_width":0.5,"visible_bounds_height":0.5,"bones":[{"pivot":[-0.5,0,0],"cubes":[{"origin":[-1,0,-3],"size":[2,3,6],"uv":[0,0]},{"origin":[0,3,-2.9992],"size":[0,4,6],"uv":[10,-6]}],"name":"body"},{"pivot":[0,0,3],"cubes":[{"origin":[0,0,3],"size":[0,3,4],"uv":[24,-4]}],"name":"tailfin","parent":"body"},{"pivot":[0.5,0,1],"bind_pose_rotation":[0,-35,0],"cubes":[{"origin":[0.336,0,-0.10594],"size":[2,2,0],"uv":[2,12]}],"name":"leftFin","parent":"body"},{"pivot":[-0.5,0,1],"bind_pose_rotation":[0,35,0],"cubes":[{"origin":[-2.336,0,-0.10594],"size":[2,2,0],"uv":[2,16]}],"name":"rightFin","parent":"body"}],"texturewidth":32,"textureheight":32},"typeB":{"visible_bounds_width":0.5,"visible_bounds_height":0.5,"bones":[{"pivot":[-0.5,0,0],"cubes":[{"origin":[-1,0,-0.0008],"size":[2,6,6],"uv":[0,20]},{"origin":[0,-5,-0.0008],"size":[0,5,6],"uv":[20,21]},{"origin":[0,6,-0.0008],"size":[0,5,6],"uv":[20,10]}],"name":"body"},{"pivot":[0,0,6],"cubes":[{"origin":[0,0.0008,6],"size":[0,6,5],"uv":[21,16]}],"name":"tailfin","parent":"body"},{"pivot":[0.5,0,1],"bind_pose_rotation":[0,-35,0],"cubes":[{"origin":[2.05673,0,2.35152],"size":[2,2,0],"uv":[2,12]}],"name":"leftFin","parent":"body"},{"pivot":[-0.5,0,1],"bind_pose_rotation":[0,35,0],"cubes":[{"origin":[-4.05673,0,2.35152],"size":[2,2,0],"uv":[2,16]}],"name":"rightFin","parent":"body"}],"texturewidth":32,"textureheight":32}},"animations":{"flop":{"loop":true,"bones":{"body":{"rotation":[0,"math.cos(variable.animationamountblend * 45.0) * 2.0","variable.zrot"]},"tailfin":{"rotation":[0,"math.cos(variable.animationamountblend * 45.0) * -25.75",0]}}},"swim":{"loop":true,"bones":{"tailfin":{"rotation":[0,"math.cos(variable.animationamountblend * 30.0) * -25.75",0]}}}},"animation_controllers":{"general":{"initial_state":"flopping","states":{"flopping":{"animations":["flop"],"transitions":[{"swimming":"query.is_in_water || query.is_levitating"}]},"swimming":{"animations":["swim"],"transitions":[{"flopping":"!query.is_in_water && !query.is_levitating"}]}}}},"render_controllers":["controller.render.tropicalfish"],"spawn_egg":{"texture":"spawn_egg","texture_index":44}},"turtle":{"identifier":"minecraft:turtle","materials":{"default":"turtle"},"textures":{"default":"textures/entity/turtle/big_sea_turtle"},"geometry":{"default":{"texturewidth":128,"textureheight":64,"bones":[{"name":"head","parent":"body","pivot":[0,5,-10],"cubes":[{"origin":[-3,1,-13],"size":[6,5,6],"uv":[2,0]}]},{"name":"eggbelly","parent":"body","pivot":[0,13,-10],"bind_pose_rotation":[90,0,0],"cubes":[{"origin":[-4.5,-8,-24],"size":[9,18,1],"uv":[69,33]}]},{"name":"body","pivot":[0,13,-10],"bind_pose_rotation":[90,0,0],"cubes":[{"origin":[-9.5,-10,-20],"size":[19,20,6],"uv":[6,37]},{"origin":[-5.5,-8,-23],"size":[11,18,3],"uv":[30,1]}]},{"name":"leg0","parent":"body","pivot":[-3.5,2,11],"cubes":[{"origin":[-5.5,1,11],"size":[4,1,10],"uv":[0,23]}]},{"name":"leg1","parent":"body","pivot":[3.5,2,11],"cubes":[{"origin":[1.5,1,11],"size":[4,1,10],"uv":[0,12]}]},{"name":"leg2","parent":"body","pivot":[-5,3,-4],"cubes":[{"origin":[-18,2,-6],"size":[13,1,5],"uv":[26,30]}]},{"name":"leg3","parent":"body","pivot":[5,3,-4],"cubes":[{"origin":[5,2,-6],"size":[13,1,5],"uv":[26,24]}]}]}},"scripts":{"pre_animation":["variable.timeMultiplier = query.has_rider ? 0.39972 : 1.0;","variable.backLegMultiplier = query.has_rider ? 0.5 : 3.0;","variable.frontLegMultiplier = query.has_rider ? 2.0 : 8.0;","variable.legSpeedMultiplier = query.has_rider ? 2.0 : 5.0;"],"scale":"1.2"},"animations":{"general":{"loop":true,"bones":{"body":{"position":[0,"query.is_pregnant ? 1.0 : 0.0",0],"rotation":["-this",0,0]},"eggbelly":{"position":[0,-0.08,0],"rotation":["-this",0,0],"scale":"query.is_pregnant ? 1.0 : 0.0"}}},"move":{"anim_time_update":"query.modified_distance_moved","loop":true,"bones":{"leg0":{"rotation":["math.clamp(math.cos(query.anim_time * 22.92) * query.modified_move_speed * 28.65, -90.0, 90.0) - this","-this","-this"]},"leg1":{"rotation":["math.clamp(math.cos(query.anim_time * 22.92 + 180) * query.modified_move_speed * 28.65, -90.0, 90.0) - this","-this","-this"]},"leg2":{"rotation":["-this","-this","math.clamp(math.cos(query.anim_time * 22.92 + 180) * query.modified_move_speed * 28.65, -90.0, 90.0) - this"]},"leg3":{"rotation":["-this","-this","math.clamp(math.cos(query.anim_time * 22.92) * query.modified_move_speed * 28.65, -90.0, 90.0) - this"]}}},"ground_move":{"anim_time_update":"query.modified_distance_moved","loop":true,"bones":{"leg0":{"rotation":["-this","math.clamp(math.cos(query.anim_time * variable.timemultiplier * variable.legspeedmultiplier * 57.3 + 180) * variable.backlegmultiplier * query.modified_move_speed * 57.3, -90.0, 90.0) - this","-this"]},"leg1":{"rotation":["-this","math.clamp(math.cos(query.anim_time * variable.timemultiplier * variable.legspeedmultiplier * 57.3) * variable.backlegmultiplier * query.modified_move_speed * 57.3, -90.0, 90.0) - this","-this"]},"leg2":{"rotation":["-this","query.is_laying_egg ? math.cos(query.life_time * 1146.0 + 180) * 90.0 : math.clamp(math.cos(query.anim_time * variable.timemultiplier * variable.legspeedmultiplier * 57.3 + 180) * variable.frontlegmultiplier * query.modified_move_speed * 57.3, -90.0, 90.0) - this","-this"]},"leg3":{"rotation":["-this","query.is_laying_egg ? math.cos(query.life_time * 1146.0) * 90.0 : math.clamp(math.cos(query.anim_time * variable.timemultiplier * variable.legspeedmultiplier * 57.3) * variable.frontlegmultiplier * query.modified_move_speed * 57.3, -90.0, 90.0) - this","-this"]}}},"look_at_target":{"loop":true,"bones":{"head":{"relative_to":{"rotation":"entity"},"rotation":["query.target_x_rotation - this","query.target_y_rotation - this",0]}}}},"animation_controllers":{"general":{"initial_state":"default","states":{"default":{"animations":["general"]}}},"move":{"initial_state":"default","states":{"default":{"animations":["look_at_target"],"transitions":[{"swimming":"query.is_in_water && !query.is_on_ground"},{"walking":"!query.is_in_water && query.is_on_ground"}]},"swimming":{"animations":["move","look_at_target"],"transitions":[{"walking":"!query.is_in_water && query.is_on_ground"}]},"walking":{"animations":["ground_move","look_at_target"],"transitions":[{"swimming":"query.is_in_water && !query.is_on_ground"}]}}}},"render_controllers":["controller.render.turtle"],"spawn_egg":{"texture":"spawn_egg","texture_index":50}},"vex":{"identifier":"minecraft:vex","min_engine_version":"1.8.0","materials":{"default":"vex"},"textures":{"default":"textures/entity/illager/vex","charging":"textures/entity/illager/vex_charging"},"geometry":{"default":{"visible_bounds_width":1.5,"visible_bounds_height":1,"visible_bounds_offset":[0,0.5,0],"texturewidth":64,"textureheight":64,"bones":[{"name":"head","parent":"body","pivot":[0,24,0],"cubes":[{"origin":[-4,24,-4],"size":[8,8,8],"uv":[0,0]}]},{"name":"body","pivot":[0,24,0],"cubes":[{"origin":[-4,12,-2],"size":[8,12,4],"uv":[16,16]}]},{"name":"rightArm","parent":"body","pivot":[-5,22,0],"cubes":[{"origin":[-8,12,-2],"size":[4,12,4],"uv":[40,16]}]},{"name":"rightItem","pivot":[-6,13,0],"neverRender":true,"parent":"rightarm"},{"name":"leftArm","parent":"body","pivot":[5,22,0],"mirror":true,"cubes":[{"origin":[4,12,-2],"size":[4,12,4],"uv":[40,16]}]},{"name":"leg0","parent":"body","pivot":[-1.9,12,0],"cubes":[{"origin":[-3.9,0,-2],"size":[4,12,4],"uv":[0,16]},{"origin":[-2.9,3,-2],"size":[6,10,4],"uv":[32,0]}]},{"name":"leftwing","parent":"body","pivot":[0,24,0],"mirror":true,"cubes":[{"origin":[0,12,0],"size":[20,12,1],"uv":[0,32]}]},{"name":"rightwing","parent":"body","pivot":[0,24,0],"cubes":[{"origin":[-20,12,0],"size":[20,12,1],"uv":[0,32]}]}]}},"scripts":{"pre_animation":["variable.tcos0 = (Math.cos(query.modified_distance_moved * 38.17) * query.modified_move_speed / variable.gliding_speed_value) * 57.3;"],"scale":"0.4"},"animations":{"look_at_target_default":{"loop":true,"bones":{"head":{"relative_to":{"rotation":"entity"},"rotation":["query.target_x_rotation","query.target_y_rotation",0]}}},"look_at_target_gliding":{"loop":true,"bones":{"head":{"rotation":[-45,"query.target_y_rotation",0]}}},"look_at_target_swimming":{"loop":true,"bones":{"head":{"rotation":["math.lerp(query.target_x_rotation, -45.0, variable.swim_amount)","query.target_y_rotation",0]}}},"move":{"loop":true,"bones":{"leftarm":{"rotation":["variable.tcos0",0,0]},"leftleg":{"rotation":["variable.tcos0 * -1.4",0,0]},"rightarm":{"rotation":["-variable.tcos0",0,0]},"rightleg":{"rotation":["variable.tcos0 * 1.4",0,0]}}},"riding.arms":{"loop":true,"bones":{"leftarm":{"rotation":[-36,0,0]},"rightarm":{"rotation":[-36,0,0]}}},"riding.legs":{"loop":true,"bones":{"leftleg":{"rotation":["-72.0 - this","-18.0 - this","-this"]},"rightleg":{"rotation":["-72.0 - this","18.0 - this","-this"]}}},"holding":{"loop":true,"bones":{"leftarm":{"rotation":["variable.is_holding_left ? (-this * 0.5 - 18.0) : 0.0",0,0]},"rightarm":{"rotation":["variable.is_holding_right ? (-this * 0.5 - 18.0) : 0.0",0,0]}}},"brandish_spear":{"loop":true,"bones":{"rightarm":{"rotation":["this * -0.5 - 157.5 - 22.5 * variable.charge_amount","-this",0]}}},"charging":{"loop":true,"bones":{"rightarm":{"rotation":["22.5 * variable.charge_amount - this","-this",0]}}},"attack.rotations":{"loop":true,"bones":{"body":{"rotation":[0,"math.sin(math.sqrt(variable.attack_time) * 360) * 11.46 - this",0]},"leftarm":{"rotation":["math.sin(math.sqrt(variable.attack_time) * 360) * 11.46",0,0]},"rightarm":{"rotation":["math.sin(1.0 - math.pow(1.0 - variable.attack_time, 3.0) * 180.0) * (variable.is_brandishing_spear ? -1.0 : 1.0 )","variable.is_brandishing_spear ? 0.0 : (math.sin(math.sqrt(variable.attack_time) * 360) * 11.46) * 2.0",0]}}},"sneaking":{"loop":true,"bones":{"body":{"rotation":["0.5 - this",0,0]},"head":{"position":[0,1,0]},"leftarm":{"rotation":[72,0,0]},"leftleg":{"position":[0,-3,4]},"rightarm":{"rotation":[72,0,0]},"rightleg":{"position":[0,-3,4]}}},"bob":{"loop":true,"bones":{"leftarm":{"rotation":[0,0,"((math.cos(query.life_time * 103.2) * 2.865) + 2.865) *-1.0"]},"rightarm":{"rotation":[0,0,"(math.cos(query.life_time * 103.2) * 2.865) + 2.865"]}}},"damage_nearby_mobs":{"loop":true,"bones":{"leftarm":{"rotation":["-45.0-this","-this","-this"]},"leftleg":{"rotation":["45.0-this","-this","-this"]},"rightarm":{"rotation":["45.0-this","-this","-this"]},"rightleg":{"rotation":["-45.0-this","-this","-this"]}}},"bow_and_arrow":{"loop":true,"bones":{"leftarm":{"rotation":["query.target_x_rotation - 90.0 - math.sin(query.life_time * 76.8) * 2.865 - this","query.target_y_rotation + 28.65","-(math.cos(query.life_time * 103.2) * 2.865) - 2.865"]},"rightarm":{"rotation":["query.target_x_rotation - 90.0 + math.sin(query.life_time * 76.8) * 2.865 - this","query.target_y_rotation - 5.73","(math.cos(query.life_time * 103.2) * 2.865) + 2.865"]}}},"swimming":{"animation_length":1.3,"loop":true,"bones":{"leftarm":{"rotation":{"0.7":{"post":["math.lerp(this, 11.25 * math.mod(query.modified_distance_moved, 26.0), variable.leftarmswim_amount)","math.lerp(this, 180.0, variable.leftarmswim_amount)","math.lerp(this, 72.77 + 13.4 * math.mod(query.modified_distance_moved, 26.0), variable.leftarmswim_amount)"],"pre":["math.lerp(this, 0.0, variable.leftarmswim_amount)","math.lerp(this, 180.0, variable.leftarmswim_amount)","math.lerp(this, 180.0 - 0.01877 * (-65.0 * math.mod(query.modified_distance_moved, 26.0) + math.mod(query.modified_distance_moved, 26.0) * math.mod(query.modified_distance_moved, 26.0)), variable.leftarmswim_amount)"]},"1.1":["math.lerp(this, 11.25 * math.mod(query.modified_distance_moved, 26.0), variable.leftarmswim_amount)","math.lerp(this, 180.0, variable.leftarmswim_amount)","math.lerp(this, 72.77 + 13.4 * math.mod(query.modified_distance_moved, 26.0), variable.leftarmswim_amount)"],"1.3":{"post":["math.lerp(this, 90.0 - (22.5 * math.mod(query.modified_distance_moved, 26.0)), variable.leftarmswim_amount)","math.lerp(this, 180.0, variable.leftarmswim_amount)","math.lerp(this, 180.0, variable.leftarmswim_amount)"],"pre":["math.lerp(this, 11.25 * math.mod(query.modified_distance_moved, 26.0), variable.leftarmswim_amount)","math.lerp(this, 180.0, variable.leftarmswim_amount)","math.lerp(this, 72.77 + 13.4 * math.mod(query.modified_distance_moved, 26.0), variable.leftarmswim_amount)"]}}},"leftleg":{"rotation":["math.lerp(this, math.cos(query.modified_distance_moved * 19.5 + 180.0) * 17.2, variable.leftarmswim_amount) - this",0,0]},"rightarm":{"rotation":{"0.7":{"post":["math.lerp(this, 11.25 * math.mod(query.modified_distance_moved, 26.0), variable.rightarmswim_amount)","math.lerp(this, 180.0, variable.rightarmswim_amount)","math.lerp(this, 72.77 + 13.4 * math.mod(query.modified_distance_moved, 26.0), variable.rightarmswim_amount)"],"pre":["math.lerp(this, 0.0, variable.rightarmswim_amount)","math.lerp(this, 180.0, variable.rightarmswim_amount)","math.lerp(this, -0.1019 * (-65.0 * math.mod(query.modified_distance_moved, 26.0) + math.mod(query.modified_distance_moved, 26.0) * math.mod(query.modified_distance_moved, 26.0)), variable.rightarmswim_amount)"]},"1.1":["math.lerp(this, 11.25 * math.mod(query.modified_distance_moved, 26.0), variable.rightarmswim_amount)","math.lerp(this, 180.0, variable.rightarmswim_amount)","math.lerp(this, 72.77 + 13.4 * math.mod(query.modified_distance_moved, 26.0), variable.rightarmswim_amount)"],"1.3":{"post":["math.lerp(this, 90.0 - (22.5 * math.mod(query.modified_distance_moved, 26.0)), variable.rightarmswim_amount)","math.lerp(this, 180.0, variable.rightarmswim_amount)","math.lerp(this, 180.0, variable.rightarmswim_amount)"],"pre":["math.lerp(this, 11.25 * math.mod(query.modified_distance_moved, 26.0), variable.rightarmswim_amount)","math.lerp(this, 180.0, variable.rightarmswim_amount)","math.lerp(this, 72.77 + 13.4 * math.mod(query.modified_distance_moved, 26.0), variable.rightarmswim_amount)"]}}},"rightleg":{"rotation":["math.lerp(this, math.cos(query.modified_distance_moved * 19.5) * 17.2, variable.leftarmswim_amount) - this",0,0]}}},"use_item_progress":{"loop":true,"bones":{"rightarm":{"rotation":["variable.use_item_startup_progress * -60.0 + variable.use_item_interval_progress * 11.25","variable.use_item_startup_progress * -22.5 + variable.use_item_interval_progress * 11.25","variable.use_item_startup_progress * -5.625 + variable.use_item_interval_progress * 11.25"]}}},"vex_move":{"anim_time_update":"query.modified_distance_moved","loop":true,"bones":{"leftwing":{"position":[0,"-1.0 - this","2.0 - this"],"rotation":["27.0 - this","-(27.0 + math.cos(query.life_time * 916.8) * 9.0) - this","-27.0 - this"]},"leg0":{"rotation":["variable.tcos0 * 1.4 + 36.0",0,0]},"rightarm":{"rotation":["query.is_charging ? (216.0 - this) : 0.0",0,0]},"rightwing":{"position":[0,"-1.0 - this","2.0 - this"],"rotation":["27.0 - this","27.0 + math.cos(query.life_time * 916.8) * 9.0 - this","27.0 - this"]}}}},"animation_controllers":{"look_at_target":{"initial_state":"default","states":{"default":{"animations":["look_at_target_default"],"transitions":[{"gliding":"query.is_gliding"},{"swimming":"query.is_swimming"}]},"gliding":{"animations":["look_at_target_gliding"],"transitions":[{"swimming":"query.is_swimming"},{"default":"!query.is_gliding"}]},"swimming":{"animations":["look_at_target_swimming"],"transitions":[{"gliding":"query.is_gliding"},{"default":"!query.is_swimming"}]}}},"move":{"initial_state":"default","states":{"default":{"animations":["move"]}}},"riding":{"initial_state":"default","states":{"default":{"transitions":[{"riding":"query.is_riding"}]},"riding":{"animations":["riding.arms","riding.legs"],"transitions":[{"default":"!query.is_riding"}]}}},"holding":{"initial_state":"default","states":{"default":{"animations":["holding"]}}},"brandish_spear":{"initial_state":"default","states":{"brandish_spear":{"animations":["brandish_spear"],"transitions":[{"default":"!variable.is_brandishing_spear"}]},"default":{"transitions":[{"brandish_spear":"variable.is_brandishing_spear"}]}}},"charging":{"initial_state":"default","states":{"charging":{"animations":["charging"],"transitions":[{"default":"!query.is_charging"}]},"default":{"transitions":[{"charging":"query.is_charging"}]}}},"attack":{"initial_state":"default","states":{"attacking":{"animations":["attack.rotations"],"transitions":[{"default":"variable.attack_time < 0.0"}]},"default":{"transitions":[{"attacking":"variable.attack_time >= 0.0"}]}}},"sneaking":{"initial_state":"default","states":{"default":{"transitions":[{"sneaking":"query.is_sneaking"}]},"sneaking":{"animations":["sneaking"],"transitions":[{"default":"!query.is_sneaking"}]}}},"bob":{"initial_state":"default","states":{"default":{"animations":["bob"]}}},"damage_nearby_mobs":{"initial_state":"default","states":{"damage_nearby_mobs":{"animations":["damage_nearby_mobs"],"transitions":[{"default":"!variable.damage_nearby_mobs"}]},"default":{"transitions":[{"damage_nearby_mobs":"variable.damage_nearby_mobs"}]}}},"bow_and_arrow":{"initial_state":"default","states":{"bow_and_arrow":{"animations":["bow_and_arrow"],"transitions":[{"default":"!query.has_target"}]},"default":{"transitions":[{"bow_and_arrow":"query.has_target"}]}}},"swimming":{"initial_state":"default","states":{"default":{"transitions":[{"swimming":"variable.swim_amount > 0.0"}]},"swimming":{"animations":["swimming"],"transitions":[{"default":"variable.swim_amount <= 0.0"}]}}},"use_item_progress":{"initial_state":"default","states":{"default":{"transitions":[{"use_item_progress":"( variable.use_item_interval_progress > 0.0 ) || ( variable.use_item_startup_progress > 0.0 )"}]},"use_item_progress":{"animations":["use_item_progress"],"transitions":[{"default":"( variable.use_item_interval_progress <= 0.0 ) && ( variable.use_item_startup_progress <= 0.0 )"}]}}},"vex_move":{"initial_state":"default","states":{"default":{"animations":["vex_move"]}}}},"render_controllers":["controller.render.vex"],"spawn_egg":{"texture":"spawn_egg","texture_index":41}},"villager":{"identifier":"minecraft:villager","min_engine_version":"1.8.0","materials":{"default":"villager"},"textures":{"farmer":"textures/entity/villager/profession/farmer","librarian":"textures/entity/villager/profession/librarian","priest":"textures/entity/villager/profession/cleric","smith":"textures/entity/villager/profession/weaponsmith","butcher":"textures/entity/villager/profession/butcher"},"geometry":{"default":{"visible_bounds_width":1.5,"visible_bounds_height":2.5,"visible_bounds_offset":[0,1.25,0],"bones":[{"name":"head","parent":"body","pivot":[0,24,0],"cubes":[{"origin":[-4,24,-4],"size":[8,10,8],"uv":[0,0]}]},{"name":"nose","parent":"head","pivot":[0,26,0],"cubes":[{"origin":[-1,23,-6],"size":[2,4,2],"uv":[24,0]}]},{"name":"body","cubes":[{"origin":[-4,12,-3],"size":[8,12,6],"uv":[16,20]},{"origin":[-4,6,-3],"size":[8,18,6],"uv":[0,38],"inflate":0.5}]},{"name":"arms","parent":"body","pivot":[0,22,0],"cubes":[{"origin":[-4,16,-2],"size":[8,4,4],"uv":[40,38]},{"origin":[-8,16,-2],"size":[4,8,4],"uv":[44,22]},{"origin":[4,16,-2],"size":[4,8,4],"uv":[44,22]}]},{"name":"leg0","parent":"body","pivot":[-2,12,0],"cubes":[{"origin":[-4,0,-2],"size":[4,12,4],"uv":[0,22]}]},{"name":"leg1","parent":"body","pivot":[2,12,0],"cubes":[{"origin":[0,0,-2],"size":[4,12,4],"uv":[0,22]}]}]}},"scripts":{"scale":"0.9375"},"animations":{"general":{"loop":true,"bones":{"arms":{"position":[0,-1,-1],"rotation":["-42.97 - this",0,0]}}},"look_at_target":{"loop":true,"bones":{"head":{"relative_to":{"rotation":"entity"},"rotation":["query.target_x_rotation - this","query.target_y_rotation - this",0]}}},"move":{"anim_time_update":"query.modified_distance_moved","loop":true,"bones":{"leg0":{"rotation":["(math.cos(query.anim_time * 38.17) * 40.0) - this","-this",0]},"leg1":{"rotation":["(math.cos(query.anim_time * 38.17 + 180) * 40.0) - this","-this",0]}}},"baby_transform":{"loop":true,"bones":{"head":{"scale":1.5}}}},"animation_controllers":{"general":{"initial_state":"default","states":{"default":{"animations":["general",{"look_at_target":"!query.is_sleeping"}]}}},"move":{"initial_state":"default","states":{"default":{"animations":[{"move":"query.modified_move_speed"}]}}},"baby":{"initial_state":"baby","states":{"baby":{"animations":[{"baby_transform":"query.is_baby"}]}}}},"render_controllers":["controller.render.villager"],"spawn_egg":{"texture":"spawn_egg","texture_index":14}},"vindicator":{"identifier":"minecraft:vindicator","min_engine_version":"1.8.0","materials":{"default":"vindicator"},"textures":{"default":"textures/entity/illager/vindicator"},"geometry":{"default":{"visible_bounds_width":1.5,"visible_bounds_height":2.5,"visible_bounds_offset":[0,1.25,0],"texturewidth":64,"textureheight":64,"bones":[{"name":"head","parent":"body","pivot":[0,24,0],"cubes":[{"origin":[-4,24,-4],"size":[8,10,8],"uv":[0,0]}]},{"name":"nose","parent":"head","pivot":[0,26,0],"cubes":[{"origin":[-1,23,-6],"size":[2,4,2],"uv":[24,0]}]},{"name":"body","pivot":[0,24,0],"cubes":[{"origin":[-4,12,-3],"size":[8,12,6],"uv":[16,20]},{"origin":[-4,6,-3],"size":[8,18,6],"uv":[0,38],"inflate":0.5}]},{"name":"arms","parent":"body","pivot":[0,22,0],"cubes":[{"origin":[-8,16,-2],"size":[4,8,4],"uv":[44,22]},{"origin":[4,16,-2],"size":[4,8,4],"uv":[44,22]},{"origin":[-4,16,-2],"size":[8,4,4],"uv":[40,38]}]},{"name":"leg0","parent":"body","pivot":[-2,12,0],"cubes":[{"origin":[-4,0,-2],"size":[4,12,4],"uv":[0,22]}]},{"name":"leg1","parent":"body","pivot":[2,12,0],"mirror":true,"cubes":[{"origin":[0,0,-2],"size":[4,12,4],"uv":[0,22]}]},{"name":"rightArm","parent":"body","pivot":[-5,22,0],"cubes":[{"origin":[-8,12,-2],"size":[4,12,4],"uv":[40,46]}]},{"name":"rightItem","pivot":[-5.5,16,0.5],"neverRender":true,"parent":"rightArm"},{"name":"leftArm","parent":"body","pivot":[5,22,0],"mirror":true,"cubes":[{"origin":[4,12,-2],"size":[4,12,4],"uv":[40,46]}]}]}},"spawn_egg":{"texture":"spawn_egg","texture_index":39},"scripts":{"scale":"0.9375","animate":["vindicator_base","vindicator_walk","controller_look_at_target","controller_vindicator_base","controller_riding"]},"animations":{"look_at_target_default":{"loop":true,"bones":{"head":{"relative_to":{"rotation":"entity"},"rotation":["query.target_x_rotation","query.target_y_rotation",0]}}},"look_at_target_gliding":{"loop":true,"bones":{"head":{"rotation":[-45,"query.target_y_rotation",0]}}},"look_at_target_swimming":{"loop":true,"bones":{"head":{"rotation":["math.lerp(query.target_x_rotation, -45.0, variable.swim_amount)","query.target_y_rotation",0]}}},"riding.arms":{"loop":true,"bones":{"leftarm":{"rotation":[-36,0,0]}}},"riding.legs":{"loop":true,"bones":{"leg0":{"rotation":["-72.0 - this","18.0 - this","-this"]},"leg1":{"rotation":["-72.0 - this","-18.0 - this","-this"]}}},"vindicator_base":{"loop":true,"bones":{"arms":{"position":[0,"-3.0 - this","-1.0 - this"],"rotation":["-42.97 - this",0,0]},"leftarm":{"rotation":["math.cos(query.life_time * 20.0 * 3.84) * 2.87",-9,"-1 * (math.cos(query.life_time * 20.0 * 5.16) * 2.87 + 2.87)"]},"rightarm":{"rotation":["math.cos(query.life_time * 20.0 * 3.84) * 2.87",9,"math.cos(query.life_time * 20.0 * 5.16) * 2.87 + 2.87"]}}},"vindicator_attack":{"loop":true,"bones":{"leftarm":{"rotation":["query.is_riding ? 0.0 : ((math.cos(query.life_time * 20.0 * 10.89) * 28.65) + (math.sin(variable.attack_time * 180.0) * 68.76 - (math.sin((1.0 - (1.0 - variable.attack_time) * (1.0 - variable.attack_time)) * 180.0)) * 22.92))",0,0]},"rightarm":{"rotation":["(-108 + math.cos(query.life_time * 20.0 * 3.84) * 2.87) + (math.sin(variable.attack_time * 180.0) * 126.05 - (math.sin((1.0 - (1.0 - variable.attack_time) * (1.0 - variable.attack_time)) * 180.0)) * 22.92)",0,0]}}},"vindicator_hand_attack":{"loop":true,"bones":{"leftarm":{"rotation":["(-108 + math.cos(query.life_time * 20.0 * 3.84) * 2.87) + (math.sin(variable.attack_time * 180.0) * 126.05 - (math.sin((1.0 - (1.0 - variable.attack_time) * (1.0 - variable.attack_time)) * 180.0)) * 22.92)",0,0]},"rightarm":{"rotation":["(-108 + math.cos(query.life_time * 20.0 * 3.84) * 2.87) + (math.sin(variable.attack_time * 180.0) * 126.05 - (math.sin((1.0 - (1.0 - variable.attack_time) * (1.0 - variable.attack_time)) * 180.0)) * 22.92)",0,0]}}},"vindicator_walk":{"loop":true,"bones":{"leg0":{"rotation":["(math.cos(query.modified_distance_moved * 38.17) * 80.21) * query.modified_move_speed * 0.5",0,0]},"leg1":{"rotation":["(math.cos(query.modified_distance_moved * 38.17 + 180) * 80.21) * query.modified_move_speed * 0.5",0,0]}}},"celebrating":{"loop":true,"bones":{"leftarm":{"rotation":["(math.cos(query.life_time * 800.0) * 2.865)",180,-135]},"rightarm":{"rotation":["(math.cos(query.life_time * 800.0) * 2.865)",180,153]}}}},"render_controllers":["controller.render.vindicator"],"enable_attachables":true,"animation_controllers":{"controller_look_at_target":{"initial_state":"default","states":{"default":{"animations":["look_at_target_default"],"transitions":[{"gliding":"query.is_gliding"},{"swimming":"query.is_swimming"}]},"gliding":{"animations":["look_at_target_gliding"],"transitions":[{"swimming":"query.is_swimming"},{"default":"!query.is_gliding"}]},"swimming":{"animations":["look_at_target_swimming"],"transitions":[{"gliding":"query.is_gliding"},{"default":"!query.is_swimming"}]}}},"controller_vindicator_base":{"initial_state":"default","states":{"default":{"blend_transition":0.2,"blend_via_shortest_path":true,"transitions":[{"celebrating":"query.is_celebrating"},{"hand_attack":"!query.is_item_equipped && variable.has_target && variable.attack_time >= 0.0"},{"melee_attack":"query.is_item_equipped && variable.has_target && variable.attack_time >= 0.0"}]},"hand_attack":{"blend_transition":0.2,"blend_via_shortest_path":true,"animations":["vindicator_hand_attack"],"transitions":[{"default":"query.is_item_equipped || !variable.has_target || variable.attack_time < 0.0 || query.is_celebrating"}]},"melee_attack":{"blend_transition":0.2,"blend_via_shortest_path":true,"animations":["vindicator_attack"],"transitions":[{"default":"!query.is_item_equipped || !variable.has_target || variable.attack_time < 0.0 || query.is_celebrating"}]},"celebrating":{"animations":["celebrating"],"blend_transition":0.2,"blend_via_shortest_path":true,"transitions":[{"default":"!query.is_celebrating"}]}}},"controller_riding":{"initial_state":"default","states":{"default":{"transitions":[{"riding":"query.is_riding"}]},"riding":{"animations":["riding.arms","riding.legs"],"transitions":[{"default":"!query.is_riding"}]}}}}},"wandering_trader":{"identifier":"minecraft:wandering_trader","materials":{"default":"wandering_trader"},"textures":{"default":"textures/entity/wandering_trader"},"geometry":{"default":{"visible_bounds_width":1.5,"visible_bounds_height":2.5,"visible_bounds_offset":[0,1.25,0],"bones":[{"name":"head","parent":"body","pivot":[0,24,0],"cubes":[{"origin":[-4,24,-4],"size":[8,10,8],"uv":[0,0]}]},{"name":"helmet","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-4,24,-4],"size":[8,10,8],"uv":[32,0],"inflate":0.5}]},{"name":"brim","parent":"head","pivot":[0,24,0],"bind_pose_rotation":[-90,0,0],"cubes":[{"origin":[-8,16,-6],"size":[16,16,1],"uv":[30,47],"inflate":0.1}]},{"name":"nose","parent":"head","pivot":[0,26,0],"cubes":[{"origin":[-1,23,-6],"size":[2,4,2],"uv":[24,0]}]},{"name":"body","locators":{"lead_hold":[0,40,0]},"cubes":[{"origin":[-4,12,-3],"size":[8,12,6],"uv":[16,20]},{"origin":[-4,6,-3],"size":[8,18,6],"uv":[0,38],"inflate":0.5}]},{"name":"arms","parent":"body","pivot":[0,22,0],"cubes":[{"origin":[-4,16,-2],"size":[8,4,4],"uv":[40,38]},{"origin":[-8,16,-2],"size":[4,8,4],"uv":[44,22]},{"origin":[4,16,-2],"size":[4,8,4],"uv":[44,22],"mirror":true}]},{"name":"held_item","parent":"arms","pivot":[0,0,0]},{"name":"leg0","parent":"body","pivot":[-2,12,0],"cubes":[{"origin":[-4,0,-2],"size":[4,12,4],"uv":[0,22]}]},{"name":"leg1","parent":"body","pivot":[2,12,0],"cubes":[{"origin":[0,0,-2],"size":[4,12,4],"uv":[0,22],"mirror":true}]}]}},"scripts":{"scale":"0.9375"},"animations":{"general":{"loop":true,"bones":{"arms":{"position":[0,-1,-1],"rotation":["-42.97 - this",0,0]}}},"look_at_target":{"loop":true,"bones":{"head":{"relative_to":{"rotation":"entity"},"rotation":["query.target_x_rotation - this","query.target_y_rotation - this",0]}}},"raise_arms":{"loop":true,"bones":{"arms":{"rotation":["variable.raise_arms * -15.0",0,0]}}},"move":{"anim_time_update":"query.modified_distance_moved","loop":true,"bones":{"leg0":{"rotation":["(math.cos(query.anim_time * 38.17) * 40.0) - this","-this",0]},"leg1":{"rotation":["(math.cos(query.anim_time * 38.17 + 180) * 40.0) - this","-this",0]}}}},"animation_controllers":{"general":{"initial_state":"default","states":{"default":{"animations":["general",{"look_at_target":"!query.is_sleeping"}]}}},"raise_arms":{"initial_state":"default","states":{"default":{"transitions":[{"raising":"variable.raise_arms > 0.0"}]},"raising":{"animations":["raise_arms"],"transitions":[{"default":"variable.raise_arms == 0.0"}]}}},"move":{"initial_state":"default","states":{"default":{"animations":[{"move":"query.modified_move_speed"}]}}}},"render_controllers":["controller.render.wandering_trader"],"spawn_egg":{"texture":"spawn_egg_wandering_trader"}},"witch":{"identifier":"minecraft:witch","min_engine_version":"1.8.0","materials":{"default":"witch"},"textures":{"default":"textures/entity/witch"},"geometry":{"default":{"visible_bounds_width":1.5,"visible_bounds_height":3,"visible_bounds_offset":[0,1.5,0],"texturewidth":64,"textureheight":128,"bones":[{"name":"nose","parent":"head","cubes":[{"origin":[0,25,-6.75],"size":[1,1,1],"uv":[0,0],"inflate":-0.25}]},{"name":"hat","parent":"head","pivot":[-5,32.03125,-5],"cubes":[{"origin":[-5,32.05,-5],"size":[10,2,10],"uv":[0,64]}]},{"name":"hat2","parent":"hat","pivot":[1.75,32,2],"cubes":[{"origin":[-3.25,33.5,-3],"size":[7,4,7],"uv":[0,76]}],"rotation":[-3,0,1.5]},{"name":"hat3","parent":"hat2","pivot":[1.75,35,2],"cubes":[{"origin":[-1.5,36.5,-1],"size":[4,4,4],"uv":[0,87]}],"rotation":[-6,0,3]},{"name":"hat4","parent":"hat3","pivot":[1.75,38,2],"cubes":[{"origin":[0.25,40,1],"size":[1,2,1],"uv":[0,95],"inflate":0.25}],"rotation":[-12,0,6]}]}},"scripts":{"scale":"0.9375"},"animations":{"villager_general":{"loop":true,"bones":{"arms":{"position":[0,-1,-1],"rotation":["-42.97 - this",0,0]}}},"look_at_target":{"loop":true,"bones":{"head":{"relative_to":{"rotation":"entity"},"rotation":["query.target_x_rotation - this","query.target_y_rotation - this",0]}}},"move":{"anim_time_update":"query.modified_distance_moved","loop":true,"bones":{"leg0":{"rotation":["(math.cos(query.anim_time * 38.17) * 40.0) - this","-this",0]},"leg1":{"rotation":["(math.cos(query.anim_time * 38.17 + 180) * 40.0) - this","-this",0]}}},"general":{"loop":true,"bones":{"nose":{"rotation":["(variable.isholdingitem ? -25.7831 : (math.sin(query.life_time * 57.296) * 4.5)) - this",0,"(math.cos(query.life_time * 57.296) * 2.5) - this"]}}}},"animation_controllers":{"general":{"initial_state":"default","states":{"default":{"animations":["villager_general","look_at_target","general"]}}},"move":{"initial_state":"default","states":{"default":{"animations":[{"move":"query.modified_move_speed"}]}}}},"render_controllers":["controller.render.witch"],"spawn_egg":{"texture":"spawn_egg","texture_index":17}},"wither":{"identifier":"minecraft:wither","min_engine_version":"1.8.0","materials":{"default":"wither_boss","armor":"wither_boss_armor"},"textures":{"default":"textures/entity/wither/wither","armor_white":"textures/entity/wither/wither_armor","armor_blue":"textures/entity/wither/wither_armor","invulnerable":"textures/entity/wither/wither_invulnerable"},"geometry":{"default":{"visible_bounds_width":3,"visible_bounds_height":4,"visible_bounds_offset":[0,2,0],"texturewidth":64,"textureheight":64,"bones":[{"name":"upperBodyPart1","cubes":[{"origin":[-10,17.1,-0.5],"size":[20,3,3],"uv":[0,16]}]},{"name":"upperBodyPart2","parent":"upperBodyPart1","pivot":[-2,17.1,-0.5],"cubes":[{"origin":[-2,7.1,-0.5],"size":[3,10,3],"uv":[0,22]},{"origin":[-6,13.6,0],"size":[11,2,2],"uv":[24,22]},{"origin":[-6,11.1,0],"size":[11,2,2],"uv":[24,22]},{"origin":[-6,8.6,0],"size":[11,2,2],"uv":[24,22]}]},{"name":"upperBodyPart3","parent":"upperBodyPart2","pivot":[0,24,0],"cubes":[{"origin":[0,18,0],"size":[3,6,3],"uv":[12,22]}]},{"name":"head1","parent":"upperBodyPart1","pivot":[0,20,0],"cubes":[{"origin":[-4,20,-4],"size":[8,8,8],"uv":[0,0]}]},{"name":"head2","parent":"upperBodyPart1","pivot":[-9,18,-1],"cubes":[{"origin":[-12,18,-4],"size":[6,6,6],"uv":[32,0]}]},{"name":"head3","parent":"upperBodyPart1","pivot":[9,18,-1],"cubes":[{"origin":[6,18,-4],"size":[6,6,6],"uv":[32,0]}]}]},"armor":{"visible_bounds_width":3,"visible_bounds_height":4,"visible_bounds_offset":[0,2,0],"texturewidth":64,"textureheight":64,"bones":[{"name":"upperBodyPart1","cubes":[{"origin":[-10,17.1,-0.5],"size":[20,3,3],"uv":[0,16]}],"inflate":2},{"name":"upperBodyPart2","parent":"upperBodyPart1","pivot":[-2,17.1,-0.5],"cubes":[{"origin":[-2,7.1,-0.5],"size":[3,10,3],"uv":[0,22]},{"origin":[-6,13.6,0],"size":[11,2,2],"uv":[24,22]},{"origin":[-6,11.1,0],"size":[11,2,2],"uv":[24,22]},{"origin":[-6,8.6,0],"size":[11,2,2],"uv":[24,22]}],"inflate":2},{"name":"upperBodyPart3","parent":"upperBodyPart2","pivot":[0,24,0],"cubes":[{"origin":[0,18,0],"size":[3,6,3],"uv":[12,22]}],"inflate":2},{"name":"head1","parent":"upperBodyPart1","pivot":[0,20,0],"cubes":[{"origin":[-4,20,-4],"size":[8,8,8],"uv":[0,0]}],"inflate":2},{"name":"head2","parent":"upperBodyPart1","pivot":[-9,18,-1],"cubes":[{"origin":[-12,18,-4],"size":[6,6,6],"uv":[32,0]}],"inflate":2},{"name":"head3","parent":"upperBodyPart1","pivot":[9,18,-1],"cubes":[{"origin":[6,18,-4],"size":[6,6,6],"uv":[32,0]}],"inflate":2}]}},"scripts":{"pre_animation":["variable.base_scale = 2;","variable.swell_clamped = Math.clamp(query.swell_amount, 0.0, 1.0);","variable.wobble = 1.0 + Math.sin(query.swell_amount * 5730) * query.swell_amount * 0.01;","variable.swell_adjustment = Math.pow(variable.swell_clamped, 4);","variable.scale_xz = (1.0 + variable.swell_adjustment * 0.4) * variable.wobble;","variable.scale_y = (1.0 + variable.swell_adjustment * 0.1) / variable.wobble;","variable.body_base_rotation = Math.cos(query.life_time * 114.6);","variable.upper_body_rotation = (0.065 + 0.05 * variable.body_base_rotation) * 180 + query.target_x_rotation;","variable.is_invulnerable = query.invulnerable_ticks > 0.0;","variable.display_normal_skin = (query.invulnerable_ticks <= 0) || ((query.invulnerable_ticks <= 80) && (Math.mod(query.invulnerable_ticks / 5, 2) == 1));"],"scalex":"variable.scale_xz * variable.base_scale","scaley":"variable.scale_y * variable.base_scale","scalez":"variable.scale_xz * variable.base_scale"},"animations":{"scale":{"loop":true,"bones":{"upperbodypart1":{"rotation":["-this","-this","-this"]}}},"move":{"loop":true,"bones":{"upperbodypart2":{"rotation":["variable.upper_body_rotation - this","-this","-this"]},"upperbodypart3":{"position":[-2,-16.9,-0.5],"rotation":["((0.2 + 0.1 * variable.body_base_rotation) * 180) - this","-this","-this"]}}},"look_at_target":{"loop":true,"bones":{"head1":{"rotation":["query.head_x_rotation(0) - this","query.head_y_rotation(0) - this","-this"]},"head2":{"rotation":["query.head_x_rotation(1) - this","query.head_y_rotation(1) - this","-this"]},"head3":{"rotation":["query.head_x_rotation(2) - this","query.head_y_rotation(2) - this","-this"]}}}},"animation_controllers":{"move":{"initial_state":"default","states":{"default":{"animations":["scale","move","look_at_target"]}}}},"render_controllers":["controller.render.wither_boss","controller.render.wither_boss_armor_white","controller.render.wither_boss_armor_blue"]},"wither_skeleton":{"identifier":"minecraft:wither_skeleton","min_engine_version":"1.8.0","materials":{"default":"skeleton"},"textures":{"default":"textures/entity/skeleton/wither_skeleton"},"geometry":{"default":{"texturewidth":64,"textureheight":32,"visible_bounds_width":1.5,"visible_bounds_height":3,"visible_bounds_offset":[0,1.5,0],"bones":[{"name":"body","parent":"waist","pivot":[0,24,0],"cubes":[{"origin":[-4,12,-2],"size":[8,12,4],"uv":[16,16]}]},{"name":"waist","pivot":[0,12,0]},{"name":"head","parent":"body","pivot":[0,24,0],"cubes":[{"origin":[-4,24,-4],"size":[8,8,8],"uv":[0,0]}]},{"name":"hat","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-4,24,-4],"size":[8,8,8],"uv":[32,0],"inflate":0.5}],"neverRender":true},{"name":"rightArm","parent":"body","pivot":[-5,22,0],"cubes":[{"origin":[-6,12,-1],"size":[2,12,2],"uv":[40,16]}]},{"name":"rightItem","parent":"rightArm","pivot":[-5,15,1],"neverRender":true},{"name":"leftArm","parent":"body","pivot":[5,22,0],"cubes":[{"origin":[4,12,-1],"size":[2,12,2],"uv":[40,16]}],"mirror":true},{"name":"leftItem","parent":"leftArm","pivot":[6,15,1],"neverRender":true},{"name":"rightLeg","parent":"body","pivot":[-2,12,0],"cubes":[{"origin":[-3,0,-1],"size":[2,12,2],"uv":[0,16]}]},{"name":"leftLeg","parent":"body","pivot":[2,12,0],"cubes":[{"origin":[1,0,-1],"size":[2,12,2],"uv":[0,16]}],"mirror":true}]}},"scripts":{"pre_animation":["variable.tcos0 = (Math.cos(query.modified_distance_moved * 38.17) * query.modified_move_speed / variable.gliding_speed_value) * 57.3;"]},"animations":{"look_at_target_default":{"loop":true,"bones":{"head":{"relative_to":{"rotation":"entity"},"rotation":["query.target_x_rotation","query.target_y_rotation",0]}}},"look_at_target_gliding":{"loop":true,"bones":{"head":{"rotation":[-45,"query.target_y_rotation",0]}}},"look_at_target_swimming":{"loop":true,"bones":{"head":{"rotation":["math.lerp(query.target_x_rotation, -45.0, variable.swim_amount)","query.target_y_rotation",0]}}},"move":{"loop":true,"bones":{"leftarm":{"rotation":["variable.tcos0",0,0]},"leftleg":{"rotation":["variable.tcos0 * -1.4",0,0]},"rightarm":{"rotation":["-variable.tcos0",0,0]},"rightleg":{"rotation":["variable.tcos0 * 1.4",0,0]}}},"riding.arms":{"loop":true,"bones":{"leftarm":{"rotation":[-36,0,0]},"rightarm":{"rotation":[-36,0,0]}}},"riding.legs":{"loop":true,"bones":{"leftleg":{"rotation":["-72.0 - this","-18.0 - this","-this"]},"rightleg":{"rotation":["-72.0 - this","18.0 - this","-this"]}}},"holding":{"loop":true,"bones":{"leftarm":{"rotation":["variable.is_holding_left ? (-this * 0.5 - 18.0) : 0.0",0,0]},"rightarm":{"rotation":["variable.is_holding_right ? (-this * 0.5 - 18.0) : 0.0",0,0]}}},"brandish_spear":{"loop":true,"bones":{"rightarm":{"rotation":["this * -0.5 - 157.5 - 22.5 * variable.charge_amount","-this",0]}}},"charging":{"loop":true,"bones":{"rightarm":{"rotation":["22.5 * variable.charge_amount - this","-this",0]}}},"attack.rotations":{"loop":true,"bones":{"body":{"rotation":[0,"math.sin(math.sqrt(variable.attack_time) * 360) * 11.46 - this",0]},"leftarm":{"rotation":["math.sin(math.sqrt(variable.attack_time) * 360) * 11.46",0,0]},"rightarm":{"rotation":["math.sin(1.0 - math.pow(1.0 - variable.attack_time, 3.0) * 180.0) * (variable.is_brandishing_spear ? -1.0 : 1.0 )","variable.is_brandishing_spear ? 0.0 : (math.sin(math.sqrt(variable.attack_time) * 360) * 11.46) * 2.0",0]}}},"sneaking":{"loop":true,"bones":{"body":{"rotation":["0.5 - this",0,0]},"head":{"position":[0,1,0]},"leftarm":{"rotation":[72,0,0]},"leftleg":{"position":[0,-3,4]},"rightarm":{"rotation":[72,0,0]},"rightleg":{"position":[0,-3,4]}}},"bob":{"loop":true,"bones":{"leftarm":{"rotation":[0,0,"((math.cos(query.life_time * 103.2) * 2.865) + 2.865) *-1.0"]},"rightarm":{"rotation":[0,0,"(math.cos(query.life_time * 103.2) * 2.865) + 2.865"]}}},"damage_nearby_mobs":{"loop":true,"bones":{"leftarm":{"rotation":["-45.0-this","-this","-this"]},"leftleg":{"rotation":["45.0-this","-this","-this"]},"rightarm":{"rotation":["45.0-this","-this","-this"]},"rightleg":{"rotation":["-45.0-this","-this","-this"]}}},"bow_and_arrow":{"loop":true,"bones":{"leftarm":{"rotation":["query.target_x_rotation - 90.0 - math.sin(query.life_time * 76.8) * 2.865 - this","query.target_y_rotation + 28.65","-(math.cos(query.life_time * 103.2) * 2.865) - 2.865"]},"rightarm":{"rotation":["query.target_x_rotation - 90.0 + math.sin(query.life_time * 76.8) * 2.865 - this","query.target_y_rotation - 5.73","(math.cos(query.life_time * 103.2) * 2.865) + 2.865"]}}},"use_item_progress":{"loop":true,"bones":{"rightarm":{"rotation":["variable.use_item_startup_progress * -60.0 + variable.use_item_interval_progress * 11.25","variable.use_item_startup_progress * -22.5 + variable.use_item_interval_progress * 11.25","variable.use_item_startup_progress * -5.625 + variable.use_item_interval_progress * 11.25"]}}},"wither_skeleton_attack":{"loop":true,"bones":{"leftarm":{"rotation":["-90 - ((math.sin(variable.attack_time * 180.0) * 57.3) * 1.2 - (math.sin((1.0 - (1.0 - variable.attack_time) * (1.0 - variable.attack_time)) * 180.0) * 57.3) * 0.4) - (math.sin(query.life_time * 76.776372) * 2.865) - this","5.73 - ((math.sin(variable.attack_time * 180.0) * 57.3) * 0.6) - this","math.cos(query.life_time * 103.13244) * -2.865 - 2.865 - this"]},"rightarm":{"rotation":["-90 - ((math.sin(variable.attack_time * 180.0) * 57.3) * 1.2 - (math.sin((1.0 - (1.0 - variable.attack_time) * (1.0 - variable.attack_time)) * 180.0) * 57.3) * 0.4) + (math.sin(query.life_time * 76.776372) * 2.865) - this","(math.sin(variable.attack_time * 180.0) * 57.3) * 0.6 - 5.73 - this","math.cos(query.life_time * 103.13244) * 2.865 + 2.865 - this"]}}},"swimming":{"loop":true,"bones":{"body":{"position":[0,"variable.swim_amount * -10.0 - this","variable.swim_amount * 9.0 - this"],"rotation":["variable.swim_amount * (90.0 + query.target_x_rotation)",0,0]},"leftarm":{"rotation":["math.lerp(this, -180.0, variable.swim_amount) - (variable.swim_amount * ((math.sin(variable.attack_time * 180.0) * 57.3) * 1.2 - (math.sin((1.0 - (1.0 - variable.attack_time) * (1.0 - variable.attack_time)) * 180.0) * 57.3) * 0.4)) - (variable.swim_amount * (math.sin(query.life_time * 76.776372) * 2.865)) - this","math.lerp(this, 14.325, variable.swim_amount) - this","math.lerp(this, 14.325, variable.swim_amount) - (variable.swim_amount * (math.cos(query.life_time * 103.13244) * 2.865 + 2.865)) - this"]},"leftleg":{"rotation":["math.lerp(this, math.cos(query.life_time * 390.0 + 180.0) * 0.3, variable.swim_amount)",0,0]},"rightarm":{"rotation":["math.lerp(this, -180.0, variable.swim_amount) - (variable.swim_amount * ((math.sin(variable.attack_time * 180.0) * 57.3) * 1.2 - (math.sin((1.0 - (1.0 - variable.attack_time) * (1.0 - variable.attack_time)) * 180.0) * 57.3) * 0.4)) + (variable.swim_amount * (math.sin(query.life_time * 76.776372) * 2.865)) - this","math.lerp(this, 14.325, variable.swim_amount) - this","math.lerp(this, -14.325, variable.swim_amount) + (variable.swim_amount * (math.cos(query.life_time * 103.13244) * 2.865 + 2.865)) - this"]},"rightleg":{"rotation":["math.lerp(this, math.cos(query.life_time * 390.0) * 0.3, variable.swim_amount)",0,0]}}}},"animation_controllers":{"look_at_target":{"initial_state":"default","states":{"default":{"animations":["look_at_target_default"],"transitions":[{"gliding":"query.is_gliding"},{"swimming":"query.is_swimming"}]},"gliding":{"animations":["look_at_target_gliding"],"transitions":[{"swimming":"query.is_swimming"},{"default":"!query.is_gliding"}]},"swimming":{"animations":["look_at_target_swimming"],"transitions":[{"gliding":"query.is_gliding"},{"default":"!query.is_swimming"}]}}},"move":{"initial_state":"default","states":{"default":{"animations":["move"]}}},"riding":{"initial_state":"default","states":{"default":{"transitions":[{"riding":"query.is_riding"}]},"riding":{"animations":["riding.arms","riding.legs"],"transitions":[{"default":"!query.is_riding"}]}}},"holding":{"initial_state":"default","states":{"default":{"animations":["holding"]}}},"brandish_spear":{"initial_state":"default","states":{"brandish_spear":{"animations":["brandish_spear"],"transitions":[{"default":"!variable.is_brandishing_spear"}]},"default":{"transitions":[{"brandish_spear":"variable.is_brandishing_spear"}]}}},"charging":{"initial_state":"default","states":{"charging":{"animations":["charging"],"transitions":[{"default":"!query.is_charging"}]},"default":{"transitions":[{"charging":"query.is_charging"}]}}},"attack":{"initial_state":"default","states":{"attacking":{"animations":["attack.rotations"],"transitions":[{"default":"variable.attack_time < 0.0"}]},"default":{"transitions":[{"attacking":"variable.attack_time >= 0.0"}]}}},"sneaking":{"initial_state":"default","states":{"default":{"transitions":[{"sneaking":"query.is_sneaking"}]},"sneaking":{"animations":["sneaking"],"transitions":[{"default":"!query.is_sneaking"}]}}},"damage_nearby_mobs":{"initial_state":"default","states":{"damage_nearby_mobs":{"animations":["damage_nearby_mobs"],"transitions":[{"default":"!variable.damage_nearby_mobs"}]},"default":{"transitions":[{"damage_nearby_mobs":"variable.damage_nearby_mobs"}]}}},"bow_and_arrow":{"initial_state":"default","states":{"bow_and_arrow":{"animations":["bow_and_arrow"],"transitions":[{"default":"!query.has_target"}]},"default":{"transitions":[{"bow_and_arrow":"query.has_target"}]}}},"use_item_progress":{"initial_state":"default","states":{"default":{"transitions":[{"use_item_progress":"( variable.use_item_interval_progress > 0.0 ) || ( variable.use_item_startup_progress > 0.0 )"}]},"use_item_progress":{"animations":["use_item_progress"],"transitions":[{"default":"( variable.use_item_interval_progress <= 0.0 ) && ( variable.use_item_startup_progress <= 0.0 )"}]}}},"wither_skeleton_attack":{"initial_state":"default","states":{"chase_target":{"animations":["wither_skeleton_attack"],"transitions":[{"default":"!variable.has_target"}]},"default":{"transitions":[{"chase_target":"variable.has_target"}]}}},"swimming":{"initial_state":"default","states":{"default":{"transitions":[{"is_swimming":"variable.swim_amount > 0.0"}]},"is_swimming":{"animations":["swimming"],"transitions":[{"default":"variable.swim_amount <= 0.0"}]}}}},"render_controllers":["controller.render.wither_skeleton"],"enable_attachables":true,"spawn_egg":{"texture":"spawn_egg","texture_index":29}},"wither_skull":{"identifier":"minecraft:wither_skull","materials":{"default":"wither_skull"},"textures":{"default":"textures/entity/wither/wither"},"geometry":{"default":{"bones":[{"name":"head","cubes":[{"origin":[-4,0,-4],"size":[8,8,8],"uv":[0,35]}]}],"visible_bounds_width":1,"visible_bounds_height":1,"texturewidth":64,"textureheight":64}},"animations":{"move":{"loop":true,"bones":{"head":{"rotation":[0,"-query.target_y_rotation",0]}}}},"scripts":{"animate":["move"]},"render_controllers":["controller.render.wither_skull"]},"wolf":{"identifier":"minecraft:wolf","materials":{"default":"wolf"},"textures":{"default":"textures/entity/wolf/wolf","angry":"textures/entity/wolf/wolf_angry","tame":"textures/entity/wolf/wolf_tame"},"geometry":{"default":{"visible_bounds_width":1.5,"visible_bounds_height":1,"visible_bounds_offset":[0,0.5,0],"texturewidth":64,"textureheight":32,"bones":[{"name":"head","pivot":[-1,10.5,-7],"locators":{"lead":[-1,10.5,-7]},"cubes":[{"origin":[-4,7.5,-9],"size":[6,6,4],"uv":[0,0]},{"origin":[-4,13.5,-7],"size":[2,2,1],"uv":[16,14]},{"origin":[0,13.5,-7],"size":[2,2,1],"uv":[16,14]},{"origin":[-2.5,7.515625,-12],"size":[3,3,4],"uv":[0,10]}]},{"name":"body","pivot":[0,10,2],"cubes":[{"origin":[-4,3,-1],"size":[6,9,6],"uv":[18,14]}]},{"name":"upperBody","pivot":[-1,10,2],"cubes":[{"origin":[-5,7,-1],"size":[8,6,7],"uv":[21,0]}]},{"name":"leg0","pivot":[-2.5,8,7],"cubes":[{"origin":[-3.5,0,6],"size":[2,8,2],"uv":[0,18]}]},{"name":"leg1","pivot":[0.5,8,7],"cubes":[{"origin":[-0.5,0,6],"size":[2,8,2],"uv":[0,18]}]},{"name":"leg2","pivot":[-2.5,8,-4],"cubes":[{"origin":[-3.5,0,-5],"size":[2,8,2],"uv":[0,18]}]},{"name":"leg3","pivot":[0.5,8,-4],"cubes":[{"origin":[-0.5,0,-5],"size":[2,8,2],"uv":[0,18]}]},{"name":"tail","pivot":[-1,12,8],"cubes":[{"origin":[-2,4,7],"size":[2,8,2],"uv":[9,18]}]}]}},"scripts":{"pre_animation":["variable.body_shake_angle = 0.05 * query.frame_alpha + query.shake_angle;","variable.body_roll_progress = Math.clamp((variable.body_shake_angle - 0.16) / 1.8, 0, 1);","variable.body_rot_z = Math.sin(variable.body_roll_progress * 180) * Math.sin(variable.body_roll_progress * 1980) * 27;","variable.upper_body_roll_progress = Math.clamp((variable.body_shake_angle - 0.08) / 1.8, 0, 1);","variable.upper_body_rot_z = (Math.sin(variable.upper_body_roll_progress * 180) * Math.sin(variable.upper_body_roll_progress * 1980) * 27) - variable.body_rot_z;","variable.tail_roll_progress = Math.clamp((variable.body_shake_angle - 0.2) / 1.8, 0, 1);","variable.tail_rot_z = (Math.sin(variable.tail_roll_progress * 180) * Math.sin(variable.tail_roll_progress * 1980) * 27) - variable.body_rot_z;","variable.head_roll_progress = Math.clamp(variable.body_shake_angle / 1.8, 0, 1);","variable.head_rot_z = (Math.sin(variable.head_roll_progress * 180) * Math.sin(variable.head_roll_progress * 1980) * 27) - variable.body_rot_z;"]},"animations":{"wolf_setup":{"loop":true,"bones":{"body":{"position":["-this","-14 - this","2.0 - this"],"rotation":["90 - this",0,0]},"leg0":{"position":["-2.5 - this","-16 - this","7 - this"]},"leg1":{"position":["0.5 - this","-16 - this","7 - this"]},"leg2":{"position":["-2.5 - this","-16 - this","-4 - this"]},"leg3":{"position":["0.5 - this","-16 - this","-4 - this"]},"tail":{"position":["-1.0 - this","-12 - this","8.0 - this"]},"upperbody":{"position":["-1.0 - this","-14 - this","-3.0 - this"],"rotation":["90 - this",0,0]}}},"wolf_baby_scaling":{"loop":true,"bones":{"head":{"position":[0,1,-2],"scale":1.6}}},"wolf_look_at":{"loop":true,"bones":{"head":{"relative_to":{"rotation":"entity"},"rotation":["query.target_x_rotation - this","query.target_y_rotation - this",0]}}},"wolf_head_rot_z":{"loop":true,"bones":{"head":{"rotation":[0,0,"(query.is_interested ? (query.head_roll_angle * 57.3) : 0) + (query.is_shaking_wetness ? variable.head_rot_z : 0) - this"]}}},"wolf_tail_default":{"loop":true,"bones":{"tail":{"rotation":["query.tail_angle * 57.3 - this",0,"variable.tail_rot_z - this"]}}},"wolf_angry":{"loop":true,"bones":{"tail":{"rotation":[0,"query.is_angry ? -this : (math.cos(query.modified_distance_moved * 38.17) * query.modified_move_speed * 80.22 - this)",0]}}},"wolf_sitting":{"loop":true,"bones":{"body":{"position":["-this","-18 - this","-this"],"rotation":["45.0 - this",0,0]},"leg0":{"position":["-2.5 - this","-22 - this","2 - this"],"rotation":["270 - this",0,0]},"leg1":{"position":["0.5 - this","-22 - this","2 - this"],"rotation":["270 - this",0,0]},"leg2":{"position":["-2.49 - this","-17 - this","-4 - this"],"rotation":["333 - this",0,0]},"leg3":{"position":["0.51 - this","-17 - this","-4 - this"],"rotation":["333 - this",0,0]},"tail":{"position":["-1.0 - this","-19 - this","6.0 - this"]},"upperbody":{"position":["-1.0 - this","-16 - this","-3.0 - this"],"rotation":["72 - this","-this",0]}}},"wolf_shaking":{"loop":true,"bones":{"body":{"rotation":[0,0,"variable.body_rot_z - this"]},"upperbody":{"rotation":[0,0,"variable.upper_body_rot_z - this"]}}},"wolf_leg_default":{"loop":true,"bones":{"leg0":{"rotation":["math.cos(query.modified_distance_moved * 38.17) * 80.22 * query.modified_move_speed - this",0,0]},"leg1":{"rotation":["math.cos(query.modified_distance_moved * 38.17 + 180) * 80.22 * query.modified_move_speed - this",0,0]},"leg2":{"rotation":["math.cos(query.modified_distance_moved * 38.17 + 180) * 80.22 * query.modified_move_speed - this",0,0]},"leg3":{"rotation":["math.cos(query.modified_distance_moved * 38.17) * 80.22 * query.modified_move_speed - this",0,0]}}}},"animation_controllers":{"wolf_setup":{"initial_state":"default","states":{"default":{"animations":["wolf_setup"]}}},"wolf_look_at":{"initial_state":"default","states":{"default":{"animations":["wolf_look_at"]}}},"wolf_baby_scaling":{"initial_state":"default","states":{"baby":{"animations":["wolf_baby_scaling"],"transitions":[{"default":"!query.is_baby"}]},"default":{"transitions":[{"baby":"query.is_baby"}]}}},"wolf_head_rot_z":{"initial_state":"default","states":{"default":{"transitions":[{"rot":"query.is_interested || query.is_shaking_wetness"}]},"rot":{"animations":["wolf_head_rot_z"],"transitions":[{"default":"!query.is_interested && !query.is_shaking_wetness"}]}}},"wolf_tail_default":{"initial_state":"default","states":{"default":{"animations":["wolf_tail_default"]}}},"wolf_angry":{"initial_state":"default","states":{"default":{"animations":["wolf_angry"]}}},"wolf_sitting":{"initial_state":"default","states":{"default":{"animations":["wolf_leg_default"],"transitions":[{"sitting":"query.is_sitting"}]},"sitting":{"animations":["wolf_sitting"],"transitions":[{"default":"!query.is_sitting"}]}}},"wolf_shaking":{"initial_state":"default","states":{"default":{"transitions":[{"shaking":"query.is_shaking_wetness"}]},"shaking":{"animations":["wolf_shaking"],"transitions":[{"default":"!query.is_shaking_wetness"}]}}}},"render_controllers":["controller.render.wolf"],"spawn_egg":{"texture":"spawn_egg","texture_index":4}},"zoglin":{"identifier":"minecraft:zoglin","materials":{"default":"zoglin"},"textures":{"default":"textures/entity/hoglin/zoglin"},"geometry":{"default":{"bones":[{"name":"body","pivot":[0,19,-3],"cubes":[{"origin":[-8,11,-7],"size":[16,14,26],"inflate":0.02,"uv":[1,1]},{"origin":[0,22,-10],"size":[0,10,19],"inflate":0.02,"uv":[90,33]}],"locators":{"lead":[0,20,-5]}},{"name":"head","parent":"body","pivot":[0,22,-5],"rotation":[50,0,0],"cubes":[{"origin":[-7,21,-24],"size":[14,6,19],"uv":[61,1]},{"origin":[-8,22,-19],"size":[2,11,2],"uv":[1,13]},{"origin":[6,22,-19],"size":[2,11,2],"uv":[1,13]}]},{"name":"right_ear","parent":"head","pivot":[-7,27,-7],"rotation":[0,0,-50],"cubes":[{"origin":[-13,26,-10],"size":[6,1,4],"uv":[1,1]}]},{"name":"left_ear","parent":"head","pivot":[7,27,-7],"rotation":[0,0,50],"cubes":[{"origin":[7,26,-10],"size":[6,1,4],"uv":[1,6]}]},{"name":"leg_back_right","pivot":[6,8,17],"cubes":[{"origin":[-8,0,13],"size":[5,11,5],"uv":[21,45]}]},{"name":"leg_back_left","pivot":[-6,8,17],"cubes":[{"origin":[3,0,13],"size":[5,11,5],"uv":[0,45]}]},{"name":"leg_front_right","pivot":[-6,12,-3],"cubes":[{"origin":[-8,0,-6],"size":[6,14,6],"uv":[66,42]}]},{"name":"leg_front_left","pivot":[6,12,-3],"cubes":[{"origin":[2,0,-6],"size":[6,14,6],"uv":[41,42]}]}],"visible_bounds_width":4,"visible_bounds_height":3,"visible_bounds_offset":[0,1.5,0],"texturewidth":128,"textureheight":64}},"spawn_egg":{"base_color":"#c66e55","overlay_color":"#e6e6e6"},"scripts":{"pre_animation":["variable.tcos_right_side = (Math.cos(query.modified_distance_moved * 38.17) * query.modified_move_speed / variable.gliding_speed_value) * 57.3;","variable.tcos_left_side = -variable.tcos_right_side;","variable.attack_head_rot =  Math.sin(variable.attack_time * 180.0) * -37.3;"],"animate":["walk","look_at_target",{"attack":"variable.has_target && variable.attack_time >= 0.0"},{"hoglin_baby_scaling":"query.is_baby"}]},"animations":{"walk":{"loop":true,"bones":{"left_ear":{"rotation":[0,0,"variable.tcos_left_side * 0.5"]},"right_ear":{"rotation":[0,0,"variable.tcos_right_side * 0.5"]},"leg_back_right":{"rotation":["variable.tcos_right_side",0,0]},"leg_back_left":{"rotation":["variable.tcos_left_side",0,0]},"leg_front_right":{"rotation":["-variable.tcos_right_side",0,0]},"leg_front_left":{"rotation":["-variable.tcos_left_side",0,0]}}},"look_at_target":{"loop":true,"bones":{"head":{"relative_to":{"rotation":"entity"},"rotation":[0,"query.target_y_rotation - this",0]}}},"attack":{"loop":true,"bones":{"head":{"rotation":["variable.attack_head_rot",0,0]}}},"hoglin_baby_scaling":{"loop":true,"bones":{"head":{"position":[0,10,4],"scale":1.4}}}},"render_controllers":["controller.render.zoglin"]},"zombie":{"identifier":"minecraft:zombie","min_engine_version":"1.8.0","materials":{"default":"zombie"},"textures":{"default":"textures/entity/zombie/zombie"},"geometry":{"default":{"visible_bounds_width":2,"visible_bounds_height":2,"visible_bounds_offset":[0,1,0],"texturewidth":64,"textureheight":32,"bones":[{"name":"body","pivot":[0,24,0],"cubes":[{"origin":[-4,12,-2],"size":[8,12,4],"uv":[16,16]}],"parent":"waist"},{"name":"waist","neverRender":true,"pivot":[0,12,0]},{"name":"head","pivot":[0,24,0],"cubes":[{"origin":[-4,24,-4],"size":[8,8,8],"uv":[0,0]}],"parent":"body"},{"name":"hat","pivot":[0,24,0],"cubes":[{"origin":[-4,24,-4],"size":[8,8,8],"uv":[32,0],"inflate":0.5}],"neverRender":true,"parent":"head"},{"name":"rightArm","pivot":[-5,22,0],"cubes":[{"origin":[-8,12,-2],"size":[4,12,4],"uv":[40,16]}],"parent":"body"},{"name":"rightItem","pivot":[-6,15,1],"neverRender":true,"parent":"rightArm"},{"name":"leftArm","pivot":[5,22,0],"cubes":[{"origin":[4,12,-2],"size":[4,12,4],"uv":[40,16]}],"mirror":true,"parent":"body"},{"name":"rightLeg","pivot":[-1.9,12,0],"cubes":[{"origin":[-3.9,0,-2],"size":[4,12,4],"uv":[0,16]}],"parent":"body"},{"name":"leftLeg","pivot":[1.9,12,0],"cubes":[{"origin":[-0.1,0,-2],"size":[4,12,4],"uv":[0,16]}],"mirror":true,"parent":"body"}]}},"spawn_egg":{"texture":"spawn_egg","texture_index":12},"scripts":{"pre_animation":["variable.tcos0 = (Math.cos(query.modified_distance_moved * 38.17) * query.modified_move_speed / variable.gliding_speed_value) * 57.3;"]},"animations":{"humanoid_big_head":{"loop":true,"bones":{"head":{"scale":1.4}}},"look_at_target_default":{"loop":true,"bones":{"head":{"relative_to":{"rotation":"entity"},"rotation":["query.target_x_rotation","query.target_y_rotation",0]}}},"look_at_target_gliding":{"loop":true,"bones":{"head":{"rotation":[-45,"query.target_y_rotation",0]}}},"look_at_target_swimming":{"loop":true,"bones":{"head":{"rotation":["math.lerp(query.target_x_rotation, -45.0, variable.swim_amount)","query.target_y_rotation",0]}}},"move":{"loop":true,"bones":{"leftarm":{"rotation":["variable.tcos0",0,0]},"leftleg":{"rotation":["variable.tcos0 * -1.4",0,0]},"rightarm":{"rotation":["-variable.tcos0",0,0]},"rightleg":{"rotation":["variable.tcos0 * 1.4",0,0]}}},"riding.arms":{"loop":true,"bones":{"leftarm":{"rotation":[-36,0,0]},"rightarm":{"rotation":[-36,0,0]}}},"riding.legs":{"loop":true,"bones":{"leftleg":{"rotation":["-72.0 - this","-18.0 - this","-this"]},"rightleg":{"rotation":["-72.0 - this","18.0 - this","-this"]}}},"holding":{"loop":true,"bones":{"leftarm":{"rotation":["variable.is_holding_left ? (-this * 0.5 - 18.0) : 0.0",0,0]},"rightarm":{"rotation":["variable.is_holding_right ? (-this * 0.5 - 18.0) : 0.0",0,0]}}},"brandish_spear":{"loop":true,"bones":{"rightarm":{"rotation":["this * -0.5 - 157.5 - 22.5 * variable.charge_amount","-this",0]}}},"charging":{"loop":true,"bones":{"rightarm":{"rotation":["22.5 * variable.charge_amount - this","-this",0]}}},"attack.rotations":{"loop":true,"bones":{"body":{"rotation":[0,"math.sin(math.sqrt(variable.attack_time) * 360) * 11.46 - this",0]},"leftarm":{"rotation":["math.sin(math.sqrt(variable.attack_time) * 360) * 11.46",0,0]},"rightarm":{"rotation":["math.sin(1.0 - math.pow(1.0 - variable.attack_time, 3.0) * 180.0) * (variable.is_brandishing_spear ? -1.0 : 1.0 )","variable.is_brandishing_spear ? 0.0 : (math.sin(math.sqrt(variable.attack_time) * 360) * 11.46) * 2.0",0]}}},"sneaking":{"loop":true,"bones":{"body":{"rotation":["0.5 - this",0,0]},"head":{"position":[0,1,0]},"leftarm":{"rotation":[72,0,0]},"leftleg":{"position":[0,-3,4]},"rightarm":{"rotation":[72,0,0]},"rightleg":{"position":[0,-3,4]}}},"bob":{"loop":true,"bones":{"leftarm":{"rotation":[0,0,"((math.cos(query.life_time * 103.2) * 2.865) + 2.865) *-1.0"]},"rightarm":{"rotation":[0,0,"(math.cos(query.life_time * 103.2) * 2.865) + 2.865"]}}},"damage_nearby_mobs":{"loop":true,"bones":{"leftarm":{"rotation":["-45.0-this","-this","-this"]},"leftleg":{"rotation":["45.0-this","-this","-this"]},"rightarm":{"rotation":["45.0-this","-this","-this"]},"rightleg":{"rotation":["-45.0-this","-this","-this"]}}},"bow_and_arrow":{"loop":true,"bones":{"leftarm":{"rotation":["query.target_x_rotation - 90.0 - math.sin(query.life_time * 76.8) * 2.865 - this","query.target_y_rotation + 28.65","-(math.cos(query.life_time * 103.2) * 2.865) - 2.865"]},"rightarm":{"rotation":["query.target_x_rotation - 90.0 + math.sin(query.life_time * 76.8) * 2.865 - this","query.target_y_rotation - 5.73","(math.cos(query.life_time * 103.2) * 2.865) + 2.865"]}}},"use_item_progress":{"loop":true,"bones":{"rightarm":{"rotation":["variable.use_item_startup_progress * -60.0 + variable.use_item_interval_progress * 11.25","variable.use_item_startup_progress * -22.5 + variable.use_item_interval_progress * 11.25","variable.use_item_startup_progress * -5.625 + variable.use_item_interval_progress * 11.25"]}}},"zombie_attack_bare_hand":{"loop":true,"bones":{"leftarm":{"rotation":["-90.0 - ((math.sin(variable.attack_time * 180.0) * 57.3) * 1.2 - (math.sin((1.0 - (1.0 - variable.attack_time) * (1.0 - variable.attack_time)) * 180.0) * 57.3) * 0.4) - (math.sin(query.life_time * 76.776372) * 2.865) - this","5.73 - ((math.sin(variable.attack_time * 180.0) * 57.3) * 0.6) - this","math.cos(query.life_time * 103.13244) * -2.865 - 2.865 - this"]},"rightarm":{"rotation":["90.0 * (variable.is_brandishing_spear - 1.0) - ((math.sin(variable.attack_time * 180.0) * 57.3) * 1.2 - (math.sin((1.0 - (1.0 - variable.attack_time) * (1.0 - variable.attack_time)) * 180.0) * 57.3) * 0.4) + (math.sin(query.life_time * 76.776372) * 2.865) - this","(math.sin(variable.attack_time * 180.0) * 57.3) * 0.6 - 5.73 - this","math.cos(query.life_time * 103.13244) * 2.865 + 2.865 - this"]}}},"swimming":{"loop":true,"bones":{"body":{"position":[0,"variable.swim_amount * -10.0 - this","variable.swim_amount * 9.0 - this"],"rotation":["variable.swim_amount * (90.0 + query.target_x_rotation)",0,0]},"leftarm":{"rotation":["math.lerp(this, -180.0, variable.swim_amount) - (variable.swim_amount * ((math.sin(variable.attack_time * 180.0) * 57.3) * 1.2 - (math.sin((1.0 - (1.0 - variable.attack_time) * (1.0 - variable.attack_time)) * 180.0) * 57.3) * 0.4)) - (variable.swim_amount * (math.sin(query.life_time * 76.776372) * 2.865)) - this","math.lerp(this, 14.325, variable.swim_amount) - this","math.lerp(this, 14.325, variable.swim_amount) - (variable.swim_amount * (math.cos(query.life_time * 103.13244) * 2.865 + 2.865)) - this"]},"leftleg":{"rotation":["math.lerp(this, math.cos(query.life_time * 390.0 + 180.0) * 0.3, variable.swim_amount)",0,0]},"rightarm":{"rotation":["math.lerp(this, -180.0, variable.swim_amount) - (variable.swim_amount * ((math.sin(variable.attack_time * 180.0) * 57.3) * 1.2 - (math.sin((1.0 - (1.0 - variable.attack_time) * (1.0 - variable.attack_time)) * 180.0) * 57.3) * 0.4)) + (variable.swim_amount * (math.sin(query.life_time * 76.776372) * 2.865)) - this","math.lerp(this, 14.325, variable.swim_amount) - this","math.lerp(this, -14.325, variable.swim_amount) + (variable.swim_amount * (math.cos(query.life_time * 103.13244) * 2.865 + 2.865)) - this"]},"rightleg":{"rotation":["math.lerp(this, math.cos(query.life_time * 390.0) * 0.3, variable.swim_amount)",0,0]}}}},"animation_controllers":{"humanoid_baby_big_head":{"initial_state":"default","states":{"baby":{"animations":["humanoid_big_head"],"transitions":[{"default":"!query.is_baby"}]},"default":{"transitions":[{"baby":"query.is_baby"}]}}},"look_at_target":{"initial_state":"default","states":{"default":{"animations":["look_at_target_default"],"transitions":[{"gliding":"query.is_gliding"},{"swimming":"query.is_swimming"}]},"gliding":{"animations":["look_at_target_gliding"],"transitions":[{"swimming":"query.is_swimming"},{"default":"!query.is_gliding"}]},"swimming":{"animations":["look_at_target_swimming"],"transitions":[{"gliding":"query.is_gliding"},{"default":"!query.is_swimming"}]}}},"move":{"initial_state":"default","states":{"default":{"animations":["move"]}}},"riding":{"initial_state":"default","states":{"default":{"transitions":[{"riding":"query.is_riding"}]},"riding":{"animations":["riding.arms","riding.legs"],"transitions":[{"default":"!query.is_riding"}]}}},"holding":{"initial_state":"default","states":{"default":{"animations":["holding"]}}},"brandish_spear":{"initial_state":"default","states":{"brandish_spear":{"animations":["brandish_spear"],"transitions":[{"default":"!variable.is_brandishing_spear"}]},"default":{"transitions":[{"brandish_spear":"variable.is_brandishing_spear"}]}}},"charging":{"initial_state":"default","states":{"charging":{"animations":["charging"],"transitions":[{"default":"!query.is_charging"}]},"default":{"transitions":[{"charging":"query.is_charging"}]}}},"attack":{"initial_state":"default","states":{"attacking":{"animations":["attack.rotations"],"transitions":[{"default":"variable.attack_time < 0.0"}]},"default":{"transitions":[{"attacking":"variable.attack_time >= 0.0"}]}}},"sneaking":{"initial_state":"default","states":{"default":{"transitions":[{"sneaking":"query.is_sneaking"}]},"sneaking":{"animations":["sneaking"],"transitions":[{"default":"!query.is_sneaking"}]}}},"bob":{"initial_state":"default","states":{"default":{"animations":["bob"]}}},"damage_nearby_mobs":{"initial_state":"default","states":{"damage_nearby_mobs":{"animations":["damage_nearby_mobs"],"transitions":[{"default":"!variable.damage_nearby_mobs"}]},"default":{"transitions":[{"damage_nearby_mobs":"variable.damage_nearby_mobs"}]}}},"bow_and_arrow":{"initial_state":"default","states":{"bow_and_arrow":{"animations":["bow_and_arrow"],"transitions":[{"default":"!query.has_target"}]},"default":{"transitions":[{"bow_and_arrow":"query.has_target"}]}}},"use_item_progress":{"initial_state":"default","states":{"default":{"transitions":[{"use_item_progress":"( variable.use_item_interval_progress > 0.0 ) || ( variable.use_item_startup_progress > 0.0 )"}]},"use_item_progress":{"animations":["use_item_progress"],"transitions":[{"default":"( variable.use_item_interval_progress <= 0.0 ) && ( variable.use_item_startup_progress <= 0.0 )"}]}}},"zombie_attack_bare_hand":{"initial_state":"default","states":{"default":{"transitions":[{"is_bare_hand":"variable.is_holding_left != 1.0"}]},"is_bare_hand":{"animations":["zombie_attack_bare_hand"],"transitions":[{"default":"variable.is_holding_left == 1.0"}]}}},"swimming":{"initial_state":"default","states":{"default":{"transitions":[{"is_swimming":"variable.swim_amount > 0.0"}]},"is_swimming":{"animations":["swimming"],"transitions":[{"default":"variable.swim_amount <= 0.0"}]}}}},"render_controllers":["controller.render.zombie"],"enable_attachables":true},"zombie_horse":{"identifier":"minecraft:zombie_horse","textures":{"base_brown":"textures/entity/horse/horse_brown","base_white":"textures/entity/horse/horse_white","base_chestnut":"textures/entity/horse/horse_chestnut","base_creamy":"textures/entity/horse/horse_creamy","base_black":"textures/entity/horse/horse_black","base_gray":"textures/entity/horse/horse_gray","base_darkbrown":"textures/entity/horse/horse_darkbrown","markings_none":"textures/entity/horse/horse_markings_none","markings_white":"textures/entity/horse/horse_markings_white","markings_whitefield":"textures/entity/horse/horse_markings_whitefield","markings_whitedots":"textures/entity/horse/horse_markings_whitedots","markings_blackdots":"textures/entity/horse/horse_markings_blackdots","mule":"textures/entity/horse/mule","donkey":"textures/entity/horse/donkey","skeleton":"textures/entity/horse/horse_skeleton","zombie":"textures/entity/horse/horse_zombie","armor_none":"textures/entity/horse/armor/horse_armor_none","armor_leather":"textures/entity/horse/armor/horse_armor_leather","armor_iron":"textures/entity/horse/armor/horse_armor_iron","armor_gold":"textures/entity/horse/armor/horse_armor_gold","armor_diamond":"textures/entity/horse/armor/horse_armor_diamond"},"geometry":{"default":{"visible_bounds_width":2,"visible_bounds_height":3,"visible_bounds_offset":[0,1,0],"texturewidth":128,"textureheight":128,"bones":[{"name":"Body","pivot":[0,13,9],"rotation":[0,0,0],"cubes":[{"origin":[-5,11,-10],"size":[10,10,24],"uv":[0,34]}]},{"name":"TailA","pivot":[0,21,14],"rotation":[-65,0,0],"cubes":[{"origin":[-1,20,14],"size":[2,2,3],"uv":[44,0]}]},{"name":"TailB","pivot":[0,21,14],"rotation":[-65,0,0],"cubes":[{"origin":[-1.5,19,17],"size":[3,4,7],"uv":[38,7]}]},{"name":"TailC","pivot":[0,21,14],"rotation":[-80.34,0,0],"cubes":[{"origin":[-1.5,21.5,23],"size":[3,4,7],"uv":[24,3]}]},{"name":"Leg1A","pivot":[4,15,11],"rotation":[0,0,0],"cubes":[{"origin":[1.5,8,8.5],"size":[4,9,5],"uv":[78,29]}]},{"name":"Leg1B","pivot":[4,8,11],"rotation":[0,0,0],"cubes":[{"origin":[2,3,9.5],"size":[3,5,3],"uv":[78,43]}]},{"name":"Leg1C","pivot":[4,8,11],"rotation":[0,0,0],"cubes":[{"origin":[1.5,-0.1,9],"size":[4,3,4],"uv":[78,51]}]},{"name":"Leg2A","pivot":[-4,15,11],"rotation":[0,0,0],"cubes":[{"origin":[-5.5,8,8.5],"size":[4,9,5],"uv":[96,29]}]},{"name":"Leg2B","pivot":[-4,8,11],"rotation":[0,0,0],"cubes":[{"origin":[-5,3,9.5],"size":[3,5,3],"uv":[96,43]}]},{"name":"Leg2C","pivot":[-4,8,11],"rotation":[0,0,0],"cubes":[{"origin":[-5.5,-0.1,9],"size":[4,3,4],"uv":[96,51]}]},{"name":"Leg3A","pivot":[4,15,-8],"rotation":[0,0,0],"cubes":[{"origin":[2.1,8,-10.1],"size":[3,8,4],"uv":[44,29]}]},{"name":"Leg3B","pivot":[4,8,-8],"rotation":[0,0,0],"cubes":[{"origin":[2.1,3,-9.6],"size":[3,5,3],"uv":[44,41]}]},{"name":"Leg3C","pivot":[4,8,-8],"rotation":[0,0,0],"cubes":[{"origin":[1.6,-0.1,-10.1],"size":[4,3,4],"uv":[44,51]}]},{"name":"Leg4A","pivot":[-4,15,-8],"rotation":[0,0,0],"cubes":[{"origin":[-5.1,8,-10.1],"size":[3,8,4],"uv":[60,29]}]},{"name":"Leg4B","pivot":[-4,8,-8],"rotation":[0,0,0],"cubes":[{"origin":[-5.1,3,-9.6],"size":[3,5,3],"uv":[60,41]}]},{"name":"Leg4C","pivot":[-4,8,-8],"rotation":[0,0,0],"cubes":[{"origin":[-5.6,-0.1,-10.1],"size":[4,3,4],"uv":[60,51]}]},{"name":"Head","pivot":[0,20,-10],"rotation":[30,0,0],"cubes":[{"origin":[-2.5,25,-11.5],"size":[5,5,7],"uv":[0,0]}]},{"name":"UMouth","pivot":[0,20.05,-10],"rotation":[30,0,0],"cubes":[{"origin":[-2,27.05,-17],"size":[4,3,6],"uv":[24,18]}]},{"name":"LMouth","pivot":[0,20,-10],"rotation":[30,0,0],"cubes":[{"origin":[-2,25,-16.5],"size":[4,2,5],"uv":[24,27]}]},{"name":"Ear1","pivot":[0,20,-10],"rotation":[30,0,0],"cubes":[{"origin":[0.45,29,-6],"size":[2,3,1],"uv":[0,0]}]},{"name":"Ear2","pivot":[0,20,-10],"rotation":[30,0,0],"cubes":[{"origin":[-2.45,29,-6],"size":[2,3,1],"uv":[0,0]}]},{"name":"MuleEarL","pivot":[0,20,-10],"rotation":[30,0,15],"cubes":[{"origin":[-2,29,-6],"size":[2,7,1],"uv":[0,12]}]},{"name":"MuleEarR","pivot":[0,20,-10],"rotation":[30,0,-15],"cubes":[{"origin":[0,29,-6],"size":[2,7,1],"uv":[0,12]}]},{"name":"Neck","pivot":[0,20,-10],"rotation":[30,0,0],"cubes":[{"origin":[-2.05,15.8,-12],"size":[4,14,8],"uv":[0,12]}]},{"name":"Bag1","pivot":[-7.5,21,10],"rotation":[0,90,0],"cubes":[{"origin":[-10.5,13,10],"size":[8,8,3],"uv":[0,34]}]},{"name":"Bag2","pivot":[4.5,21,10],"rotation":[0,90,0],"cubes":[{"origin":[1.5,13,10],"size":[8,8,3],"uv":[0,47]}]},{"name":"Saddle","pivot":[0,22,2],"rotation":[0,0,0],"cubes":[{"origin":[-5,21,-1],"size":[10,1,8],"uv":[80,0]}]},{"name":"SaddleB","pivot":[0,22,2],"rotation":[0,0,0],"cubes":[{"origin":[-1.5,22,-1],"size":[3,1,2],"uv":[106,9]}]},{"name":"SaddleC","pivot":[0,22,2],"rotation":[0,0,0],"cubes":[{"origin":[-4,22,5],"size":[8,1,2],"uv":[80,9]}]},{"name":"SaddleL2","pivot":[5,21,2],"rotation":[0,0,0],"cubes":[{"origin":[4.5,13,1],"size":[1,2,2],"uv":[74,0]}]},{"name":"SaddleL","pivot":[5,21,2],"rotation":[0,0,0],"cubes":[{"origin":[4.5,15,1.5],"size":[1,6,1],"uv":[70,0]}]},{"name":"SaddleR2","pivot":[-5,21,2],"rotation":[0,0,0],"cubes":[{"origin":[-5.5,13,1],"size":[1,2,2],"uv":[74,4]}]},{"name":"SaddleR","pivot":[-5,21,2],"rotation":[0,0,0],"cubes":[{"origin":[-5.5,15,1.5],"size":[1,6,1],"uv":[80,0]}]},{"name":"SaddleMouthL","pivot":[0,20,-10],"rotation":[30,0,0],"cubes":[{"origin":[1.5,26,-14],"size":[1,2,2],"uv":[74,13]}]},{"name":"SaddleMouthR","pivot":[0,20,-10],"rotation":[30,0,0],"cubes":[{"origin":[-2.5,26,-14],"size":[1,2,2],"uv":[74,13]}]},{"name":"SaddleMouthLine","pivot":[0,20,-10],"rotation":[0,0,0],"cubes":[{"origin":[2.6,23,-16],"size":[0,3,16],"uv":[44,10]}]},{"name":"SaddleMouthLineR","pivot":[0,20,-10],"rotation":[0,0,0],"cubes":[{"origin":[-2.6,23,-16],"size":[0,3,16],"uv":[44,5]}]},{"name":"Mane","pivot":[0,20,-10],"rotation":[30,0,0],"cubes":[{"origin":[-1,15.5,-5],"size":[2,16,4],"uv":[58,0]}]},{"name":"HeadSaddle","pivot":[0,20,-10],"rotation":[30,0,0],"cubes":[{"origin":[-2.5,25.1,-17],"size":[5,5,12],"uv":[80,12],"inflate":0.05}]}]}},"spawn_egg":{"texture":"spawn_egg","texture_index":33}},"zombified_piglin":{"identifier":"minecraft:zombie_pigman","min_engine_version":"1.8.0","materials":{"default":"zombie"},"textures":{"default":"textures/entity/piglin/zombified_piglin"},"geometry":{"default":{"bones":[{"name":"body","pivot":[0,24,0],"cubes":[{"origin":[-4,12,-2],"size":[8,12,4],"uv":[16,16]},{"origin":[-4,12,-2],"size":[8,12,4],"uv":[16,32],"inflate":0.25}]},{"name":"head","parent":"body","pivot":[0,24,0],"cubes":[{"origin":[-5,24,-4],"size":[10,8,8],"uv":[0,0],"inflate":-0.02},{"origin":[-2,24,-5],"size":[4,4,1],"uv":[31,1]},{"origin":[2,24,-5],"size":[1,2,1],"uv":[2,4]},{"origin":[-3,24,-5],"size":[1,2,1],"uv":[2,0]}],"inflate":-0.02},{"name":"leftear","parent":"head","pivot":[5,30,0],"rotation":[0,0,-30],"cubes":[{"origin":[4,25,-2],"size":[1,5,4],"uv":[51,6]}]},{"name":"rightear","parent":"head","pivot":[-5,30,0],"rotation":[0,0,30],"cubes":[{"origin":[-5,25,-2],"size":[1,5,4],"uv":[39,6]}]},{"name":"hat","parent":"head","pivot":[0,24,0]},{"name":"rightarm","parent":"body","pivot":[-5,22,0],"cubes":[{"origin":[-8,12,-2],"size":[4,12,4],"uv":[40,16]},{"origin":[-8,12,-2],"size":[4,12,4],"uv":[40,32],"inflate":0.25}]},{"name":"rightItem","parent":"rightarm","pivot":[-6,15,1]},{"name":"leftarm","parent":"body","pivot":[5,22,0],"cubes":[{"origin":[4,12,-2],"size":[4,12,4],"uv":[32,48]},{"origin":[4,12,-2],"size":[4,12,4],"uv":[48,48],"inflate":0.25}]},{"name":"leftItem","parent":"leftArm","pivot":[6,15,1]},{"name":"rightleg","parent":"body","pivot":[-1.9,12,0],"cubes":[{"origin":[-4,0,-2],"size":[4,12,4],"uv":[0,16]},{"origin":[-4,0,-2],"size":[4,12,4],"uv":[0,32],"inflate":0.25}]},{"name":"leftleg","parent":"body","pivot":[1.9,12,0],"cubes":[{"origin":[0,0,-2],"size":[4,12,4],"uv":[16,48]},{"origin":[0,0,-2],"size":[4,12,4],"uv":[0,48],"inflate":0.25}]}],"visible_bounds_width":2,"visible_bounds_height":2,"visible_bounds_offset":[0,1,0],"texturewidth":64,"textureheight":64}},"spawn_egg":{"texture":"spawn_egg","texture_index":13},"scripts":{"pre_animation":["variable.tcos0 = (Math.cos(query.modified_distance_moved * 38.17) * query.modified_move_speed / variable.gliding_speed_value) * 57.3;"]},"animations":{"humanoid_big_head":{"loop":true,"bones":{"head":{"scale":1.4}}},"humanoid_base_pose":{"loop":true,"bones":{"waist":{"rotation":[0,0,0]}}},"look_at_target_default":{"loop":true,"bones":{"head":{"relative_to":{"rotation":"entity"},"rotation":["query.target_x_rotation","query.target_y_rotation",0]}}},"look_at_target_gliding":{"loop":true,"bones":{"head":{"rotation":[-45,"query.target_y_rotation",0]}}},"look_at_target_swimming":{"loop":true,"bones":{"head":{"rotation":["math.lerp(query.target_x_rotation, -45.0, variable.swim_amount)","query.target_y_rotation",0]}}},"move":{"loop":true,"bones":{"leftarm":{"rotation":["variable.tcos0",0,0]},"leftleg":{"rotation":["variable.tcos0 * -1.4",0,0]},"rightarm":{"rotation":["-variable.tcos0",0,0]},"rightleg":{"rotation":["variable.tcos0 * 1.4",0,0]}}},"riding.arms":{"loop":true,"bones":{"leftarm":{"rotation":[-36,0,0]},"rightarm":{"rotation":[-36,0,0]}}},"riding.legs":{"loop":true,"bones":{"leftleg":{"rotation":["-72.0 - this","-18.0 - this","-this"]},"rightleg":{"rotation":["-72.0 - this","18.0 - this","-this"]}}},"holding":{"loop":true,"bones":{"leftarm":{"rotation":["variable.is_holding_left ? (-this * 0.5 - 18.0) : 0.0",0,0]},"rightarm":{"rotation":["variable.is_holding_right ? (-this * 0.5 - 18.0) : 0.0",0,0]}}},"brandish_spear":{"loop":true,"bones":{"rightarm":{"rotation":["this * -0.5 - 157.5 - 22.5 * variable.charge_amount","-this",0]}}},"charging":{"loop":true,"bones":{"rightarm":{"rotation":["22.5 * variable.charge_amount - this","-this",0]}}},"attack.rotations":{"loop":true,"bones":{"body":{"rotation":[0,"math.sin(math.sqrt(variable.attack_time) * 360) * 11.46 - this",0]},"leftarm":{"rotation":["math.sin(math.sqrt(variable.attack_time) * 360) * 11.46",0,0]},"rightarm":{"rotation":["math.sin(1.0 - math.pow(1.0 - variable.attack_time, 3.0) * 180.0) * (variable.is_brandishing_spear ? -1.0 : 1.0 )","variable.is_brandishing_spear ? 0.0 : (math.sin(math.sqrt(variable.attack_time) * 360) * 11.46) * 2.0",0]}}},"sneaking":{"loop":true,"bones":{"body":{"rotation":["0.5 - this",0,0]},"head":{"position":[0,1,0]},"leftarm":{"rotation":[72,0,0]},"leftleg":{"position":[0,-3,4]},"rightarm":{"rotation":[72,0,0]},"rightleg":{"position":[0,-3,4]}}},"bob":{"loop":true,"bones":{"leftarm":{"rotation":[0,0,"((math.cos(query.life_time * 103.2) * 2.865) + 2.865) *-1.0"]},"rightarm":{"rotation":[0,0,"(math.cos(query.life_time * 103.2) * 2.865) + 2.865"]}}},"damage_nearby_mobs":{"loop":true,"bones":{"leftarm":{"rotation":["-45.0-this","-this","-this"]},"leftleg":{"rotation":["45.0-this","-this","-this"]},"rightarm":{"rotation":["45.0-this","-this","-this"]},"rightleg":{"rotation":["-45.0-this","-this","-this"]}}},"bow_and_arrow":{"loop":true,"bones":{"leftarm":{"rotation":["query.target_x_rotation - 90.0 - math.sin(query.life_time * 76.8) * 2.865 - this","query.target_y_rotation + 28.65","-(math.cos(query.life_time * 103.2) * 2.865) - 2.865"]},"rightarm":{"rotation":["query.target_x_rotation - 90.0 + math.sin(query.life_time * 76.8) * 2.865 - this","query.target_y_rotation - 5.73","(math.cos(query.life_time * 103.2) * 2.865) + 2.865"]}}},"swimming":{"animation_length":1.3,"loop":true,"bones":{"leftarm":{"rotation":{"0.7":{"post":["math.lerp(this, 11.25 * math.mod(query.modified_distance_moved, 26.0), variable.leftarmswim_amount)","math.lerp(this, 180.0, variable.leftarmswim_amount)","math.lerp(this, 72.77 + 13.4 * math.mod(query.modified_distance_moved, 26.0), variable.leftarmswim_amount)"],"pre":["math.lerp(this, 0.0, variable.leftarmswim_amount)","math.lerp(this, 180.0, variable.leftarmswim_amount)","math.lerp(this, 180.0 - 0.01877 * (-65.0 * math.mod(query.modified_distance_moved, 26.0) + math.mod(query.modified_distance_moved, 26.0) * math.mod(query.modified_distance_moved, 26.0)), variable.leftarmswim_amount)"]},"1.1":["math.lerp(this, 11.25 * math.mod(query.modified_distance_moved, 26.0), variable.leftarmswim_amount)","math.lerp(this, 180.0, variable.leftarmswim_amount)","math.lerp(this, 72.77 + 13.4 * math.mod(query.modified_distance_moved, 26.0), variable.leftarmswim_amount)"],"1.3":{"post":["math.lerp(this, 90.0 - (22.5 * math.mod(query.modified_distance_moved, 26.0)), variable.leftarmswim_amount)","math.lerp(this, 180.0, variable.leftarmswim_amount)","math.lerp(this, 180.0, variable.leftarmswim_amount)"],"pre":["math.lerp(this, 11.25 * math.mod(query.modified_distance_moved, 26.0), variable.leftarmswim_amount)","math.lerp(this, 180.0, variable.leftarmswim_amount)","math.lerp(this, 72.77 + 13.4 * math.mod(query.modified_distance_moved, 26.0), variable.leftarmswim_amount)"]}}},"leftleg":{"rotation":["math.lerp(this, math.cos(query.modified_distance_moved * 19.5 + 180.0) * 17.2, variable.leftarmswim_amount) - this",0,0]},"rightarm":{"rotation":{"0.7":{"post":["math.lerp(this, 11.25 * math.mod(query.modified_distance_moved, 26.0), variable.rightarmswim_amount)","math.lerp(this, 180.0, variable.rightarmswim_amount)","math.lerp(this, 72.77 + 13.4 * math.mod(query.modified_distance_moved, 26.0), variable.rightarmswim_amount)"],"pre":["math.lerp(this, 0.0, variable.rightarmswim_amount)","math.lerp(this, 180.0, variable.rightarmswim_amount)","math.lerp(this, -0.1019 * (-65.0 * math.mod(query.modified_distance_moved, 26.0) + math.mod(query.modified_distance_moved, 26.0) * math.mod(query.modified_distance_moved, 26.0)), variable.rightarmswim_amount)"]},"1.1":["math.lerp(this, 11.25 * math.mod(query.modified_distance_moved, 26.0), variable.rightarmswim_amount)","math.lerp(this, 180.0, variable.rightarmswim_amount)","math.lerp(this, 72.77 + 13.4 * math.mod(query.modified_distance_moved, 26.0), variable.rightarmswim_amount)"],"1.3":{"post":["math.lerp(this, 90.0 - (22.5 * math.mod(query.modified_distance_moved, 26.0)), variable.rightarmswim_amount)","math.lerp(this, 180.0, variable.rightarmswim_amount)","math.lerp(this, 180.0, variable.rightarmswim_amount)"],"pre":["math.lerp(this, 11.25 * math.mod(query.modified_distance_moved, 26.0), variable.rightarmswim_amount)","math.lerp(this, 180.0, variable.rightarmswim_amount)","math.lerp(this, 72.77 + 13.4 * math.mod(query.modified_distance_moved, 26.0), variable.rightarmswim_amount)"]}}},"rightleg":{"rotation":["math.lerp(this, math.cos(query.modified_distance_moved * 19.5) * 17.2, variable.leftarmswim_amount) - this",0,0]}}},"use_item_progress":{"loop":true,"bones":{"rightarm":{"rotation":["variable.use_item_startup_progress * -60.0 + variable.use_item_interval_progress * 11.25","variable.use_item_startup_progress * -22.5 + variable.use_item_interval_progress * 11.25","variable.use_item_startup_progress * -5.625 + variable.use_item_interval_progress * 11.25"]}}},"zombie_attack_bare_hand":{"loop":true,"bones":{"leftarm":{"rotation":["-90.0 - ((math.sin(variable.attack_time * 180.0) * 57.3) * 1.2 - (math.sin((1.0 - (1.0 - variable.attack_time) * (1.0 - variable.attack_time)) * 180.0) * 57.3) * 0.4) - (math.sin(query.life_time * 76.776372) * 2.865) - this","5.73 - ((math.sin(variable.attack_time * 180.0) * 57.3) * 0.6) - this","math.cos(query.life_time * 103.13244) * -2.865 - 2.865 - this"]},"rightarm":{"rotation":["90.0 * (variable.is_brandishing_spear - 1.0) - ((math.sin(variable.attack_time * 180.0) * 57.3) * 1.2 - (math.sin((1.0 - (1.0 - variable.attack_time) * (1.0 - variable.attack_time)) * 180.0) * 57.3) * 0.4) + (math.sin(query.life_time * 76.776372) * 2.865) - this","(math.sin(variable.attack_time * 180.0) * 57.3) * 0.6 - 5.73 - this","math.cos(query.life_time * 103.13244) * 2.865 + 2.865 - this"]}}}},"animation_controllers":{"humanoid_baby_big_head":{"initial_state":"default","states":{"baby":{"animations":["humanoid_big_head"],"transitions":[{"default":"!query.is_baby"}]},"default":{"transitions":[{"baby":"query.is_baby"}]}}},"humanoid_base_pose":{"initial_state":"default","states":{"default":{"animations":["humanoid_base_pose"]}}},"look_at_target":{"initial_state":"default","states":{"default":{"animations":["look_at_target_default"],"transitions":[{"gliding":"query.is_gliding"},{"swimming":"query.is_swimming"}]},"gliding":{"animations":["look_at_target_gliding"],"transitions":[{"swimming":"query.is_swimming"},{"default":"!query.is_gliding"}]},"swimming":{"animations":["look_at_target_swimming"],"transitions":[{"gliding":"query.is_gliding"},{"default":"!query.is_swimming"}]}}},"move":{"initial_state":"default","states":{"default":{"animations":["move"]}}},"riding":{"initial_state":"default","states":{"default":{"transitions":[{"riding":"query.is_riding"}]},"riding":{"animations":["riding.arms","riding.legs"],"transitions":[{"default":"!query.is_riding"}]}}},"holding":{"initial_state":"default","states":{"default":{"animations":["holding"]}}},"brandish_spear":{"initial_state":"default","states":{"brandish_spear":{"animations":["brandish_spear"],"transitions":[{"default":"!variable.is_brandishing_spear"}]},"default":{"transitions":[{"brandish_spear":"variable.is_brandishing_spear"}]}}},"charging":{"initial_state":"default","states":{"charging":{"animations":["charging"],"transitions":[{"default":"!query.is_charging"}]},"default":{"transitions":[{"charging":"query.is_charging"}]}}},"attack":{"initial_state":"default","states":{"attacking":{"animations":["attack.rotations"],"transitions":[{"default":"variable.attack_time < 0.0"}]},"default":{"transitions":[{"attacking":"variable.attack_time >= 0.0"}]}}},"sneaking":{"initial_state":"default","states":{"default":{"transitions":[{"sneaking":"query.is_sneaking"}]},"sneaking":{"animations":["sneaking"],"transitions":[{"default":"!query.is_sneaking"}]}}},"bob":{"initial_state":"default","states":{"default":{"animations":["bob"]}}},"damage_nearby_mobs":{"initial_state":"default","states":{"damage_nearby_mobs":{"animations":["damage_nearby_mobs"],"transitions":[{"default":"!variable.damage_nearby_mobs"}]},"default":{"transitions":[{"damage_nearby_mobs":"variable.damage_nearby_mobs"}]}}},"bow_and_arrow":{"initial_state":"default","states":{"bow_and_arrow":{"animations":["bow_and_arrow"],"transitions":[{"default":"!query.has_target"}]},"default":{"transitions":[{"bow_and_arrow":"query.has_target"}]}}},"swimming":{"initial_state":"default","states":{"default":{"transitions":[{"swimming":"variable.swim_amount > 0.0"}]},"swimming":{"animations":["swimming"],"transitions":[{"default":"variable.swim_amount <= 0.0"}]}}},"use_item_progress":{"initial_state":"default","states":{"default":{"transitions":[{"use_item_progress":"( variable.use_item_interval_progress > 0.0 ) || ( variable.use_item_startup_progress > 0.0 )"}]},"use_item_progress":{"animations":["use_item_progress"],"transitions":[{"default":"( variable.use_item_interval_progress <= 0.0 ) && ( variable.use_item_startup_progress <= 0.0 )"}]}}},"zombie_attack_bare_hand":{"initial_state":"default","states":{"default":{"transitions":[{"is_bare_hand":"variable.is_holding_left != 1.0"}]},"is_bare_hand":{"animations":["zombie_attack_bare_hand"],"transitions":[{"default":"variable.is_holding_left == 1.0"}]}}}},"render_controllers":["controller.render.zombie_pigman"],"enable_attachables":true},"zombie_villager":{"identifier":"minecraft:zombie_villager","min_engine_version":"1.8.0","materials":{"default":"zombie_villager"},"textures":{"smith":"textures/entity/zombie_villager/profession/weaponsmith","butcher":"textures/entity/zombie_villager/profession/butcher","librarian":"textures/entity/zombie_villager/profession/librarian","priest":"textures/entity/zombie_villager/profession/cleric","farmer":"textures/entity/zombie_villager/profession/farmer"},"geometry":{"default":{"visible_bounds_width":1.5,"visible_bounds_height":2.5,"visible_bounds_offset":[0,1.25,0],"texturewidth":64,"textureheight":64,"bones":[{"name":"hat","pivot":[0,24,0],"cubes":[{"origin":[-4,24,-4],"size":[8,8,8],"uv":[32,0],"inflate":0.5}],"neverRender":true},{"name":"head","parent":"body","reset":true,"pivot":[0,24,0],"cubes":[{"origin":[-4,24,-4],"size":[8,10,8],"uv":[0,0],"inflate":0.25},{"origin":[-1,23,-6],"size":[2,4,2],"uv":[24,0],"inflate":0.25}]},{"name":"hat","parent":"head","pivot":[0,24,0],"cubes":[{"origin":[-4,24,-4],"size":[8,8,8],"uv":[32,0],"inflate":0.5}],"neverRender":true},{"name":"body","parent":"waist","reset":true,"pivot":[0,24,0],"cubes":[{"origin":[-4,12,-3],"size":[8,12,6],"uv":[16,20]},{"origin":[-4,6,-3],"size":[8,18,6],"uv":[0,38],"inflate":0.5}]},{"name":"waist","neverRender":true,"pivot":[0,12,0]},{"name":"rightArm","parent":"body","reset":true,"pivot":[-5,22,0],"cubes":[{"origin":[-8,12,-2],"size":[4,12,4],"uv":[44,38]}]},{"name":"rightItem","pivot":[-6,15,1],"neverRender":true,"parent":"rightArm"},{"name":"leftArm","parent":"body","reset":true,"mirror":true,"pivot":[5,22,0],"cubes":[{"origin":[4,12,-2],"size":[4,12,4],"uv":[44,38]}]},{"name":"rightLeg","parent":"body","reset":true,"pivot":[-2,12,0],"cubes":[{"origin":[-4,0,-2],"size":[4,12,4],"uv":[0,22]}]},{"name":"leftLeg","parent":"body","reset":true,"mirror":true,"pivot":[2,12,0],"cubes":[{"origin":[0,0,-2],"size":[4,12,4],"uv":[0,22]}]}]}},"scripts":{"pre_animation":["variable.tcos0 = (Math.cos(query.modified_distance_moved * 38.17) * query.modified_move_speed / variable.gliding_speed_value) * 57.3;"]},"animations":{"humanoid_big_head":{"loop":true,"bones":{"head":{"scale":1.4}}},"humanoid_base_pose":{"loop":true,"bones":{"waist":{"rotation":[0,0,0]}}},"look_at_target_default":{"loop":true,"bones":{"head":{"relative_to":{"rotation":"entity"},"rotation":["query.target_x_rotation","query.target_y_rotation",0]}}},"look_at_target_gliding":{"loop":true,"bones":{"head":{"rotation":[-45,"query.target_y_rotation",0]}}},"look_at_target_swimming":{"loop":true,"bones":{"head":{"rotation":["math.lerp(query.target_x_rotation, -45.0, variable.swim_amount)","query.target_y_rotation",0]}}},"move":{"loop":true,"bones":{"leftarm":{"rotation":["variable.tcos0",0,0]},"leftleg":{"rotation":["variable.tcos0 * -1.4",0,0]},"rightarm":{"rotation":["-variable.tcos0",0,0]},"rightleg":{"rotation":["variable.tcos0 * 1.4",0,0]}}},"riding.arms":{"loop":true,"bones":{"leftarm":{"rotation":[-36,0,0]},"rightarm":{"rotation":[-36,0,0]}}},"riding.legs":{"loop":true,"bones":{"leftleg":{"rotation":["-72.0 - this","-18.0 - this","-this"]},"rightleg":{"rotation":["-72.0 - this","18.0 - this","-this"]}}},"holding":{"loop":true,"bones":{"leftarm":{"rotation":["variable.is_holding_left ? (-this * 0.5 - 18.0) : 0.0",0,0]},"rightarm":{"rotation":["variable.is_holding_right ? (-this * 0.5 - 18.0) : 0.0",0,0]}}},"brandish_spear":{"loop":true,"bones":{"rightarm":{"rotation":["this * -0.5 - 157.5 - 22.5 * variable.charge_amount","-this",0]}}},"charging":{"loop":true,"bones":{"rightarm":{"rotation":["22.5 * variable.charge_amount - this","-this",0]}}},"attack.rotations":{"loop":true,"bones":{"body":{"rotation":[0,"math.sin(math.sqrt(variable.attack_time) * 360) * 11.46 - this",0]},"leftarm":{"rotation":["math.sin(math.sqrt(variable.attack_time) * 360) * 11.46",0,0]},"rightarm":{"rotation":["math.sin(1.0 - math.pow(1.0 - variable.attack_time, 3.0) * 180.0) * (variable.is_brandishing_spear ? -1.0 : 1.0 )","variable.is_brandishing_spear ? 0.0 : (math.sin(math.sqrt(variable.attack_time) * 360) * 11.46) * 2.0",0]}}},"sneaking":{"loop":true,"bones":{"body":{"rotation":["0.5 - this",0,0]},"head":{"position":[0,1,0]},"leftarm":{"rotation":[72,0,0]},"leftleg":{"position":[0,-3,4]},"rightarm":{"rotation":[72,0,0]},"rightleg":{"position":[0,-3,4]}}},"bob":{"loop":true,"bones":{"leftarm":{"rotation":[0,0,"((math.cos(query.life_time * 103.2) * 2.865) + 2.865) *-1.0"]},"rightarm":{"rotation":[0,0,"(math.cos(query.life_time * 103.2) * 2.865) + 2.865"]}}},"damage_nearby_mobs":{"loop":true,"bones":{"leftarm":{"rotation":["-45.0-this","-this","-this"]},"leftleg":{"rotation":["45.0-this","-this","-this"]},"rightarm":{"rotation":["45.0-this","-this","-this"]},"rightleg":{"rotation":["-45.0-this","-this","-this"]}}},"bow_and_arrow":{"loop":true,"bones":{"leftarm":{"rotation":["query.target_x_rotation - 90.0 - math.sin(query.life_time * 76.8) * 2.865 - this","query.target_y_rotation + 28.65","-(math.cos(query.life_time * 103.2) * 2.865) - 2.865"]},"rightarm":{"rotation":["query.target_x_rotation - 90.0 + math.sin(query.life_time * 76.8) * 2.865 - this","query.target_y_rotation - 5.73","(math.cos(query.life_time * 103.2) * 2.865) + 2.865"]}}},"use_item_progress":{"loop":true,"bones":{"rightarm":{"rotation":["variable.use_item_startup_progress * -60.0 + variable.use_item_interval_progress * 11.25","variable.use_item_startup_progress * -22.5 + variable.use_item_interval_progress * 11.25","variable.use_item_startup_progress * -5.625 + variable.use_item_interval_progress * 11.25"]}}},"zombie_attack_bare_hand":{"loop":true,"bones":{"leftarm":{"rotation":["-90.0 - ((math.sin(variable.attack_time * 180.0) * 57.3) * 1.2 - (math.sin((1.0 - (1.0 - variable.attack_time) * (1.0 - variable.attack_time)) * 180.0) * 57.3) * 0.4) - (math.sin(query.life_time * 76.776372) * 2.865) - this","5.73 - ((math.sin(variable.attack_time * 180.0) * 57.3) * 0.6) - this","math.cos(query.life_time * 103.13244) * -2.865 - 2.865 - this"]},"rightarm":{"rotation":["90.0 * (variable.is_brandishing_spear - 1.0) - ((math.sin(variable.attack_time * 180.0) * 57.3) * 1.2 - (math.sin((1.0 - (1.0 - variable.attack_time) * (1.0 - variable.attack_time)) * 180.0) * 57.3) * 0.4) + (math.sin(query.life_time * 76.776372) * 2.865) - this","(math.sin(variable.attack_time * 180.0) * 57.3) * 0.6 - 5.73 - this","math.cos(query.life_time * 103.13244) * 2.865 + 2.865 - this"]}}},"swimming":{"loop":true,"bones":{"body":{"position":[0,"variable.swim_amount * -10.0 - this","variable.swim_amount * 9.0 - this"],"rotation":["variable.swim_amount * (90.0 + query.target_x_rotation)",0,0]},"leftarm":{"rotation":["math.lerp(this, -180.0, variable.swim_amount) - (variable.swim_amount * ((math.sin(variable.attack_time * 180.0) * 57.3) * 1.2 - (math.sin((1.0 - (1.0 - variable.attack_time) * (1.0 - variable.attack_time)) * 180.0) * 57.3) * 0.4)) - (variable.swim_amount * (math.sin(query.life_time * 76.776372) * 2.865)) - this","math.lerp(this, 14.325, variable.swim_amount) - this","math.lerp(this, 14.325, variable.swim_amount) - (variable.swim_amount * (math.cos(query.life_time * 103.13244) * 2.865 + 2.865)) - this"]},"leftleg":{"rotation":["math.lerp(this, math.cos(query.life_time * 390.0 + 180.0) * 0.3, variable.swim_amount)",0,0]},"rightarm":{"rotation":["math.lerp(this, -180.0, variable.swim_amount) - (variable.swim_amount * ((math.sin(variable.attack_time * 180.0) * 57.3) * 1.2 - (math.sin((1.0 - (1.0 - variable.attack_time) * (1.0 - variable.attack_time)) * 180.0) * 57.3) * 0.4)) + (variable.swim_amount * (math.sin(query.life_time * 76.776372) * 2.865)) - this","math.lerp(this, 14.325, variable.swim_amount) - this","math.lerp(this, -14.325, variable.swim_amount) + (variable.swim_amount * (math.cos(query.life_time * 103.13244) * 2.865 + 2.865)) - this"]},"rightleg":{"rotation":["math.lerp(this, math.cos(query.life_time * 390.0) * 0.3, variable.swim_amount)",0,0]}}}},"animation_controllers":{"humanoid_baby_big_head":{"initial_state":"default","states":{"baby":{"animations":["humanoid_big_head"],"transitions":[{"default":"!query.is_baby"}]},"default":{"transitions":[{"baby":"query.is_baby"}]}}},"humanoid_base_pose":{"initial_state":"default","states":{"default":{"animations":["humanoid_base_pose"]}}},"look_at_target":{"initial_state":"default","states":{"default":{"animations":["look_at_target_default"],"transitions":[{"gliding":"query.is_gliding"},{"swimming":"query.is_swimming"}]},"gliding":{"animations":["look_at_target_gliding"],"transitions":[{"swimming":"query.is_swimming"},{"default":"!query.is_gliding"}]},"swimming":{"animations":["look_at_target_swimming"],"transitions":[{"gliding":"query.is_gliding"},{"default":"!query.is_swimming"}]}}},"move":{"initial_state":"default","states":{"default":{"animations":["move"]}}},"riding":{"initial_state":"default","states":{"default":{"transitions":[{"riding":"query.is_riding"}]},"riding":{"animations":["riding.arms","riding.legs"],"transitions":[{"default":"!query.is_riding"}]}}},"holding":{"initial_state":"default","states":{"default":{"animations":["holding"]}}},"brandish_spear":{"initial_state":"default","states":{"brandish_spear":{"animations":["brandish_spear"],"transitions":[{"default":"!variable.is_brandishing_spear"}]},"default":{"transitions":[{"brandish_spear":"variable.is_brandishing_spear"}]}}},"charging":{"initial_state":"default","states":{"charging":{"animations":["charging"],"transitions":[{"default":"!query.is_charging"}]},"default":{"transitions":[{"charging":"query.is_charging"}]}}},"attack":{"initial_state":"default","states":{"attacking":{"animations":["attack.rotations"],"transitions":[{"default":"variable.attack_time < 0.0"}]},"default":{"transitions":[{"attacking":"variable.attack_time >= 0.0"}]}}},"sneaking":{"initial_state":"default","states":{"default":{"transitions":[{"sneaking":"query.is_sneaking"}]},"sneaking":{"animations":["sneaking"],"transitions":[{"default":"!query.is_sneaking"}]}}},"bob":{"initial_state":"default","states":{"default":{"animations":["bob"]}}},"damage_nearby_mobs":{"initial_state":"default","states":{"damage_nearby_mobs":{"animations":["damage_nearby_mobs"],"transitions":[{"default":"!variable.damage_nearby_mobs"}]},"default":{"transitions":[{"damage_nearby_mobs":"variable.damage_nearby_mobs"}]}}},"bow_and_arrow":{"initial_state":"default","states":{"bow_and_arrow":{"animations":["bow_and_arrow"],"transitions":[{"default":"!query.has_target"}]},"default":{"transitions":[{"bow_and_arrow":"query.has_target"}]}}},"use_item_progress":{"initial_state":"default","states":{"default":{"transitions":[{"use_item_progress":"( variable.use_item_interval_progress > 0.0 ) || ( variable.use_item_startup_progress > 0.0 )"}]},"use_item_progress":{"animations":["use_item_progress"],"transitions":[{"default":"( variable.use_item_interval_progress <= 0.0 ) && ( variable.use_item_startup_progress <= 0.0 )"}]}}},"zombie_attack_bare_hand":{"initial_state":"default","states":{"default":{"transitions":[{"is_bare_hand":"variable.is_holding_left != 1.0"}]},"is_bare_hand":{"animations":["zombie_attack_bare_hand"],"transitions":[{"default":"variable.is_holding_left == 1.0"}]}}},"swimming":{"initial_state":"default","states":{"default":{"transitions":[{"is_swimming":"variable.swim_amount > 0.0"}]},"is_swimming":{"animations":["swimming"],"transitions":[{"default":"variable.swim_amount <= 0.0"}]}}}},"render_controllers":["controller.render.zombie_villager"],"enable_attachables":true,"spawn_egg":{"texture":"spawn_egg","texture_index":42}}}')}},e={};function i(n){var r=e[n];if(void 0!==r)return r.exports;var a=e[n]={exports:{}};return t[n].call(a.exports,a,a.exports,i),a.exports}i.d=(t,e)=>{for(var n in e)i.o(e,n)&&!i.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},i.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),i.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),i.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},(()=>{i.g.THREE=i(2212);const t=i(6194);i(4942);const{Viewer:e,Entity:n}=i(4116),r=i(7046)();let a=!0;const o=new THREE.WebGLRenderer;o.setPixelRatio(window.devicePixelRatio||1),o.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(o.domElement);const s=new e(o);let l=new THREE.OrbitControls(s.camera,o.domElement);!function t(){window.requestAnimationFrame(t),l&&l.update(),s.update(),o.render(s.scene,s.camera)}(),window.addEventListener("resize",(()=>{s.camera.aspect=window.innerWidth/window.innerHeight,s.camera.updateProjectionMatrix(),o.setSize(window.innerWidth,window.innerHeight)})),r.on("version",(e=>{let i;s.setVersion(e),a=!0,s.listen(r),r.on("position",(({pos:e,addMesh:r,yaw:o,pitch:u})=>{if(void 0!==o&&void 0!==u)return l&&(l.dispose(),l=null),void s.setFirstPersonCamera(e,o,u);if(e.y>0&&a&&(l.target.set(e.x,e.y,e.z),s.camera.position.set(e.x,e.y+20,e.z+20),l.update(),a=!1),r){i||(i=new n("1.16.4","player",s.scene).mesh,s.scene.add(i)),new t.Tween(i.position).to({x:e.x,y:e.y,z:e.z},50).start();const r=(o-i.rotation.y)%(2*Math.PI),a=2*r%(2*Math.PI)-r;new t.Tween(i.rotation).to({y:i.rotation.y+a},50).start()}}))}))})()})();